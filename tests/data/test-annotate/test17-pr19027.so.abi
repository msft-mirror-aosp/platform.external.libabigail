<abi-corpus version='2.3' soname='libharfbuzz.so.0'>
  <elf-needed>
    <dependency name='libglib-2.0.so.0'/>
    <dependency name='libfreetype.so.6'/>
    <dependency name='libpng16.so.16'/>
    <dependency name='libpthread.so.0'/>
    <dependency name='librt.so.1'/>
    <dependency name='libbz2.so.1'/>
    <dependency name='libz.so.1'/>
    <dependency name='libm.so.6'/>
    <dependency name='libc.so.6'/>
  </elf-needed>
  <elf-function-symbols>
    <!-- _fini -->
    <elf-symbol name='_fini' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _init -->
    <elf-symbol name='_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_create -->
    <elf-symbol name='hb_blob_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_create_sub_blob -->
    <elf-symbol name='hb_blob_create_sub_blob' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_destroy -->
    <elf-symbol name='hb_blob_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_get_data -->
    <elf-symbol name='hb_blob_get_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_get_data_writable -->
    <elf-symbol name='hb_blob_get_data_writable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_get_empty -->
    <elf-symbol name='hb_blob_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_get_length -->
    <elf-symbol name='hb_blob_get_length' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_get_user_data -->
    <elf-symbol name='hb_blob_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_is_immutable -->
    <elf-symbol name='hb_blob_is_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_make_immutable -->
    <elf-symbol name='hb_blob_make_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_reference -->
    <elf-symbol name='hb_blob_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_blob_set_user_data -->
    <elf-symbol name='hb_blob_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_add -->
    <elf-symbol name='hb_buffer_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_add_codepoints -->
    <elf-symbol name='hb_buffer_add_codepoints' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_add_utf16 -->
    <elf-symbol name='hb_buffer_add_utf16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_add_utf32 -->
    <elf-symbol name='hb_buffer_add_utf32' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_add_utf8 -->
    <elf-symbol name='hb_buffer_add_utf8' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_allocation_successful -->
    <elf-symbol name='hb_buffer_allocation_successful' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_clear_contents -->
    <elf-symbol name='hb_buffer_clear_contents' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_create -->
    <elf-symbol name='hb_buffer_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_deserialize_glyphs -->
    <elf-symbol name='hb_buffer_deserialize_glyphs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_destroy -->
    <elf-symbol name='hb_buffer_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_content_type -->
    <elf-symbol name='hb_buffer_get_content_type' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_direction -->
    <elf-symbol name='hb_buffer_get_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_empty -->
    <elf-symbol name='hb_buffer_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_flags -->
    <elf-symbol name='hb_buffer_get_flags' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_glyph_infos -->
    <elf-symbol name='hb_buffer_get_glyph_infos' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_glyph_positions -->
    <elf-symbol name='hb_buffer_get_glyph_positions' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_language -->
    <elf-symbol name='hb_buffer_get_language' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_length -->
    <elf-symbol name='hb_buffer_get_length' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_replacement_codepoint -->
    <elf-symbol name='hb_buffer_get_replacement_codepoint' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_script -->
    <elf-symbol name='hb_buffer_get_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_segment_properties -->
    <elf-symbol name='hb_buffer_get_segment_properties' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_unicode_funcs -->
    <elf-symbol name='hb_buffer_get_unicode_funcs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_get_user_data -->
    <elf-symbol name='hb_buffer_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_guess_segment_properties -->
    <elf-symbol name='hb_buffer_guess_segment_properties' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_normalize_glyphs -->
    <elf-symbol name='hb_buffer_normalize_glyphs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_pre_allocate -->
    <elf-symbol name='hb_buffer_pre_allocate' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_reference -->
    <elf-symbol name='hb_buffer_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_reset -->
    <elf-symbol name='hb_buffer_reset' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_reverse -->
    <elf-symbol name='hb_buffer_reverse' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_reverse_clusters -->
    <elf-symbol name='hb_buffer_reverse_clusters' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_serialize_format_from_string -->
    <elf-symbol name='hb_buffer_serialize_format_from_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_serialize_format_to_string -->
    <elf-symbol name='hb_buffer_serialize_format_to_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_serialize_glyphs -->
    <elf-symbol name='hb_buffer_serialize_glyphs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_serialize_list_formats -->
    <elf-symbol name='hb_buffer_serialize_list_formats' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_content_type -->
    <elf-symbol name='hb_buffer_set_content_type' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_direction -->
    <elf-symbol name='hb_buffer_set_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_flags -->
    <elf-symbol name='hb_buffer_set_flags' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_language -->
    <elf-symbol name='hb_buffer_set_language' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_length -->
    <elf-symbol name='hb_buffer_set_length' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_replacement_codepoint -->
    <elf-symbol name='hb_buffer_set_replacement_codepoint' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_script -->
    <elf-symbol name='hb_buffer_set_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_segment_properties -->
    <elf-symbol name='hb_buffer_set_segment_properties' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_unicode_funcs -->
    <elf-symbol name='hb_buffer_set_unicode_funcs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_buffer_set_user_data -->
    <elf-symbol name='hb_buffer_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_direction_from_string -->
    <elf-symbol name='hb_direction_from_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_direction_to_string -->
    <elf-symbol name='hb_direction_to_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_create -->
    <elf-symbol name='hb_face_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_create_for_tables -->
    <elf-symbol name='hb_face_create_for_tables' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_destroy -->
    <elf-symbol name='hb_face_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_get_empty -->
    <elf-symbol name='hb_face_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_get_glyph_count -->
    <elf-symbol name='hb_face_get_glyph_count' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_get_index -->
    <elf-symbol name='hb_face_get_index' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_get_upem -->
    <elf-symbol name='hb_face_get_upem' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_get_user_data -->
    <elf-symbol name='hb_face_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_is_immutable -->
    <elf-symbol name='hb_face_is_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_make_immutable -->
    <elf-symbol name='hb_face_make_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_reference -->
    <elf-symbol name='hb_face_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_reference_blob -->
    <elf-symbol name='hb_face_reference_blob' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_reference_table -->
    <elf-symbol name='hb_face_reference_table' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_set_glyph_count -->
    <elf-symbol name='hb_face_set_glyph_count' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_set_index -->
    <elf-symbol name='hb_face_set_index' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_set_upem -->
    <elf-symbol name='hb_face_set_upem' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_face_set_user_data -->
    <elf-symbol name='hb_face_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_feature_from_string -->
    <elf-symbol name='hb_feature_from_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_feature_to_string -->
    <elf-symbol name='hb_feature_to_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_add_glyph_origin_for_direction -->
    <elf-symbol name='hb_font_add_glyph_origin_for_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_create -->
    <elf-symbol name='hb_font_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_create_sub_font -->
    <elf-symbol name='hb_font_create_sub_font' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_destroy -->
    <elf-symbol name='hb_font_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_create -->
    <elf-symbol name='hb_font_funcs_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_destroy -->
    <elf-symbol name='hb_font_funcs_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_get_empty -->
    <elf-symbol name='hb_font_funcs_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_get_user_data -->
    <elf-symbol name='hb_font_funcs_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_is_immutable -->
    <elf-symbol name='hb_font_funcs_is_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_make_immutable -->
    <elf-symbol name='hb_font_funcs_make_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_reference -->
    <elf-symbol name='hb_font_funcs_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_contour_point_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_contour_point_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_extents_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_extents_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_from_name_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_from_name_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_h_advance_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_h_advance_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_h_kerning_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_h_kerning_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_h_origin_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_h_origin_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_name_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_name_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_v_advance_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_v_advance_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_v_kerning_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_v_kerning_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_glyph_v_origin_func -->
    <elf-symbol name='hb_font_funcs_set_glyph_v_origin_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_funcs_set_user_data -->
    <elf-symbol name='hb_font_funcs_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_empty -->
    <elf-symbol name='hb_font_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_face -->
    <elf-symbol name='hb_font_get_face' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph -->
    <elf-symbol name='hb_font_get_glyph' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_advance_for_direction -->
    <elf-symbol name='hb_font_get_glyph_advance_for_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_contour_point -->
    <elf-symbol name='hb_font_get_glyph_contour_point' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_contour_point_for_origin -->
    <elf-symbol name='hb_font_get_glyph_contour_point_for_origin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_extents -->
    <elf-symbol name='hb_font_get_glyph_extents' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_extents_for_origin -->
    <elf-symbol name='hb_font_get_glyph_extents_for_origin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_from_name -->
    <elf-symbol name='hb_font_get_glyph_from_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_h_advance -->
    <elf-symbol name='hb_font_get_glyph_h_advance' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_h_kerning -->
    <elf-symbol name='hb_font_get_glyph_h_kerning' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_h_origin -->
    <elf-symbol name='hb_font_get_glyph_h_origin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_kerning_for_direction -->
    <elf-symbol name='hb_font_get_glyph_kerning_for_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_name -->
    <elf-symbol name='hb_font_get_glyph_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_origin_for_direction -->
    <elf-symbol name='hb_font_get_glyph_origin_for_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_v_advance -->
    <elf-symbol name='hb_font_get_glyph_v_advance' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_v_kerning -->
    <elf-symbol name='hb_font_get_glyph_v_kerning' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_glyph_v_origin -->
    <elf-symbol name='hb_font_get_glyph_v_origin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_parent -->
    <elf-symbol name='hb_font_get_parent' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_ppem -->
    <elf-symbol name='hb_font_get_ppem' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_scale -->
    <elf-symbol name='hb_font_get_scale' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_get_user_data -->
    <elf-symbol name='hb_font_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_glyph_from_string -->
    <elf-symbol name='hb_font_glyph_from_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_glyph_to_string -->
    <elf-symbol name='hb_font_glyph_to_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_is_immutable -->
    <elf-symbol name='hb_font_is_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_make_immutable -->
    <elf-symbol name='hb_font_make_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_reference -->
    <elf-symbol name='hb_font_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_set_funcs -->
    <elf-symbol name='hb_font_set_funcs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_set_funcs_data -->
    <elf-symbol name='hb_font_set_funcs_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_set_ppem -->
    <elf-symbol name='hb_font_set_ppem' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_set_scale -->
    <elf-symbol name='hb_font_set_scale' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_set_user_data -->
    <elf-symbol name='hb_font_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_font_subtract_glyph_origin_for_direction -->
    <elf-symbol name='hb_font_subtract_glyph_origin_for_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ft_face_create -->
    <elf-symbol name='hb_ft_face_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ft_face_create_cached -->
    <elf-symbol name='hb_ft_face_create_cached' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ft_font_create -->
    <elf-symbol name='hb_ft_font_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ft_font_get_face -->
    <elf-symbol name='hb_ft_font_get_face' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ft_font_set_funcs -->
    <elf-symbol name='hb_ft_font_set_funcs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_glib_get_unicode_funcs -->
    <elf-symbol name='hb_glib_get_unicode_funcs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_glib_script_from_script -->
    <elf-symbol name='hb_glib_script_from_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_glib_script_to_script -->
    <elf-symbol name='hb_glib_script_to_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_language_from_string -->
    <elf-symbol name='hb_language_from_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_language_get_default -->
    <elf-symbol name='hb_language_get_default' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_language_to_string -->
    <elf-symbol name='hb_language_to_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_font_set_funcs -->
    <elf-symbol name='hb_ot_font_set_funcs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_collect_lookups -->
    <elf-symbol name='hb_ot_layout_collect_lookups' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_feature_get_lookups -->
    <elf-symbol name='hb_ot_layout_feature_get_lookups' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_get_attach_points -->
    <elf-symbol name='hb_ot_layout_get_attach_points' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_get_glyph_class -->
    <elf-symbol name='hb_ot_layout_get_glyph_class' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_get_glyphs_in_class -->
    <elf-symbol name='hb_ot_layout_get_glyphs_in_class' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_get_ligature_carets -->
    <elf-symbol name='hb_ot_layout_get_ligature_carets' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_get_size_params -->
    <elf-symbol name='hb_ot_layout_get_size_params' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_has_glyph_classes -->
    <elf-symbol name='hb_ot_layout_has_glyph_classes' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_has_positioning -->
    <elf-symbol name='hb_ot_layout_has_positioning' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_has_substitution -->
    <elf-symbol name='hb_ot_layout_has_substitution' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_language_find_feature -->
    <elf-symbol name='hb_ot_layout_language_find_feature' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_language_get_feature_indexes -->
    <elf-symbol name='hb_ot_layout_language_get_feature_indexes' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_language_get_feature_tags -->
    <elf-symbol name='hb_ot_layout_language_get_feature_tags' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_language_get_required_feature -->
    <elf-symbol name='hb_ot_layout_language_get_required_feature' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_language_get_required_feature_index -->
    <elf-symbol name='hb_ot_layout_language_get_required_feature_index' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_lookup_collect_glyphs -->
    <elf-symbol name='hb_ot_layout_lookup_collect_glyphs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_lookup_substitute_closure -->
    <elf-symbol name='hb_ot_layout_lookup_substitute_closure' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_lookup_would_substitute -->
    <elf-symbol name='hb_ot_layout_lookup_would_substitute' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_script_find_language -->
    <elf-symbol name='hb_ot_layout_script_find_language' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_script_get_language_tags -->
    <elf-symbol name='hb_ot_layout_script_get_language_tags' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_table_choose_script -->
    <elf-symbol name='hb_ot_layout_table_choose_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_table_find_script -->
    <elf-symbol name='hb_ot_layout_table_find_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_table_get_feature_tags -->
    <elf-symbol name='hb_ot_layout_table_get_feature_tags' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_table_get_lookup_count -->
    <elf-symbol name='hb_ot_layout_table_get_lookup_count' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_layout_table_get_script_tags -->
    <elf-symbol name='hb_ot_layout_table_get_script_tags' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_shape_glyphs_closure -->
    <elf-symbol name='hb_ot_shape_glyphs_closure' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_shape_plan_collect_lookups -->
    <elf-symbol name='hb_ot_shape_plan_collect_lookups' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_tag_from_language -->
    <elf-symbol name='hb_ot_tag_from_language' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_tag_to_language -->
    <elf-symbol name='hb_ot_tag_to_language' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_tag_to_script -->
    <elf-symbol name='hb_ot_tag_to_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_ot_tags_from_script -->
    <elf-symbol name='hb_ot_tags_from_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_script_from_iso15924_tag -->
    <elf-symbol name='hb_script_from_iso15924_tag' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_script_from_string -->
    <elf-symbol name='hb_script_from_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_script_get_horizontal_direction -->
    <elf-symbol name='hb_script_get_horizontal_direction' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_script_to_iso15924_tag -->
    <elf-symbol name='hb_script_to_iso15924_tag' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_segment_properties_equal -->
    <elf-symbol name='hb_segment_properties_equal' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_segment_properties_hash -->
    <elf-symbol name='hb_segment_properties_hash' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_add -->
    <elf-symbol name='hb_set_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_add_range -->
    <elf-symbol name='hb_set_add_range' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_allocation_successful -->
    <elf-symbol name='hb_set_allocation_successful' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_clear -->
    <elf-symbol name='hb_set_clear' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_create -->
    <elf-symbol name='hb_set_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_del -->
    <elf-symbol name='hb_set_del' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_del_range -->
    <elf-symbol name='hb_set_del_range' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_destroy -->
    <elf-symbol name='hb_set_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_get_empty -->
    <elf-symbol name='hb_set_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_get_max -->
    <elf-symbol name='hb_set_get_max' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_get_min -->
    <elf-symbol name='hb_set_get_min' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_get_population -->
    <elf-symbol name='hb_set_get_population' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_get_user_data -->
    <elf-symbol name='hb_set_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_has -->
    <elf-symbol name='hb_set_has' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_intersect -->
    <elf-symbol name='hb_set_intersect' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_invert -->
    <elf-symbol name='hb_set_invert' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_is_empty -->
    <elf-symbol name='hb_set_is_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_is_equal -->
    <elf-symbol name='hb_set_is_equal' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_next -->
    <elf-symbol name='hb_set_next' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_next_range -->
    <elf-symbol name='hb_set_next_range' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_reference -->
    <elf-symbol name='hb_set_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_set -->
    <elf-symbol name='hb_set_set' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_set_user_data -->
    <elf-symbol name='hb_set_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_subtract -->
    <elf-symbol name='hb_set_subtract' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_symmetric_difference -->
    <elf-symbol name='hb_set_symmetric_difference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_set_union -->
    <elf-symbol name='hb_set_union' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape -->
    <elf-symbol name='hb_shape' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_full -->
    <elf-symbol name='hb_shape_full' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_list_shapers -->
    <elf-symbol name='hb_shape_list_shapers' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_create -->
    <elf-symbol name='hb_shape_plan_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_create_cached -->
    <elf-symbol name='hb_shape_plan_create_cached' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_destroy -->
    <elf-symbol name='hb_shape_plan_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_execute -->
    <elf-symbol name='hb_shape_plan_execute' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_get_empty -->
    <elf-symbol name='hb_shape_plan_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_get_shaper -->
    <elf-symbol name='hb_shape_plan_get_shaper' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_get_user_data -->
    <elf-symbol name='hb_shape_plan_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_reference -->
    <elf-symbol name='hb_shape_plan_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_shape_plan_set_user_data -->
    <elf-symbol name='hb_shape_plan_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_tag_from_string -->
    <elf-symbol name='hb_tag_from_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_tag_to_string -->
    <elf-symbol name='hb_tag_to_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_combining_class -->
    <elf-symbol name='hb_unicode_combining_class' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_compose -->
    <elf-symbol name='hb_unicode_compose' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_decompose -->
    <elf-symbol name='hb_unicode_decompose' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_decompose_compatibility -->
    <elf-symbol name='hb_unicode_decompose_compatibility' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_eastasian_width -->
    <elf-symbol name='hb_unicode_eastasian_width' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_create -->
    <elf-symbol name='hb_unicode_funcs_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_destroy -->
    <elf-symbol name='hb_unicode_funcs_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_get_default -->
    <elf-symbol name='hb_unicode_funcs_get_default' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_get_empty -->
    <elf-symbol name='hb_unicode_funcs_get_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_get_parent -->
    <elf-symbol name='hb_unicode_funcs_get_parent' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_get_user_data -->
    <elf-symbol name='hb_unicode_funcs_get_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_is_immutable -->
    <elf-symbol name='hb_unicode_funcs_is_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_make_immutable -->
    <elf-symbol name='hb_unicode_funcs_make_immutable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_reference -->
    <elf-symbol name='hb_unicode_funcs_reference' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_combining_class_func -->
    <elf-symbol name='hb_unicode_funcs_set_combining_class_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_compose_func -->
    <elf-symbol name='hb_unicode_funcs_set_compose_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_decompose_compatibility_func -->
    <elf-symbol name='hb_unicode_funcs_set_decompose_compatibility_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_decompose_func -->
    <elf-symbol name='hb_unicode_funcs_set_decompose_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_eastasian_width_func -->
    <elf-symbol name='hb_unicode_funcs_set_eastasian_width_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_general_category_func -->
    <elf-symbol name='hb_unicode_funcs_set_general_category_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_mirroring_func -->
    <elf-symbol name='hb_unicode_funcs_set_mirroring_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_script_func -->
    <elf-symbol name='hb_unicode_funcs_set_script_func' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_funcs_set_user_data -->
    <elf-symbol name='hb_unicode_funcs_set_user_data' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_general_category -->
    <elf-symbol name='hb_unicode_general_category' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_mirroring -->
    <elf-symbol name='hb_unicode_mirroring' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_unicode_script -->
    <elf-symbol name='hb_unicode_script' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_version -->
    <elf-symbol name='hb_version' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_version_atleast -->
    <elf-symbol name='hb_version_atleast' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hb_version_string -->
    <elf-symbol name='hb_version_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-function-symbols>
  <abi-instr address-size='64' path='hb-blob.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- bool -->
    <type-decl name='bool' size-in-bits='8' id='type-id-1'/>
    <!-- char -->
    <type-decl name='char' size-in-bits='8' id='type-id-2'/>
    <!-- char[40] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='320' id='type-id-3'>
      <!-- <anonymous range>[40] -->
      <subrange length='40' lower-bound='0' upper-bound='39' type-id='type-id-4' id='type-id-5'/>
    </array-type-def>
    <!-- enum hb_memory_mode_t -->
    <enum-decl name='hb_memory_mode_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.h' line='58' column='1' id='type-id-6'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_MEMORY_MODE_DUPLICATE' value='0'/>
      <enumerator name='HB_MEMORY_MODE_READONLY' value='1'/>
      <enumerator name='HB_MEMORY_MODE_WRITABLE' value='2'/>
      <enumerator name='HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE' value='3'/>
    </enum-decl>
    <!-- hb_user_data_array_t::hb_user_data_item_t[2] -->
    <array-type-def dimensions='1' type-id='type-id-8' size-in-bits='384' id='type-id-9'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- int -->
    <type-decl name='int' size-in-bits='32' id='type-id-11'/>
    <!-- long int -->
    <type-decl name='long int' size-in-bits='64' id='type-id-12'/>
    <!-- struct __pthread_internal_list -->
    <class-decl name='__pthread_internal_list' size-in-bits='128' is-struct='yes' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='62' column='1' id='type-id-13'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __pthread_internal_list* __pthread_internal_list::__prev -->
        <var-decl name='__prev' type-id='type-id-14' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- __pthread_internal_list* __pthread_internal_list::__next -->
        <var-decl name='__next' type-id='type-id-14' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='64' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_blob_t -->
    <class-decl name='hb_blob_t' size-in-bits='1216' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='53' column='1' id='type-id-15'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_blob_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- bool hb_blob_t::immutable -->
        <var-decl name='immutable' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- const char* hb_blob_t::data -->
        <var-decl name='data' type-id='type-id-17' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- unsigned int hb_blob_t::length -->
        <var-decl name='length' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1056'>
        <!-- hb_memory_mode_t hb_blob_t::mode -->
        <var-decl name='mode' type-id='type-id-6' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- void* hb_blob_t::user_data -->
        <var-decl name='user_data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- hb_destroy_func_t hb_blob_t::destroy -->
        <var-decl name='destroy' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='64' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t> -->
    <class-decl name='hb_lockable_set_t&lt;hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t&gt;' size-in-bits='512' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='449' column='1' id='type-id-21'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u> hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::items -->
        <var-decl name='items' type-id='type-id-22' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='450' column='1'/>
      </data-member>
      <member-function access='public'>
        <!-- bool hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::find<hb_user_data_key_t*>(hb_user_data_key_t*, hb_user_data_array_t::hb_user_data_item_t*, hb_mutex_t&) -->
        <function-decl name='find&lt;hb_user_data_key_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='496' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>*' -->
          <parameter type-id='type-id-23' is-artificial='yes'/>
          <!-- parameter of type 'hb_user_data_key_t*' -->
          <parameter type-id='type-id-24'/>
          <!-- parameter of type 'hb_user_data_array_t::hb_user_data_item_t*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'hb_mutex_t&' -->
          <parameter type-id='type-id-26'/>
          <!-- bool -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::remove<hb_user_data_key_t*>(hb_user_data_key_t*, hb_mutex_t&) -->
        <function-decl name='remove&lt;hb_user_data_key_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>*' -->
          <parameter type-id='type-id-23' is-artificial='yes'/>
          <!-- parameter of type 'hb_user_data_key_t*' -->
          <parameter type-id='type-id-24'/>
          <!-- parameter of type 'hb_mutex_t&' -->
          <parameter type-id='type-id-26'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- hb_user_data_array_t::hb_user_data_item_t* hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::replace_or_insert<hb_user_data_array_t::hb_user_data_item_t>(hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t&, bool) -->
        <function-decl name='replace_or_insert&lt;hb_user_data_array_t::hb_user_data_item_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='455' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>*' -->
          <parameter type-id='type-id-23' is-artificial='yes'/>
          <!-- parameter of type 'struct hb_user_data_array_t::hb_user_data_item_t' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'hb_mutex_t&' -->
          <parameter type-id='type-id-26'/>
          <!-- parameter of type 'bool' -->
          <parameter type-id='type-id-1'/>
          <!-- hb_user_data_array_t::hb_user_data_item_t* -->
          <return type-id='type-id-25'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- bool hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::find<hb_user_data_key_t*>(hb_user_data_key_t*, hb_user_data_array_t::hb_user_data_item_t*, hb_mutex_t&) -->
        <function-decl name='find&lt;hb_user_data_key_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='496' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>* const' -->
          <parameter type-id='type-id-28' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_user_data_key_t*' -->
          <parameter type-id='type-id-24' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='496' column='1'/>
          <!-- parameter of type 'hb_user_data_array_t::hb_user_data_item_t*' -->
          <parameter type-id='type-id-25' name='i' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='496' column='1'/>
          <!-- parameter of type 'hb_mutex_t&' -->
          <parameter type-id='type-id-26' name='l' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='496' column='1'/>
          <!-- bool -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::remove<hb_user_data_key_t*>(hb_user_data_key_t*, hb_mutex_t&) -->
        <function-decl name='remove&lt;hb_user_data_key_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='480' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>* const' -->
          <parameter type-id='type-id-28' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_user_data_key_t*' -->
          <parameter type-id='type-id-24' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='480' column='1'/>
          <!-- parameter of type 'hb_mutex_t&' -->
          <parameter type-id='type-id-26' name='l' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='480' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- hb_user_data_array_t::hb_user_data_item_t* hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::replace_or_insert<hb_user_data_array_t::hb_user_data_item_t>(hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t&, bool) -->
        <function-decl name='replace_or_insert&lt;hb_user_data_array_t::hb_user_data_item_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='455' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>* const' -->
          <parameter type-id='type-id-28' name='this' is-artificial='yes'/>
          <!-- parameter of type 'struct hb_user_data_array_t::hb_user_data_item_t' -->
          <parameter type-id='type-id-8' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='455' column='1'/>
          <!-- parameter of type 'hb_mutex_t&' -->
          <parameter type-id='type-id-26' name='l' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='455' column='1'/>
          <!-- parameter of type 'bool' -->
          <parameter type-id='type-id-1' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='455' column='1'/>
          <!-- hb_user_data_array_t::hb_user_data_item_t* -->
          <return type-id='type-id-25'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_mutex_t -->
    <class-decl name='hb_mutex_t' size-in-bits='320' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-mutex-private.hh' line='117' column='1' id='type-id-29'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_mutex_impl_t hb_mutex_t::m -->
        <var-decl name='m' type-id='type-id-30' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-mutex-private.hh' line='120' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_object_header_t -->
    <class-decl name='hb_object_header_t' size-in-bits='896' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='101' column='1' id='type-id-16'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_reference_count_t hb_object_header_t::ref_count -->
        <var-decl name='ref_count' type-id='type-id-31' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='102' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_user_data_array_t hb_object_header_t::user_data -->
        <var-decl name='user_data' type-id='type-id-32' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='103' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u> -->
    <class-decl name='hb_prealloced_array_t&lt;hb_user_data_array_t::hb_user_data_item_t, 2u&gt;' size-in-bits='512' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='329' column='1' id='type-id-22'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_user_data_array_t::hb_user_data_item_t* hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::array -->
        <var-decl name='array' type-id='type-id-25' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_user_data_array_t::hb_user_data_item_t hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::static_array[2] -->
        <var-decl name='static_array' type-id='type-id-9' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='333' column='1'/>
      </data-member>
      <member-function access='public'>
        <!-- hb_user_data_array_t::hb_user_data_item_t* hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::find<hb_user_data_key_t*>(hb_user_data_key_t*) -->
        <function-decl name='find&lt;hb_user_data_key_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='394' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>*' -->
          <parameter type-id='type-id-33' is-artificial='yes'/>
          <!-- parameter of type 'hb_user_data_key_t*' -->
          <parameter type-id='type-id-24'/>
          <!-- hb_user_data_array_t::hb_user_data_item_t* -->
          <return type-id='type-id-25'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- hb_user_data_array_t::hb_user_data_item_t* hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::find<hb_user_data_array_t::hb_user_data_item_t>(hb_user_data_array_t::hb_user_data_item_t) -->
        <function-decl name='find&lt;hb_user_data_array_t::hb_user_data_item_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='394' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>*' -->
          <parameter type-id='type-id-33' is-artificial='yes'/>
          <!-- parameter of type 'struct hb_user_data_array_t::hb_user_data_item_t' -->
          <parameter type-id='type-id-8'/>
          <!-- hb_user_data_array_t::hb_user_data_item_t* -->
          <return type-id='type-id-25'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- hb_user_data_array_t::hb_user_data_item_t* hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::find<hb_user_data_key_t*>(hb_user_data_key_t*) -->
        <function-decl name='find&lt;hb_user_data_key_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='394' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>* const' -->
          <parameter type-id='type-id-34' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_user_data_key_t*' -->
          <parameter type-id='type-id-24' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='394' column='1'/>
          <!-- hb_user_data_array_t::hb_user_data_item_t* -->
          <return type-id='type-id-25'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- hb_user_data_array_t::hb_user_data_item_t* hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>::find<hb_user_data_array_t::hb_user_data_item_t>(hb_user_data_array_t::hb_user_data_item_t) -->
        <function-decl name='find&lt;hb_user_data_array_t::hb_user_data_item_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='394' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>* const' -->
          <parameter type-id='type-id-34' name='this' is-artificial='yes'/>
          <!-- parameter of type 'struct hb_user_data_array_t::hb_user_data_item_t' -->
          <parameter type-id='type-id-8' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='394' column='1'/>
          <!-- hb_user_data_array_t::hb_user_data_item_t* -->
          <return type-id='type-id-25'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_reference_count_t -->
    <class-decl name='hb_reference_count_t' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='53' column='1' id='type-id-31'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_atomic_int_t hb_reference_count_t::ref_count -->
        <var-decl name='ref_count' type-id='type-id-35' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='54' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_user_data_array_t -->
    <class-decl name='hb_user_data_array_t' size-in-bits='832' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='70' column='1' id='type-id-32'>
      <member-type access='public'>
        <!-- struct hb_user_data_array_t::hb_user_data_item_t -->
        <class-decl name='hb_user_data_item_t' size-in-bits='192' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='71' column='1' id='type-id-8'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_user_data_key_t* hb_user_data_array_t::hb_user_data_item_t::key -->
            <var-decl name='key' type-id='type-id-24' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='72' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- void* hb_user_data_array_t::hb_user_data_item_t::data -->
            <var-decl name='data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='73' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- hb_destroy_func_t hb_user_data_array_t::hb_user_data_item_t::destroy -->
            <var-decl name='destroy' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='74' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_mutex_t hb_user_data_array_t::lock -->
        <var-decl name='lock' type-id='type-id-29' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='82' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t> hb_user_data_array_t::items -->
        <var-decl name='items' type-id='type-id-21' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-object-private.hh' line='83' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_user_data_key_t -->
    <class-decl name='hb_user_data_key_t' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='334' column='1' id='type-id-36'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- char hb_user_data_key_t::unused -->
        <var-decl name='unused' type-id='type-id-2' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='336' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __pthread_internal_list __pthread_list_t -->
    <typedef-decl name='__pthread_list_t' type-id='type-id-13' filepath='/usr/include/bits/pthreadtypes.h' line='65' column='1' id='type-id-37'/>
    <!-- typedef int hb_atomic_int_t -->
    <typedef-decl name='hb_atomic_int_t' type-id='type-id-11' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-atomic-private.hh' line='94' column='1' id='type-id-35'/>
    <!-- typedef hb_blob_t hb_blob_t -->
    <typedef-decl name='hb_blob_t' type-id='type-id-15' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.h' line='65' column='1' id='type-id-38'/>
    <!-- typedef int hb_bool_t -->
    <typedef-decl name='hb_bool_t' type-id='type-id-11' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='73' column='1' id='type-id-39'/>
    <!-- typedef void (*)(void*) hb_destroy_func_t -->
    <typedef-decl name='hb_destroy_func_t' type-id='type-id-40' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='339' column='1' id='type-id-20'/>
    <!-- typedef pthread_mutex_t hb_mutex_impl_t -->
    <typedef-decl name='hb_mutex_impl_t' type-id='type-id-41' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-mutex-private.hh' line='59' column='1' id='type-id-30'/>
    <!-- typedef hb_user_data_key_t hb_user_data_key_t -->
    <typedef-decl name='hb_user_data_key_t' type-id='type-id-36' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='337' column='1' id='type-id-42'/>
    <!-- union pthread_mutex_t -->
    <union-decl name='pthread_mutex_t' size-in-bits='320' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='77' column='1' id='type-id-41'>
      <member-type access='public'>
        <!-- struct pthread_mutex_t::__pthread_mutex_s -->
        <class-decl name='__pthread_mutex_s' size-in-bits='320' is-struct='yes' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='79' column='1' id='type-id-43'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- int pthread_mutex_t::__pthread_mutex_s::__lock -->
            <var-decl name='__lock' type-id='type-id-11' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='32'>
            <!-- unsigned int pthread_mutex_t::__pthread_mutex_s::__count -->
            <var-decl name='__count' type-id='type-id-18' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='81' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- int pthread_mutex_t::__pthread_mutex_s::__owner -->
            <var-decl name='__owner' type-id='type-id-11' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='82' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='96'>
            <!-- unsigned int pthread_mutex_t::__pthread_mutex_s::__nusers -->
            <var-decl name='__nusers' type-id='type-id-18' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='84' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- int pthread_mutex_t::__pthread_mutex_s::__kind -->
            <var-decl name='__kind' type-id='type-id-11' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='88' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='160'>
            <!-- int pthread_mutex_t::__pthread_mutex_s::__spins -->
            <var-decl name='__spins' type-id='type-id-11' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='90' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- __pthread_list_t pthread_mutex_t::__pthread_mutex_s::__list -->
            <var-decl name='__list' type-id='type-id-37' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='91' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public'>
        <!-- pthread_mutex_t::__pthread_mutex_s pthread_mutex_t::__data -->
        <var-decl name='__data' type-id='type-id-43' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='101' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- char pthread_mutex_t::__size[40] -->
        <var-decl name='__size' type-id='type-id-3' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='102' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- long int pthread_mutex_t::__align -->
        <var-decl name='__align' type-id='type-id-12' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='103' column='1'/>
      </data-member>
    </union-decl>
    <!-- unnamed&#45;enum&#45;underlying&#45;type&#45;32 -->
    <type-decl name='unnamed-enum-underlying-type-32' is-anonymous='yes' size-in-bits='32' alignment-in-bits='32' id='type-id-7'/>
    <!-- unsigned int -->
    <type-decl name='unsigned int' size-in-bits='32' id='type-id-18'/>
    <!-- unsigned long int -->
    <type-decl name='unsigned long int' size-in-bits='64' id='type-id-4'/>
    <!-- __pthread_internal_list* -->
    <pointer-type-def type-id='type-id-13' size-in-bits='64' id='type-id-14'/>
    <!-- char* -->
    <pointer-type-def type-id='type-id-2' size-in-bits='64' id='type-id-44'/>
    <!-- const char -->
    <qualified-type-def type-id='type-id-2' const='yes' id='type-id-45'/>
    <!-- const char* -->
    <pointer-type-def type-id='type-id-45' size-in-bits='64' id='type-id-17'/>
    <!-- const hb_blob_t -->
    <qualified-type-def type-id='type-id-15' const='yes' id='type-id-46'/>
    <!-- const hb_blob_t* -->
    <pointer-type-def type-id='type-id-46' size-in-bits='64' id='type-id-47'/>
    <!-- const hb_object_header_t -->
    <qualified-type-def type-id='type-id-16' const='yes' id='type-id-48'/>
    <!-- const hb_object_header_t* -->
    <pointer-type-def type-id='type-id-48' size-in-bits='64' id='type-id-49'/>
    <!-- const hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u> -->
    <qualified-type-def type-id='type-id-22' const='yes' id='type-id-50'/>
    <!-- const hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>* -->
    <pointer-type-def type-id='type-id-50' size-in-bits='64' id='type-id-51'/>
    <!-- const hb_reference_count_t -->
    <qualified-type-def type-id='type-id-31' const='yes' id='type-id-52'/>
    <!-- const hb_reference_count_t* -->
    <pointer-type-def type-id='type-id-52' size-in-bits='64' id='type-id-53'/>
    <!-- const hb_reference_count_t* const -->
    <qualified-type-def type-id='type-id-53' const='yes' id='type-id-54'/>
    <!-- const hb_user_data_array_t::hb_user_data_item_t -->
    <qualified-type-def type-id='type-id-8' const='yes' id='type-id-55'/>
    <!-- const hb_user_data_array_t::hb_user_data_item_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-55' size-in-bits='64' id='type-id-56'/>
    <!-- const hb_user_data_array_t::hb_user_data_item_t* -->
    <pointer-type-def type-id='type-id-55' size-in-bits='64' id='type-id-57'/>
    <!-- hb_blob_t* -->
    <pointer-type-def type-id='type-id-38' size-in-bits='64' id='type-id-58'/>
    <!-- hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>* -->
    <pointer-type-def type-id='type-id-21' size-in-bits='64' id='type-id-23'/>
    <!-- hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>* const -->
    <qualified-type-def type-id='type-id-23' const='yes' id='type-id-28'/>
    <!-- hb_mutex_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-29' size-in-bits='64' id='type-id-26'/>
    <!-- hb_mutex_t* -->
    <pointer-type-def type-id='type-id-29' size-in-bits='64' id='type-id-59'/>
    <!-- hb_mutex_t* const -->
    <qualified-type-def type-id='type-id-59' const='yes' id='type-id-60'/>
    <!-- hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>* -->
    <pointer-type-def type-id='type-id-22' size-in-bits='64' id='type-id-33'/>
    <!-- hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 2u>* const -->
    <qualified-type-def type-id='type-id-33' const='yes' id='type-id-34'/>
    <!-- hb_reference_count_t* -->
    <pointer-type-def type-id='type-id-31' size-in-bits='64' id='type-id-61'/>
    <!-- hb_reference_count_t* const -->
    <qualified-type-def type-id='type-id-61' const='yes' id='type-id-62'/>
    <!-- hb_user_data_array_t* -->
    <pointer-type-def type-id='type-id-32' size-in-bits='64' id='type-id-63'/>
    <!-- hb_user_data_array_t* const -->
    <qualified-type-def type-id='type-id-63' const='yes' id='type-id-64'/>
    <!-- hb_user_data_array_t::hb_user_data_item_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-8' size-in-bits='64' id='type-id-65'/>
    <!-- hb_user_data_array_t::hb_user_data_item_t* -->
    <pointer-type-def type-id='type-id-8' size-in-bits='64' id='type-id-25'/>
    <!-- hb_user_data_array_t::hb_user_data_item_t* const -->
    <qualified-type-def type-id='type-id-25' const='yes' id='type-id-66'/>
    <!-- hb_user_data_key_t* -->
    <pointer-type-def type-id='type-id-42' size-in-bits='64' id='type-id-24'/>
    <!-- unsigned int* -->
    <pointer-type-def type-id='type-id-18' size-in-bits='64' id='type-id-67'/>
    <!-- void (*)(void*) -->
    <pointer-type-def type-id='type-id-68' size-in-bits='64' id='type-id-40'/>
    <!-- hb_blob_t* hb_blob_create(const char*, unsigned int, hb_memory_mode_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_blob_create' mangled-name='hb_blob_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='97' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_create'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='97' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='98' column='1'/>
      <!-- parameter of type 'enum hb_memory_mode_t' -->
      <parameter type-id='type-id-6' name='mode' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='99' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='100' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='101' column='1'/>
      <!-- hb_blob_t* -->
      <return type-id='type-id-58'/>
    </function-decl>
    <!-- hb_blob_t* hb_blob_create_sub_blob(hb_blob_t*, unsigned int, unsigned int) -->
    <function-decl name='hb_blob_create_sub_blob' mangled-name='hb_blob_create_sub_blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_create_sub_blob'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='parent' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='150' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='151' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='152' column='1'/>
      <!-- hb_blob_t* -->
      <return type-id='type-id-58'/>
    </function-decl>
    <!-- hb_blob_t* hb_blob_get_empty() -->
    <function-decl name='hb_blob_get_empty' mangled-name='hb_blob_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='182' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_get_empty'>
      <!-- hb_blob_t* -->
      <return type-id='type-id-58'/>
    </function-decl>
    <!-- hb_blob_t* hb_blob_reference(hb_blob_t*) -->
    <function-decl name='hb_blob_reference' mangled-name='hb_blob_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='213' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_reference'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='213' column='1'/>
      <!-- hb_blob_t* -->
      <return type-id='type-id-58'/>
    </function-decl>
    <!-- void hb_blob_destroy(hb_blob_t*) -->
    <function-decl name='hb_blob_destroy' mangled-name='hb_blob_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='231' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_destroy'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='231' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_blob_set_user_data(hb_blob_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_blob_set_user_data' mangled-name='hb_blob_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='253' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_set_user_data'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='253' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='254' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='255' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='256' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='257' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_blob_get_user_data(hb_blob_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_blob_get_user_data' mangled-name='hb_blob_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='274' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_get_user_data'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='274' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='275' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- void hb_blob_make_immutable(hb_blob_t*) -->
    <function-decl name='hb_blob_make_immutable' mangled-name='hb_blob_make_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='290' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_make_immutable'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='290' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_blob_is_immutable(hb_blob_t*) -->
    <function-decl name='hb_blob_is_immutable' mangled-name='hb_blob_is_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='309' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_is_immutable'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='309' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- unsigned int hb_blob_get_length(hb_blob_t*) -->
    <function-decl name='hb_blob_get_length' mangled-name='hb_blob_get_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='326' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_get_length'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='326' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- const char* hb_blob_get_data(hb_blob_t*, unsigned int*) -->
    <function-decl name='hb_blob_get_data' mangled-name='hb_blob_get_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='343' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_get_data'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='343' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='343' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-17'/>
    </function-decl>
    <!-- char* hb_blob_get_data_writable(hb_blob_t*, unsigned int*) -->
    <function-decl name='hb_blob_get_data_writable' mangled-name='hb_blob_get_data_writable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='368' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_blob_get_data_writable'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='368' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-blob.cc' line='368' column='1'/>
      <!-- char* -->
      <return type-id='type-id-44'/>
    </function-decl>
    <!-- void -->
    <type-decl name='void' id='type-id-27'/>
    <!-- void* -->
    <pointer-type-def type-id='type-id-27' id='type-id-19'/>
    <!-- void (void*) -->
    <function-type size-in-bits='64' id='type-id-68'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='hb-buffer-serialize.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- const char*[8] -->
    <array-type-def dimensions='1' type-id='type-id-17' size-in-bits='512' id='type-id-69'>
      <!-- <anonymous range>[8] -->
      <subrange length='8' lower-bound='0' upper-bound='7' type-id='type-id-4' id='type-id-70'/>
    </array-type-def>
    <!-- enum hb_buffer_content_type_t -->
    <enum-decl name='hb_buffer_content_type_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='119' column='1' id='type-id-71'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_BUFFER_CONTENT_TYPE_INVALID' value='0'/>
      <enumerator name='HB_BUFFER_CONTENT_TYPE_UNICODE' value='1'/>
      <enumerator name='HB_BUFFER_CONTENT_TYPE_GLYPHS' value='2'/>
    </enum-decl>
    <!-- enum hb_buffer_flags_t -->
    <enum-decl name='hb_buffer_flags_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='174' column='1' id='type-id-72'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_BUFFER_FLAG_DEFAULT' value='0'/>
      <enumerator name='HB_BUFFER_FLAG_BOT' value='1'/>
      <enumerator name='HB_BUFFER_FLAG_EOT' value='2'/>
      <enumerator name='HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES' value='4'/>
    </enum-decl>
    <!-- enum hb_buffer_serialize_flags_t -->
    <enum-decl name='hb_buffer_serialize_flags_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='298' column='1' id='type-id-73'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_BUFFER_SERIALIZE_FLAG_DEFAULT' value='0'/>
      <enumerator name='HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS' value='1'/>
      <enumerator name='HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS' value='2'/>
      <enumerator name='HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES' value='4'/>
    </enum-decl>
    <!-- enum hb_buffer_serialize_format_t -->
    <enum-decl name='hb_buffer_serialize_format_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='305' column='1' id='type-id-74'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_BUFFER_SERIALIZE_FORMAT_TEXT' value='1413830740'/>
      <enumerator name='HB_BUFFER_SERIALIZE_FORMAT_JSON' value='1246973774'/>
      <enumerator name='HB_BUFFER_SERIALIZE_FORMAT_INVALID' value='0'/>
    </enum-decl>
    <!-- enum hb_direction_t -->
    <enum-decl name='hb_direction_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='111' column='1' id='type-id-75'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_DIRECTION_INVALID' value='0'/>
      <enumerator name='HB_DIRECTION_LTR' value='4'/>
      <enumerator name='HB_DIRECTION_RTL' value='5'/>
      <enumerator name='HB_DIRECTION_TTB' value='6'/>
      <enumerator name='HB_DIRECTION_BTT' value='7'/>
    </enum-decl>
    <!-- enum hb_script_t -->
    <enum-decl name='hb_script_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='157' column='1' id='type-id-76'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_SCRIPT_COMMON' value='1517910393'/>
      <enumerator name='HB_SCRIPT_INHERITED' value='1516858984'/>
      <enumerator name='HB_SCRIPT_UNKNOWN' value='1517976186'/>
      <enumerator name='HB_SCRIPT_ARABIC' value='1098015074'/>
      <enumerator name='HB_SCRIPT_ARMENIAN' value='1098018158'/>
      <enumerator name='HB_SCRIPT_BENGALI' value='1113943655'/>
      <enumerator name='HB_SCRIPT_CYRILLIC' value='1132032620'/>
      <enumerator name='HB_SCRIPT_DEVANAGARI' value='1147500129'/>
      <enumerator name='HB_SCRIPT_GEORGIAN' value='1197830002'/>
      <enumerator name='HB_SCRIPT_GREEK' value='1198679403'/>
      <enumerator name='HB_SCRIPT_GUJARATI' value='1198877298'/>
      <enumerator name='HB_SCRIPT_GURMUKHI' value='1198879349'/>
      <enumerator name='HB_SCRIPT_HANGUL' value='1214344807'/>
      <enumerator name='HB_SCRIPT_HAN' value='1214344809'/>
      <enumerator name='HB_SCRIPT_HEBREW' value='1214603890'/>
      <enumerator name='HB_SCRIPT_HIRAGANA' value='1214870113'/>
      <enumerator name='HB_SCRIPT_KANNADA' value='1265525857'/>
      <enumerator name='HB_SCRIPT_KATAKANA' value='1264676449'/>
      <enumerator name='HB_SCRIPT_LAO' value='1281453935'/>
      <enumerator name='HB_SCRIPT_LATIN' value='1281455214'/>
      <enumerator name='HB_SCRIPT_MALAYALAM' value='1298954605'/>
      <enumerator name='HB_SCRIPT_ORIYA' value='1332902241'/>
      <enumerator name='HB_SCRIPT_TAMIL' value='1415671148'/>
      <enumerator name='HB_SCRIPT_TELUGU' value='1415933045'/>
      <enumerator name='HB_SCRIPT_THAI' value='1416126825'/>
      <enumerator name='HB_SCRIPT_TIBETAN' value='1416192628'/>
      <enumerator name='HB_SCRIPT_BOPOMOFO' value='1114599535'/>
      <enumerator name='HB_SCRIPT_BRAILLE' value='1114792297'/>
      <enumerator name='HB_SCRIPT_CANADIAN_SYLLABICS' value='1130458739'/>
      <enumerator name='HB_SCRIPT_CHEROKEE' value='1130915186'/>
      <enumerator name='HB_SCRIPT_ETHIOPIC' value='1165256809'/>
      <enumerator name='HB_SCRIPT_KHMER' value='1265134962'/>
      <enumerator name='HB_SCRIPT_MONGOLIAN' value='1299148391'/>
      <enumerator name='HB_SCRIPT_MYANMAR' value='1299803506'/>
      <enumerator name='HB_SCRIPT_OGHAM' value='1332175213'/>
      <enumerator name='HB_SCRIPT_RUNIC' value='1383427698'/>
      <enumerator name='HB_SCRIPT_SINHALA' value='1399418472'/>
      <enumerator name='HB_SCRIPT_SYRIAC' value='1400468067'/>
      <enumerator name='HB_SCRIPT_THAANA' value='1416126817'/>
      <enumerator name='HB_SCRIPT_YI' value='1500080489'/>
      <enumerator name='HB_SCRIPT_DESERET' value='1148416628'/>
      <enumerator name='HB_SCRIPT_GOTHIC' value='1198486632'/>
      <enumerator name='HB_SCRIPT_OLD_ITALIC' value='1232363884'/>
      <enumerator name='HB_SCRIPT_BUHID' value='1114990692'/>
      <enumerator name='HB_SCRIPT_HANUNOO' value='1214344815'/>
      <enumerator name='HB_SCRIPT_TAGALOG' value='1416064103'/>
      <enumerator name='HB_SCRIPT_TAGBANWA' value='1415669602'/>
      <enumerator name='HB_SCRIPT_CYPRIOT' value='1131442804'/>
      <enumerator name='HB_SCRIPT_LIMBU' value='1281977698'/>
      <enumerator name='HB_SCRIPT_LINEAR_B' value='1281977954'/>
      <enumerator name='HB_SCRIPT_OSMANYA' value='1332964705'/>
      <enumerator name='HB_SCRIPT_SHAVIAN' value='1399349623'/>
      <enumerator name='HB_SCRIPT_TAI_LE' value='1415670885'/>
      <enumerator name='HB_SCRIPT_UGARITIC' value='1432838514'/>
      <enumerator name='HB_SCRIPT_BUGINESE' value='1114990441'/>
      <enumerator name='HB_SCRIPT_COPTIC' value='1131376756'/>
      <enumerator name='HB_SCRIPT_GLAGOLITIC' value='1198285159'/>
      <enumerator name='HB_SCRIPT_KHAROSHTHI' value='1265131890'/>
      <enumerator name='HB_SCRIPT_NEW_TAI_LUE' value='1415670901'/>
      <enumerator name='HB_SCRIPT_OLD_PERSIAN' value='1483761007'/>
      <enumerator name='HB_SCRIPT_SYLOTI_NAGRI' value='1400466543'/>
      <enumerator name='HB_SCRIPT_TIFINAGH' value='1415999079'/>
      <enumerator name='HB_SCRIPT_BALINESE' value='1113681001'/>
      <enumerator name='HB_SCRIPT_CUNEIFORM' value='1483961720'/>
      <enumerator name='HB_SCRIPT_NKO' value='1315663727'/>
      <enumerator name='HB_SCRIPT_PHAGS_PA' value='1349017959'/>
      <enumerator name='HB_SCRIPT_PHOENICIAN' value='1349021304'/>
      <enumerator name='HB_SCRIPT_CARIAN' value='1130459753'/>
      <enumerator name='HB_SCRIPT_CHAM' value='1130914157'/>
      <enumerator name='HB_SCRIPT_KAYAH_LI' value='1264675945'/>
      <enumerator name='HB_SCRIPT_LEPCHA' value='1281716323'/>
      <enumerator name='HB_SCRIPT_LYCIAN' value='1283023721'/>
      <enumerator name='HB_SCRIPT_LYDIAN' value='1283023977'/>
      <enumerator name='HB_SCRIPT_OL_CHIKI' value='1332503403'/>
      <enumerator name='HB_SCRIPT_REJANG' value='1382706791'/>
      <enumerator name='HB_SCRIPT_SAURASHTRA' value='1398895986'/>
      <enumerator name='HB_SCRIPT_SUNDANESE' value='1400204900'/>
      <enumerator name='HB_SCRIPT_VAI' value='1449224553'/>
      <enumerator name='HB_SCRIPT_AVESTAN' value='1098281844'/>
      <enumerator name='HB_SCRIPT_BAMUM' value='1113681269'/>
      <enumerator name='HB_SCRIPT_EGYPTIAN_HIEROGLYPHS' value='1164409200'/>
      <enumerator name='HB_SCRIPT_IMPERIAL_ARAMAIC' value='1098018153'/>
      <enumerator name='HB_SCRIPT_INSCRIPTIONAL_PAHLAVI' value='1349020777'/>
      <enumerator name='HB_SCRIPT_INSCRIPTIONAL_PARTHIAN' value='1349678185'/>
      <enumerator name='HB_SCRIPT_JAVANESE' value='1247901281'/>
      <enumerator name='HB_SCRIPT_KAITHI' value='1265920105'/>
      <enumerator name='HB_SCRIPT_LISU' value='1281979253'/>
      <enumerator name='HB_SCRIPT_MEETEI_MAYEK' value='1299473769'/>
      <enumerator name='HB_SCRIPT_OLD_SOUTH_ARABIAN' value='1398895202'/>
      <enumerator name='HB_SCRIPT_OLD_TURKIC' value='1332898664'/>
      <enumerator name='HB_SCRIPT_SAMARITAN' value='1398893938'/>
      <enumerator name='HB_SCRIPT_TAI_THAM' value='1281453665'/>
      <enumerator name='HB_SCRIPT_TAI_VIET' value='1415673460'/>
      <enumerator name='HB_SCRIPT_BATAK' value='1113683051'/>
      <enumerator name='HB_SCRIPT_BRAHMI' value='1114792296'/>
      <enumerator name='HB_SCRIPT_MANDAIC' value='1298230884'/>
      <enumerator name='HB_SCRIPT_CHAKMA' value='1130457965'/>
      <enumerator name='HB_SCRIPT_MEROITIC_CURSIVE' value='1298494051'/>
      <enumerator name='HB_SCRIPT_MEROITIC_HIEROGLYPHS' value='1298494063'/>
      <enumerator name='HB_SCRIPT_MIAO' value='1349284452'/>
      <enumerator name='HB_SCRIPT_SHARADA' value='1399353956'/>
      <enumerator name='HB_SCRIPT_SORA_SOMPENG' value='1399812705'/>
      <enumerator name='HB_SCRIPT_TAKRI' value='1415670642'/>
      <enumerator name='HB_SCRIPT_BASSA_VAH' value='1113682803'/>
      <enumerator name='HB_SCRIPT_CAUCASIAN_ALBANIAN' value='1097295970'/>
      <enumerator name='HB_SCRIPT_DUPLOYAN' value='1148547180'/>
      <enumerator name='HB_SCRIPT_ELBASAN' value='1164730977'/>
      <enumerator name='HB_SCRIPT_GRANTHA' value='1198678382'/>
      <enumerator name='HB_SCRIPT_KHOJKI' value='1265135466'/>
      <enumerator name='HB_SCRIPT_KHUDAWADI' value='1399418468'/>
      <enumerator name='HB_SCRIPT_LINEAR_A' value='1281977953'/>
      <enumerator name='HB_SCRIPT_MAHAJANI' value='1298229354'/>
      <enumerator name='HB_SCRIPT_MANICHAEAN' value='1298230889'/>
      <enumerator name='HB_SCRIPT_MENDE_KIKAKUI' value='1298493028'/>
      <enumerator name='HB_SCRIPT_MODI' value='1299145833'/>
      <enumerator name='HB_SCRIPT_MRO' value='1299345263'/>
      <enumerator name='HB_SCRIPT_NABATAEAN' value='1315070324'/>
      <enumerator name='HB_SCRIPT_OLD_NORTH_ARABIAN' value='1315009122'/>
      <enumerator name='HB_SCRIPT_OLD_PERMIC' value='1348825709'/>
      <enumerator name='HB_SCRIPT_PAHAWH_HMONG' value='1215131239'/>
      <enumerator name='HB_SCRIPT_PALMYRENE' value='1348562029'/>
      <enumerator name='HB_SCRIPT_PAU_CIN_HAU' value='1348564323'/>
      <enumerator name='HB_SCRIPT_PSALTER_PAHLAVI' value='1349020784'/>
      <enumerator name='HB_SCRIPT_SIDDHAM' value='1399415908'/>
      <enumerator name='HB_SCRIPT_TIRHUTA' value='1416196712'/>
      <enumerator name='HB_SCRIPT_WARANG_CITI' value='1466004065'/>
      <enumerator name='HB_SCRIPT_INVALID' value='0'/>
      <enumerator name='_HB_SCRIPT_MAX_VALUE' value='4294967295'/>
      <enumerator name='_HB_SCRIPT_MAX_VALUE_SIGNED' value='2147483647'/>
    </enum-decl>
    <!-- enum hb_unicode_combining_class_t -->
    <enum-decl name='hb_unicode_combining_class_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='87' column='1' id='type-id-77'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_NOT_REORDERED' value='0'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_OVERLAY' value='1'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_NUKTA' value='7'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_KANA_VOICING' value='8'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_VIRAMA' value='9'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC10' value='10'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC11' value='11'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC12' value='12'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC13' value='13'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC14' value='14'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC15' value='15'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC16' value='16'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC17' value='17'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC18' value='18'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC19' value='19'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC20' value='20'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC21' value='21'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC22' value='22'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC23' value='23'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC24' value='24'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC25' value='25'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC26' value='26'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC27' value='27'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC28' value='28'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC29' value='29'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC30' value='30'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC31' value='31'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC32' value='32'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC33' value='33'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC34' value='34'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC35' value='35'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC36' value='36'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC84' value='84'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC91' value='91'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC103' value='103'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC107' value='107'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC118' value='118'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC122' value='122'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC129' value='129'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC130' value='130'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_CCC133' value='132'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT' value='200'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW' value='202'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE' value='214'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT' value='216'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_BELOW_LEFT' value='218'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_BELOW' value='220'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT' value='222'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_LEFT' value='224'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_RIGHT' value='226'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT' value='228'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_ABOVE' value='230'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT' value='232'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW' value='233'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE' value='234'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT' value='240'/>
      <enumerator name='HB_UNICODE_COMBINING_CLASS_INVALID' value='255'/>
    </enum-decl>
    <!-- enum hb_unicode_general_category_t -->
    <enum-decl name='hb_unicode_general_category_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='46' column='1' id='type-id-78'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_CONTROL' value='0'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_FORMAT' value='1'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED' value='2'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE' value='3'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_SURROGATE' value='4'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER' value='5'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER' value='6'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER' value='7'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER' value='8'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER' value='9'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK' value='10'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK' value='11'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK' value='12'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER' value='13'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER' value='14'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER' value='15'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION' value='16'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION' value='17'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION' value='18'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION' value='19'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION' value='20'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION' value='21'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION' value='22'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL' value='23'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL' value='24'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL' value='25'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL' value='26'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR' value='27'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR' value='28'/>
      <enumerator name='HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR' value='29'/>
    </enum-decl>
    <!-- hb_codepoint_t[2][5] -->
    <array-type-def dimensions='2' type-id='type-id-79' size-in-bits='320' id='type-id-80'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
      <!-- <anonymous range>[5] -->
      <subrange length='5' lower-bound='0' upper-bound='4' type-id='type-id-4' id='type-id-81'/>
    </array-type-def>
    <!-- int16_t[2] -->
    <array-type-def dimensions='1' type-id='type-id-82' size-in-bits='32' id='type-id-83'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- int8_t[4] -->
    <array-type-def dimensions='1' type-id='type-id-84' size-in-bits='32' id='type-id-85'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' lower-bound='0' upper-bound='3' type-id='type-id-4' id='type-id-86'/>
    </array-type-def>
    <!-- short int -->
    <type-decl name='short int' size-in-bits='16' id='type-id-87'/>
    <!-- signed char -->
    <type-decl name='signed char' size-in-bits='8' id='type-id-88'/>
    <!-- struct hb_buffer_t -->
    <class-decl name='hb_buffer_t' size-in-bits='2752' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='46' column='1' id='type-id-89'>
      <member-type access='public'>
        <!-- typedef long int hb_buffer_t::scratch_buffer_t -->
        <typedef-decl name='scratch_buffer_t' type-id='type-id-12' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='190' column='1' id='type-id-90'/>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_buffer_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='47' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- hb_unicode_funcs_t* hb_buffer_t::unicode -->
        <var-decl name='unicode' type-id='type-id-91' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='51' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- hb_buffer_flags_t hb_buffer_t::flags -->
        <var-decl name='flags' type-id='type-id-72' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='992'>
        <!-- hb_codepoint_t hb_buffer_t::replacement -->
        <var-decl name='replacement' type-id='type-id-79' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='53' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- hb_buffer_content_type_t hb_buffer_t::content_type -->
        <var-decl name='content_type' type-id='type-id-71' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- hb_segment_properties_t hb_buffer_t::props -->
        <var-decl name='props' type-id='type-id-92' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- bool hb_buffer_t::in_error -->
        <var-decl name='in_error' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1352'>
        <!-- bool hb_buffer_t::have_output -->
        <var-decl name='have_output' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1360'>
        <!-- bool hb_buffer_t::have_positions -->
        <var-decl name='have_positions' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1376'>
        <!-- unsigned int hb_buffer_t::idx -->
        <var-decl name='idx' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- unsigned int hb_buffer_t::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1440'>
        <!-- unsigned int hb_buffer_t::out_len -->
        <var-decl name='out_len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- unsigned int hb_buffer_t::allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- hb_glyph_info_t* hb_buffer_t::info -->
        <var-decl name='info' type-id='type-id-93' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='68' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- hb_glyph_info_t* hb_buffer_t::out_info -->
        <var-decl name='out_info' type-id='type-id-93' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1664'>
        <!-- hb_glyph_position_t* hb_buffer_t::pos -->
        <var-decl name='pos' type-id='type-id-94' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1728'>
        <!-- unsigned int hb_buffer_t::serial -->
        <var-decl name='serial' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='83' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1760'>
        <!-- uint8_t hb_buffer_t::allocated_var_bytes[8] -->
        <var-decl name='allocated_var_bytes' type-id='type-id-95' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='86' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1856'>
        <!-- const char* hb_buffer_t::allocated_var_owner[8] -->
        <var-decl name='allocated_var_owner' type-id='type-id-69' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='87' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_buffer_t::CONTEXT_LENGTH -->
        <var-decl name='CONTEXT_LENGTH' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2368'>
        <!-- hb_codepoint_t hb_buffer_t::context[2][5] -->
        <var-decl name='context' type-id='type-id-80' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2688'>
        <!-- unsigned int hb_buffer_t::context_len[2] -->
        <var-decl name='context_len' type-id='type-id-97' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-private.hh' line='94' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_glyph_info_t -->
    <class-decl name='hb_glyph_info_t' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='44' column='1' id='type-id-98'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_codepoint_t hb_glyph_info_t::codepoint -->
        <var-decl name='codepoint' type-id='type-id-79' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='45' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- hb_mask_t hb_glyph_info_t::mask -->
        <var-decl name='mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='46' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- uint32_t hb_glyph_info_t::cluster -->
        <var-decl name='cluster' type-id='type-id-100' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='47' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- hb_var_int_t hb_glyph_info_t::var1 -->
        <var-decl name='var1' type-id='type-id-101' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_var_int_t hb_glyph_info_t::var2 -->
        <var-decl name='var2' type-id='type-id-101' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='51' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_glyph_position_t -->
    <class-decl name='hb_glyph_position_t' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='54' column='1' id='type-id-102'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_position_t hb_glyph_position_t::x_advance -->
        <var-decl name='x_advance' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- hb_position_t hb_glyph_position_t::y_advance -->
        <var-decl name='y_advance' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_position_t hb_glyph_position_t::x_offset -->
        <var-decl name='x_offset' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- hb_position_t hb_glyph_position_t::y_offset -->
        <var-decl name='y_offset' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_var_int_t hb_glyph_position_t::var -->
        <var-decl name='var' type-id='type-id-101' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='61' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_segment_properties_t -->
    <class-decl name='hb_segment_properties_t' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='65' column='1' id='type-id-104'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_direction_t hb_segment_properties_t::direction -->
        <var-decl name='direction' type-id='type-id-75' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- hb_script_t hb_segment_properties_t::script -->
        <var-decl name='script' type-id='type-id-76' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_language_t hb_segment_properties_t::language -->
        <var-decl name='language' type-id='type-id-105' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='68' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* hb_segment_properties_t::reserved1 -->
        <var-decl name='reserved1' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void* hb_segment_properties_t::reserved2 -->
        <var-decl name='reserved2' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='71' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_unicode_funcs_t -->
    <class-decl name='hb_unicode_funcs_t' size-in-bits='2560' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='64' column='1' id='type-id-106'>
      <member-type access='public'>
        <!-- struct {hb_destroy_func_t combining_class; hb_destroy_func_t eastasian_width; hb_destroy_func_t general_category; hb_destroy_func_t mirroring; hb_destroy_func_t script; hb_destroy_func_t compose; hb_destroy_func_t decompose; hb_destroy_func_t decompose_compatibility;} -->
        <class-decl name='__anonymous_struct__2' size-in-bits='512' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='215' column='1' id='type-id-107'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_destroy_func_t combining_class -->
            <var-decl name='combining_class' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- hb_destroy_func_t eastasian_width -->
            <var-decl name='eastasian_width' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- hb_destroy_func_t general_category -->
            <var-decl name='general_category' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- hb_destroy_func_t mirroring -->
            <var-decl name='mirroring' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='256'>
            <!-- hb_destroy_func_t script -->
            <var-decl name='script' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='320'>
            <!-- hb_destroy_func_t compose -->
            <var-decl name='compose' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='384'>
            <!-- hb_destroy_func_t decompose -->
            <var-decl name='decompose' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='448'>
            <!-- hb_destroy_func_t decompose_compatibility -->
            <var-decl name='decompose_compatibility' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='217' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <member-type access='public'>
        <!-- struct {hb_unicode_combining_class_func_t combining_class; hb_unicode_eastasian_width_func_t eastasian_width; hb_unicode_general_category_func_t general_category; hb_unicode_mirroring_func_t mirroring; hb_unicode_script_func_t script; hb_unicode_compose_func_t compose; hb_unicode_decompose_func_t decompose; hb_unicode_decompose_compatibility_func_t decompose_compatibility;} -->
        <class-decl name='__anonymous_struct__' size-in-bits='512' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='203' column='1' id='type-id-108'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_unicode_combining_class_func_t combining_class -->
            <var-decl name='combining_class' type-id='type-id-109' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- hb_unicode_eastasian_width_func_t eastasian_width -->
            <var-decl name='eastasian_width' type-id='type-id-110' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- hb_unicode_general_category_func_t general_category -->
            <var-decl name='general_category' type-id='type-id-111' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- hb_unicode_mirroring_func_t mirroring -->
            <var-decl name='mirroring' type-id='type-id-112' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='256'>
            <!-- hb_unicode_script_func_t script -->
            <var-decl name='script' type-id='type-id-113' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='320'>
            <!-- hb_unicode_compose_func_t compose -->
            <var-decl name='compose' type-id='type-id-114' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='384'>
            <!-- hb_unicode_decompose_func_t decompose -->
            <var-decl name='decompose' type-id='type-id-115' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='448'>
            <!-- hb_unicode_decompose_compatibility_func_t decompose_compatibility -->
            <var-decl name='decompose_compatibility' type-id='type-id-116' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='205' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <member-type access='public'>
        <!-- struct {void* combining_class; void* eastasian_width; void* general_category; void* mirroring; void* script; void* compose; void* decompose; void* decompose_compatibility;} -->
        <class-decl name='__anonymous_struct__1' size-in-bits='512' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='209' column='1' id='type-id-117'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- void* combining_class -->
            <var-decl name='combining_class' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- void* eastasian_width -->
            <var-decl name='eastasian_width' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- void* general_category -->
            <var-decl name='general_category' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- void* mirroring -->
            <var-decl name='mirroring' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='256'>
            <!-- void* script -->
            <var-decl name='script' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='320'>
            <!-- void* compose -->
            <var-decl name='compose' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='384'>
            <!-- void* decompose -->
            <var-decl name='decompose' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='448'>
            <!-- void* decompose_compatibility -->
            <var-decl name='decompose_compatibility' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='211' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_unicode_funcs_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- hb_unicode_funcs_t* hb_unicode_funcs_t::parent -->
        <var-decl name='parent' type-id='type-id-118' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='68' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- bool hb_unicode_funcs_t::immutable -->
        <var-decl name='immutable' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- struct {hb_unicode_combining_class_func_t combining_class; hb_unicode_eastasian_width_func_t eastasian_width; hb_unicode_general_category_func_t general_category; hb_unicode_mirroring_func_t mirroring; hb_unicode_script_func_t script; hb_unicode_compose_func_t compose; hb_unicode_decompose_func_t decompose; hb_unicode_decompose_compatibility_func_t decompose_compatibility;} hb_unicode_funcs_t::func -->
        <var-decl name='func' type-id='type-id-108' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='207' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- struct {void* combining_class; void* eastasian_width; void* general_category; void* mirroring; void* script; void* compose; void* decompose; void* decompose_compatibility;} hb_unicode_funcs_t::user_data -->
        <var-decl name='user_data' type-id='type-id-117' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='213' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2048'>
        <!-- struct {hb_destroy_func_t combining_class; hb_destroy_func_t eastasian_width; hb_destroy_func_t general_category; hb_destroy_func_t mirroring; hb_destroy_func_t script; hb_destroy_func_t compose; hb_destroy_func_t decompose; hb_destroy_func_t decompose_compatibility;} hb_unicode_funcs_t::destroy -->
        <var-decl name='destroy' type-id='type-id-107' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode-private.hh' line='219' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef hb_buffer_t hb_buffer_t -->
    <typedef-decl name='hb_buffer_t' type-id='type-id-89' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='93' column='1' id='type-id-119'/>
    <!-- typedef uint32_t hb_codepoint_t -->
    <typedef-decl name='hb_codepoint_t' type-id='type-id-100' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='75' column='1' id='type-id-79'/>
    <!-- typedef hb_font_t hb_font_t -->
    <typedef-decl name='hb_font_t' type-id='type-id-120' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='40' column='1' id='type-id-121'/>
    <!-- typedef hb_glyph_info_t hb_glyph_info_t -->
    <typedef-decl name='hb_glyph_info_t' type-id='type-id-98' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='52' column='1' id='type-id-122'/>
    <!-- typedef hb_glyph_position_t hb_glyph_position_t -->
    <typedef-decl name='hb_glyph_position_t' type-id='type-id-102' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='62' column='1' id='type-id-123'/>
    <!-- typedef const hb_language_impl_t* hb_language_t -->
    <typedef-decl name='hb_language_t' type-id='type-id-124' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='137' column='1' id='type-id-105'/>
    <!-- typedef uint32_t hb_mask_t -->
    <typedef-decl name='hb_mask_t' type-id='type-id-100' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='77' column='1' id='type-id-99'/>
    <!-- typedef int32_t hb_position_t -->
    <typedef-decl name='hb_position_t' type-id='type-id-125' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='76' column='1' id='type-id-103'/>
    <!-- typedef hb_segment_properties_t hb_segment_properties_t -->
    <typedef-decl name='hb_segment_properties_t' type-id='type-id-104' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.h' line='72' column='1' id='type-id-92'/>
    <!-- typedef hb_unicode_combining_class_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) hb_unicode_combining_class_func_t -->
    <typedef-decl name='hb_unicode_combining_class_func_t' type-id='type-id-126' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='224' column='1' id='type-id-109'/>
    <!-- typedef hb_bool_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*, void*) hb_unicode_compose_func_t -->
    <typedef-decl name='hb_unicode_compose_func_t' type-id='type-id-127' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='242' column='1' id='type-id-114'/>
    <!-- typedef unsigned int (*)(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*, void*) hb_unicode_decompose_compatibility_func_t -->
    <typedef-decl name='hb_unicode_decompose_compatibility_func_t' type-id='type-id-128' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='270' column='1' id='type-id-116'/>
    <!-- typedef hb_bool_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*, void*) hb_unicode_decompose_func_t -->
    <typedef-decl name='hb_unicode_decompose_func_t' type-id='type-id-129' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='247' column='1' id='type-id-115'/>
    <!-- typedef unsigned int (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) hb_unicode_eastasian_width_func_t -->
    <typedef-decl name='hb_unicode_eastasian_width_func_t' type-id='type-id-130' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='227' column='1' id='type-id-110'/>
    <!-- typedef hb_unicode_funcs_t hb_unicode_funcs_t -->
    <typedef-decl name='hb_unicode_funcs_t' type-id='type-id-106' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='171' column='1' id='type-id-131'/>
    <!-- typedef hb_unicode_general_category_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) hb_unicode_general_category_func_t -->
    <typedef-decl name='hb_unicode_general_category_func_t' type-id='type-id-132' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='230' column='1' id='type-id-111'/>
    <!-- typedef hb_codepoint_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) hb_unicode_mirroring_func_t -->
    <typedef-decl name='hb_unicode_mirroring_func_t' type-id='type-id-130' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='233' column='1' id='type-id-112'/>
    <!-- typedef hb_script_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) hb_unicode_script_func_t -->
    <typedef-decl name='hb_unicode_script_func_t' type-id='type-id-133' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.h' line='236' column='1' id='type-id-113'/>
    <!-- typedef _hb_var_int_t hb_var_int_t -->
    <typedef-decl name='hb_var_int_t' type-id='type-id-134' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='86' column='1' id='type-id-101'/>
    <!-- typedef short int int16_t -->
    <typedef-decl name='int16_t' type-id='type-id-87' filepath='/usr/include/stdint.h' line='38' column='1' id='type-id-82'/>
    <!-- typedef int int32_t -->
    <typedef-decl name='int32_t' type-id='type-id-11' filepath='/usr/include/stdint.h' line='39' column='1' id='type-id-125'/>
    <!-- typedef signed char int8_t -->
    <typedef-decl name='int8_t' type-id='type-id-88' filepath='/usr/include/stdint.h' line='37' column='1' id='type-id-84'/>
    <!-- typedef unsigned short int uint16_t -->
    <typedef-decl name='uint16_t' type-id='type-id-135' filepath='/usr/include/stdint.h' line='50' column='1' id='type-id-136'/>
    <!-- typedef unsigned int uint32_t -->
    <typedef-decl name='uint32_t' type-id='type-id-18' filepath='/usr/include/stdint.h' line='52' column='1' id='type-id-100'/>
    <!-- typedef unsigned char uint8_t -->
    <typedef-decl name='uint8_t' type-id='type-id-137' filepath='/usr/include/stdint.h' line='49' column='1' id='type-id-138'/>
    <!-- uint16_t[2] -->
    <array-type-def dimensions='1' type-id='type-id-136' size-in-bits='32' id='type-id-139'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- uint8_t[4] -->
    <array-type-def dimensions='1' type-id='type-id-138' size-in-bits='32' id='type-id-140'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' lower-bound='0' upper-bound='3' type-id='type-id-4' id='type-id-86'/>
    </array-type-def>
    <!-- uint8_t[8] -->
    <array-type-def dimensions='1' type-id='type-id-138' size-in-bits='64' id='type-id-95'>
      <!-- <anonymous range>[8] -->
      <subrange length='8' lower-bound='0' upper-bound='7' type-id='type-id-4' id='type-id-70'/>
    </array-type-def>
    <!-- union _hb_var_int_t -->
    <union-decl name='_hb_var_int_t' size-in-bits='32' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='79' column='1' id='type-id-134'>
      <data-member access='public'>
        <!-- uint32_t _hb_var_int_t::u32 -->
        <var-decl name='u32' type-id='type-id-100' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='80' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- int32_t _hb_var_int_t::i32 -->
        <var-decl name='i32' type-id='type-id-125' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='81' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- uint16_t _hb_var_int_t::u16[2] -->
        <var-decl name='u16' type-id='type-id-139' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='82' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- int16_t _hb_var_int_t::i16[2] -->
        <var-decl name='i16' type-id='type-id-83' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='83' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- uint8_t _hb_var_int_t::u8[4] -->
        <var-decl name='u8' type-id='type-id-140' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='84' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- int8_t _hb_var_int_t::i8[4] -->
        <var-decl name='i8' type-id='type-id-85' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='85' column='1'/>
      </data-member>
    </union-decl>
    <!-- unsigned char -->
    <type-decl name='unsigned char' size-in-bits='8' id='type-id-137'/>
    <!-- unsigned int[2] -->
    <array-type-def dimensions='1' type-id='type-id-18' size-in-bits='64' id='type-id-97'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- unsigned short int -->
    <type-decl name='unsigned short int' size-in-bits='16' id='type-id-135'/>
    <!-- const char** -->
    <pointer-type-def type-id='type-id-17' size-in-bits='64' id='type-id-141'/>
    <!-- const hb_buffer_t -->
    <qualified-type-def type-id='type-id-89' const='yes' id='type-id-142'/>
    <!-- const hb_buffer_t* -->
    <pointer-type-def type-id='type-id-142' size-in-bits='64' id='type-id-143'/>
    <!-- const hb_codepoint_t -->
    <qualified-type-def type-id='type-id-79' const='yes' id='type-id-144'/>
    <!-- const hb_codepoint_t* -->
    <pointer-type-def type-id='type-id-144' size-in-bits='64' id='type-id-145'/>
    <!-- const hb_glyph_info_t -->
    <qualified-type-def type-id='type-id-122' const='yes' id='type-id-146'/>
    <!-- const hb_glyph_info_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-146' size-in-bits='64' id='type-id-147'/>
    <!-- const hb_language_impl_t -->
    <qualified-type-def type-id='type-id-148' const='yes' id='type-id-149'/>
    <!-- const hb_language_impl_t* -->
    <pointer-type-def type-id='type-id-149' size-in-bits='64' id='type-id-124'/>
    <!-- const hb_unicode_funcs_t -->
    <qualified-type-def type-id='type-id-106' const='yes' id='type-id-150'/>
    <!-- const hb_unicode_funcs_t* -->
    <pointer-type-def type-id='type-id-150' size-in-bits='64' id='type-id-151'/>
    <!-- const unsigned int -->
    <qualified-type-def type-id='type-id-18' const='yes' id='type-id-96'/>
    <!-- hb_bool_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*, void*) -->
    <pointer-type-def type-id='type-id-152' size-in-bits='64' id='type-id-129'/>
    <!-- hb_bool_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*, void*) -->
    <pointer-type-def type-id='type-id-153' size-in-bits='64' id='type-id-127'/>
    <!-- hb_buffer_t* -->
    <pointer-type-def type-id='type-id-89' size-in-bits='64' id='type-id-154'/>
    <!-- hb_buffer_t* -->
    <pointer-type-def type-id='type-id-119' size-in-bits='64' id='type-id-155'/>
    <!-- hb_buffer_t::scratch_buffer_t* -->
    <pointer-type-def type-id='type-id-90' size-in-bits='64' id='type-id-156'/>
    <!-- hb_codepoint_t* -->
    <pointer-type-def type-id='type-id-79' size-in-bits='64' id='type-id-157'/>
    <!-- hb_font_t* -->
    <pointer-type-def type-id='type-id-121' size-in-bits='64' id='type-id-158'/>
    <!-- hb_glyph_info_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-122' size-in-bits='64' id='type-id-159'/>
    <!-- hb_glyph_info_t* -->
    <pointer-type-def type-id='type-id-122' size-in-bits='64' id='type-id-93'/>
    <!-- hb_glyph_position_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-123' size-in-bits='64' id='type-id-160'/>
    <!-- hb_glyph_position_t* -->
    <pointer-type-def type-id='type-id-123' size-in-bits='64' id='type-id-94'/>
    <!-- hb_script_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <pointer-type-def type-id='type-id-161' size-in-bits='64' id='type-id-133'/>
    <!-- hb_unicode_combining_class_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <pointer-type-def type-id='type-id-162' size-in-bits='64' id='type-id-126'/>
    <!-- hb_unicode_funcs_t* -->
    <pointer-type-def type-id='type-id-106' size-in-bits='64' id='type-id-118'/>
    <!-- hb_unicode_funcs_t* -->
    <pointer-type-def type-id='type-id-131' size-in-bits='64' id='type-id-91'/>
    <!-- hb_unicode_general_category_t (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <pointer-type-def type-id='type-id-163' size-in-bits='64' id='type-id-132'/>
    <!-- unsigned int (*)(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*, void*) -->
    <pointer-type-def type-id='type-id-164' size-in-bits='64' id='type-id-128'/>
    <!-- unsigned int (*)(hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <pointer-type-def type-id='type-id-165' size-in-bits='64' id='type-id-130'/>
    <!-- struct hb_font_t -->
    <class-decl name='hb_font_t' size-in-bits='1536' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='91' column='1' id='type-id-120'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_font_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- hb_bool_t hb_font_t::immutable -->
        <var-decl name='immutable' type-id='type-id-39' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='95' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- hb_font_t* hb_font_t::parent -->
        <var-decl name='parent' type-id='type-id-166' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- hb_face_t* hb_font_t::face -->
        <var-decl name='face' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- int hb_font_t::x_scale -->
        <var-decl name='x_scale' type-id='type-id-11' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1120'>
        <!-- int hb_font_t::y_scale -->
        <var-decl name='y_scale' type-id='type-id-11' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='101' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- unsigned int hb_font_t::x_ppem -->
        <var-decl name='x_ppem' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1184'>
        <!-- unsigned int hb_font_t::y_ppem -->
        <var-decl name='y_ppem' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- hb_font_funcs_t* hb_font_t::klass -->
        <var-decl name='klass' type-id='type-id-168' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- void* hb_font_t::user_data -->
        <var-decl name='user_data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='107' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- hb_destroy_func_t hb_font_t::destroy -->
        <var-decl name='destroy' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='108' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- hb_shaper_data_t hb_font_t::shaper_data -->
        <var-decl name='shaper_data' type-id='type-id-169' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='110' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_language_impl_t -->
    <class-decl name='hb_language_impl_t' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='167' column='1' id='type-id-148'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char hb_language_impl_t::s[1] -->
        <var-decl name='s' type-id='type-id-170' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='168' column='1'/>
      </data-member>
    </class-decl>
    <!-- const char** hb_buffer_serialize_list_formats() -->
    <function-decl name='hb_buffer_serialize_list_formats' mangled-name='hb_buffer_serialize_list_formats' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='46' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_serialize_list_formats'>
      <!-- const char** -->
      <return type-id='type-id-141'/>
    </function-decl>
    <!-- hb_buffer_serialize_format_t hb_buffer_serialize_format_from_string(const char*, int) -->
    <function-decl name='hb_buffer_serialize_format_from_string' mangled-name='hb_buffer_serialize_format_from_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='63' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_serialize_format_from_string'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='str' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='63' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='63' column='1'/>
      <!-- enum hb_buffer_serialize_format_t -->
      <return type-id='type-id-74'/>
    </function-decl>
    <!-- const char* hb_buffer_serialize_format_to_string(hb_buffer_serialize_format_t) -->
    <function-decl name='hb_buffer_serialize_format_to_string' mangled-name='hb_buffer_serialize_format_to_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='80' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_serialize_format_to_string'>
      <!-- parameter of type 'enum hb_buffer_serialize_format_t' -->
      <parameter type-id='type-id-74' name='format' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='80' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-17'/>
    </function-decl>
    <!-- unsigned int hb_buffer_serialize_glyphs(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_font_t*, hb_buffer_serialize_format_t, hb_buffer_serialize_flags_t) -->
    <function-decl name='hb_buffer_serialize_glyphs' mangled-name='hb_buffer_serialize_glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='246' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_serialize_glyphs'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='246' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='247' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='end' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='248' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-44' name='buf' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='249' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='buf_size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='250' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='buf_consumed' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='251' column='1'/>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='252' column='1'/>
      <!-- parameter of type 'enum hb_buffer_serialize_format_t' -->
      <parameter type-id='type-id-74' name='format' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='253' column='1'/>
      <!-- parameter of type 'enum hb_buffer_serialize_flags_t' -->
      <parameter type-id='type-id-73' name='flags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='254' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_bool_t hb_buffer_deserialize_glyphs(hb_buffer_t*, const char*, int, const char**, hb_font_t*, hb_buffer_serialize_format_t) -->
    <function-decl name='hb_buffer_deserialize_glyphs' mangled-name='hb_buffer_deserialize_glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='353' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_deserialize_glyphs'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='353' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='buf' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='354' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='buf_len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='355' column='1'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='type-id-141' name='end_ptr' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='356' column='1'/>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='357' column='1'/>
      <!-- parameter of type 'enum hb_buffer_serialize_format_t' -->
      <parameter type-id='type-id-74' name='format' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer-serialize.cc' line='358' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_script_t (hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <function-type size-in-bits='64' id='type-id-161'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- enum hb_script_t -->
      <return type-id='type-id-76'/>
    </function-type>
    <!-- hb_unicode_combining_class_t (hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <function-type size-in-bits='64' id='type-id-162'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- enum hb_unicode_combining_class_t -->
      <return type-id='type-id-77'/>
    </function-type>
    <!-- hb_unicode_general_category_t (hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <function-type size-in-bits='64' id='type-id-163'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- enum hb_unicode_general_category_t -->
      <return type-id='type-id-78'/>
    </function-type>
    <!-- hb_bool_t (hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-152'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- hb_bool_t (hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-153'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- unsigned int (hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-164'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- unsigned int (hb_unicode_funcs_t*, hb_codepoint_t, void*) -->
    <function-type size-in-bits='64' id='type-id-165'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='hb-buffer.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- struct hb_utf_t<short unsigned int, true> -->
    <class-decl name='hb_utf_t&lt;short unsigned int, true&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-utf-private.hh' line='138' column='1' id='type-id-171'/>
    <!-- struct hb_utf_t<unsigned char, true> -->
    <class-decl name='hb_utf_t&lt;unsigned char, true&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-utf-private.hh' line='39' column='1' id='type-id-172'/>
    <!-- struct hb_utf_t<unsigned int, true> -->
    <class-decl name='hb_utf_t&lt;unsigned int, true&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-utf-private.hh' line='32' column='1' id='type-id-173'/>
    <!-- const hb_segment_properties_t -->
    <qualified-type-def type-id='type-id-92' const='yes' id='type-id-174'/>
    <!-- const hb_segment_properties_t* -->
    <pointer-type-def type-id='type-id-174' size-in-bits='64' id='type-id-175'/>
    <!-- const uint16_t -->
    <qualified-type-def type-id='type-id-136' const='yes' id='type-id-176'/>
    <!-- const uint16_t* -->
    <pointer-type-def type-id='type-id-176' size-in-bits='64' id='type-id-177'/>
    <!-- const uint32_t -->
    <qualified-type-def type-id='type-id-100' const='yes' id='type-id-178'/>
    <!-- const uint32_t* -->
    <pointer-type-def type-id='type-id-178' size-in-bits='64' id='type-id-179'/>
    <!-- const uint8_t -->
    <qualified-type-def type-id='type-id-138' const='yes' id='type-id-180'/>
    <!-- const uint8_t* -->
    <pointer-type-def type-id='type-id-180' size-in-bits='64' id='type-id-181'/>
    <!-- hb_buffer_t* const -->
    <qualified-type-def type-id='type-id-154' const='yes' id='type-id-182'/>
    <!-- hb_segment_properties_t* -->
    <pointer-type-def type-id='type-id-92' size-in-bits='64' id='type-id-183'/>
    <!-- hb_unicode_funcs_t* const -->
    <qualified-type-def type-id='type-id-118' const='yes' id='type-id-184'/>
    <!-- hb_bool_t hb_segment_properties_equal(const hb_segment_properties_t*, const hb_segment_properties_t*) -->
    <function-decl name='hb_segment_properties_equal' mangled-name='hb_segment_properties_equal' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='40' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_segment_properties_equal'>
      <!-- parameter of type 'const hb_segment_properties_t*' -->
      <parameter type-id='type-id-175' name='a' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='40' column='1'/>
      <!-- parameter of type 'const hb_segment_properties_t*' -->
      <parameter type-id='type-id-175' name='b' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='41' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- unsigned int hb_segment_properties_hash(const hb_segment_properties_t*) -->
    <function-decl name='hb_segment_properties_hash' mangled-name='hb_segment_properties_hash' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='52' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_segment_properties_hash'>
      <!-- parameter of type 'const hb_segment_properties_t*' -->
      <parameter type-id='type-id-175' name='p' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='52' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_buffer_t* hb_buffer_create() -->
    <function-decl name='hb_buffer_create' mangled-name='hb_buffer_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='677' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_create'>
      <!-- hb_buffer_t* -->
      <return type-id='type-id-155'/>
    </function-decl>
    <!-- hb_buffer_t* hb_buffer_get_empty() -->
    <function-decl name='hb_buffer_get_empty' mangled-name='hb_buffer_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='699' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_empty'>
      <!-- hb_buffer_t* -->
      <return type-id='type-id-155'/>
    </function-decl>
    <!-- hb_buffer_t* hb_buffer_reference(hb_buffer_t*) -->
    <function-decl name='hb_buffer_reference' mangled-name='hb_buffer_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='731' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_reference'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='731' column='1'/>
      <!-- hb_buffer_t* -->
      <return type-id='type-id-155'/>
    </function-decl>
    <!-- void hb_buffer_destroy(hb_buffer_t*) -->
    <function-decl name='hb_buffer_destroy' mangled-name='hb_buffer_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='745' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_destroy'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='745' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_buffer_set_user_data(hb_buffer_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_buffer_set_user_data' mangled-name='hb_buffer_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='772' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_user_data'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='772' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='773' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='774' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='775' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='776' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_buffer_get_user_data(hb_buffer_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_buffer_get_user_data' mangled-name='hb_buffer_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='793' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_user_data'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='793' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='794' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- void hb_buffer_set_content_type(hb_buffer_t*, hb_buffer_content_type_t) -->
    <function-decl name='hb_buffer_set_content_type' mangled-name='hb_buffer_set_content_type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='810' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_content_type'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='810' column='1'/>
      <!-- parameter of type 'enum hb_buffer_content_type_t' -->
      <parameter type-id='type-id-71' name='content_type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='811' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_buffer_content_type_t hb_buffer_get_content_type(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_content_type' mangled-name='hb_buffer_get_content_type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='827' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_content_type'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='827' column='1'/>
      <!-- enum hb_buffer_content_type_t -->
      <return type-id='type-id-71'/>
    </function-decl>
    <!-- void hb_buffer_set_unicode_funcs(hb_buffer_t*, hb_unicode_funcs_t*) -->
    <function-decl name='hb_buffer_set_unicode_funcs' mangled-name='hb_buffer_set_unicode_funcs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='843' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_unicode_funcs'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='843' column='1'/>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='unicode_funcs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='844' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_unicode_funcs_t* hb_buffer_get_unicode_funcs(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_unicode_funcs' mangled-name='hb_buffer_get_unicode_funcs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='869' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_unicode_funcs'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='869' column='1'/>
      <!-- hb_unicode_funcs_t* -->
      <return type-id='type-id-91'/>
    </function-decl>
    <!-- void hb_buffer_set_direction(hb_buffer_t*, hb_direction_t) -->
    <function-decl name='hb_buffer_set_direction' mangled-name='hb_buffer_set_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='884' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_direction'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='884' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='885' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_direction_t hb_buffer_get_direction(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_direction' mangled-name='hb_buffer_get_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='905' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_direction'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='905' column='1'/>
      <!-- enum hb_direction_t -->
      <return type-id='type-id-75'/>
    </function-decl>
    <!-- void hb_buffer_set_script(hb_buffer_t*, hb_script_t) -->
    <function-decl name='hb_buffer_set_script' mangled-name='hb_buffer_set_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='920' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_script'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='920' column='1'/>
      <!-- parameter of type 'enum hb_script_t' -->
      <parameter type-id='type-id-76' name='script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='921' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_script_t hb_buffer_get_script(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_script' mangled-name='hb_buffer_get_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='940' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_script'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='940' column='1'/>
      <!-- enum hb_script_t -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- void hb_buffer_set_language(hb_buffer_t*, hb_language_t) -->
    <function-decl name='hb_buffer_set_language' mangled-name='hb_buffer_set_language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='955' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_language'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='955' column='1'/>
      <!-- parameter of type 'typedef hb_language_t' -->
      <parameter type-id='type-id-105' name='language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='956' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_language_t hb_buffer_get_language(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_language' mangled-name='hb_buffer_get_language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='975' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_language'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='975' column='1'/>
      <!-- typedef hb_language_t -->
      <return type-id='type-id-105'/>
    </function-decl>
    <!-- void hb_buffer_set_segment_properties(hb_buffer_t*, const hb_segment_properties_t*) -->
    <function-decl name='hb_buffer_set_segment_properties' mangled-name='hb_buffer_set_segment_properties' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='990' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_segment_properties'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='990' column='1'/>
      <!-- parameter of type 'const hb_segment_properties_t*' -->
      <parameter type-id='type-id-175' name='props' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='991' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_get_segment_properties(hb_buffer_t*, hb_segment_properties_t*) -->
    <function-decl name='hb_buffer_get_segment_properties' mangled-name='hb_buffer_get_segment_properties' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1009' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_segment_properties'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1009' column='1'/>
      <!-- parameter of type 'hb_segment_properties_t*' -->
      <parameter type-id='type-id-183' name='props' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1010' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_set_flags(hb_buffer_t*, hb_buffer_flags_t) -->
    <function-decl name='hb_buffer_set_flags' mangled-name='hb_buffer_set_flags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1026' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_flags'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1026' column='1'/>
      <!-- parameter of type 'enum hb_buffer_flags_t' -->
      <parameter type-id='type-id-72' name='flags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1027' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_buffer_flags_t hb_buffer_get_flags(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_flags' mangled-name='hb_buffer_get_flags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1046' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_flags'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1046' column='1'/>
      <!-- enum hb_buffer_flags_t -->
      <return type-id='type-id-72'/>
    </function-decl>
    <!-- void hb_buffer_set_replacement_codepoint(hb_buffer_t*, hb_codepoint_t) -->
    <function-decl name='hb_buffer_set_replacement_codepoint' mangled-name='hb_buffer_set_replacement_codepoint' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1062' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_replacement_codepoint'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1062' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='replacement' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1063' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_codepoint_t hb_buffer_get_replacement_codepoint(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_replacement_codepoint' mangled-name='hb_buffer_get_replacement_codepoint' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1082' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_replacement_codepoint'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1082' column='1'/>
      <!-- typedef hb_codepoint_t -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- void hb_buffer_reset(hb_buffer_t*) -->
    <function-decl name='hb_buffer_reset' mangled-name='hb_buffer_reset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1097' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_reset'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1097' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_clear_contents(hb_buffer_t*) -->
    <function-decl name='hb_buffer_clear_contents' mangled-name='hb_buffer_clear_contents' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1111' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_clear_contents'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1111' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_buffer_pre_allocate(hb_buffer_t*, unsigned int) -->
    <function-decl name='hb_buffer_pre_allocate' mangled-name='hb_buffer_pre_allocate' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1128' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_pre_allocate'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1128' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1128' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_buffer_allocation_successful(hb_buffer_t*) -->
    <function-decl name='hb_buffer_allocation_successful' mangled-name='hb_buffer_allocation_successful' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1144' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_allocation_successful'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1144' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_buffer_add(hb_buffer_t*, hb_codepoint_t, unsigned int) -->
    <function-decl name='hb_buffer_add' mangled-name='hb_buffer_add' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1160' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_add'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1160' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='codepoint' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1161' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='cluster' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1162' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_buffer_set_length(hb_buffer_t*, unsigned int) -->
    <function-decl name='hb_buffer_set_length' mangled-name='hb_buffer_set_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1180' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_set_length'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1180' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1181' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- unsigned int hb_buffer_get_length(hb_buffer_t*) -->
    <function-decl name='hb_buffer_get_length' mangled-name='hb_buffer_get_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1219' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_length'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1219' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_glyph_info_t* hb_buffer_get_glyph_infos(hb_buffer_t*, unsigned int*) -->
    <function-decl name='hb_buffer_get_glyph_infos' mangled-name='hb_buffer_get_glyph_infos' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1237' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_glyph_infos'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1237' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1238' column='1'/>
      <!-- hb_glyph_info_t* -->
      <return type-id='type-id-93'/>
    </function-decl>
    <!-- hb_glyph_position_t* hb_buffer_get_glyph_positions(hb_buffer_t*, unsigned int*) -->
    <function-decl name='hb_buffer_get_glyph_positions' mangled-name='hb_buffer_get_glyph_positions' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1259' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_get_glyph_positions'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1259' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1260' column='1'/>
      <!-- hb_glyph_position_t* -->
      <return type-id='type-id-94'/>
    </function-decl>
    <!-- void hb_buffer_reverse(hb_buffer_t*) -->
    <function-decl name='hb_buffer_reverse' mangled-name='hb_buffer_reverse' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1280' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_reverse'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1280' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_reverse_clusters(hb_buffer_t*) -->
    <function-decl name='hb_buffer_reverse_clusters' mangled-name='hb_buffer_reverse_clusters' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1296' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_reverse_clusters'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1296' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_guess_segment_properties(hb_buffer_t*) -->
    <function-decl name='hb_buffer_guess_segment_properties' mangled-name='hb_buffer_guess_segment_properties' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1326' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_guess_segment_properties'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1326' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_add_utf8(hb_buffer_t*, const char*, int, unsigned int, int) -->
    <function-decl name='hb_buffer_add_utf8' mangled-name='hb_buffer_add_utf8' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1413' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_add_utf8'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1413' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='text' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1414' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='text_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1415' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='item_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1416' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='item_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1417' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_add_utf16(hb_buffer_t*, const uint16_t*, int, unsigned int, int) -->
    <function-decl name='hb_buffer_add_utf16' mangled-name='hb_buffer_add_utf16' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1435' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_add_utf16'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1435' column='1'/>
      <!-- parameter of type 'const uint16_t*' -->
      <parameter type-id='type-id-177' name='text' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1436' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='text_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1437' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='item_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1438' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='item_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1439' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_add_utf32(hb_buffer_t*, const uint32_t*, int, unsigned int, int) -->
    <function-decl name='hb_buffer_add_utf32' mangled-name='hb_buffer_add_utf32' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1457' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_add_utf32'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1457' column='1'/>
      <!-- parameter of type 'const uint32_t*' -->
      <parameter type-id='type-id-179' name='text' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1458' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='text_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1459' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='item_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1460' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='item_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1461' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_add_codepoints(hb_buffer_t*, const hb_codepoint_t*, int, unsigned int, int) -->
    <function-decl name='hb_buffer_add_codepoints' mangled-name='hb_buffer_add_codepoints' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1479' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_add_codepoints'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1479' column='1'/>
      <!-- parameter of type 'const hb_codepoint_t*' -->
      <parameter type-id='type-id-145' name='text' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1480' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='text_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1481' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='item_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1482' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='item_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1483' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_buffer_normalize_glyphs(hb_buffer_t*) -->
    <function-decl name='hb_buffer_normalize_glyphs' mangled-name='hb_buffer_normalize_glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1553' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_buffer_normalize_glyphs'>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-buffer.cc' line='1553' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-common.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- char[1] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='8' id='type-id-185'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- const char[1] -->
    <array-type-def dimensions='1' type-id='type-id-45' size-in-bits='8' id='type-id-170'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- struct hb_language_item_t -->
    <class-decl name='hb_language_item_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='212' column='1' id='type-id-187'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_language_item_t* hb_language_item_t::next -->
        <var-decl name='next' type-id='type-id-188' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='214' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_language_t hb_language_item_t::lang -->
        <var-decl name='lang' type-id='type-id-105' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='215' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef uint32_t hb_tag_t -->
    <typedef-decl name='hb_tag_t' type-id='type-id-100' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.h' line='91' column='1' id='type-id-189'/>
    <!-- const hb_language_item_t -->
    <qualified-type-def type-id='type-id-187' const='yes' id='type-id-190'/>
    <!-- const hb_language_item_t* -->
    <pointer-type-def type-id='type-id-190' size-in-bits='64' id='type-id-191'/>
    <!-- const hb_language_item_t* const -->
    <qualified-type-def type-id='type-id-191' const='yes' id='type-id-192'/>
    <!-- const hb_user_data_array_t::hb_user_data_item_t* const -->
    <qualified-type-def type-id='type-id-57' const='yes' id='type-id-193'/>
    <!-- hb_language_item_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-187' size-in-bits='64' id='type-id-194'/>
    <!-- hb_language_item_t* -->
    <pointer-type-def type-id='type-id-187' size-in-bits='64' id='type-id-188'/>
    <!-- hb_language_item_t* const -->
    <qualified-type-def type-id='type-id-188' const='yes' id='type-id-195'/>
    <!-- hb_tag_t hb_tag_from_string(const char*, int) -->
    <function-decl name='hb_tag_from_string' mangled-name='hb_tag_from_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='70' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_tag_from_string'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='str' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='70' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='70' column='1'/>
      <!-- typedef hb_tag_t -->
      <return type-id='type-id-189'/>
    </function-decl>
    <!-- void hb_tag_to_string(hb_tag_t, char*) -->
    <function-decl name='hb_tag_to_string' mangled-name='hb_tag_to_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='98' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_tag_to_string'>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='98' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-44' name='buf' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='98' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_direction_t hb_direction_from_string(const char*, int) -->
    <function-decl name='hb_direction_from_string' mangled-name='hb_direction_from_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='128' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_direction_from_string'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='str' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='128' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='128' column='1'/>
      <!-- enum hb_direction_t -->
      <return type-id='type-id-75'/>
    </function-decl>
    <!-- const char* hb_direction_to_string(hb_direction_t) -->
    <function-decl name='hb_direction_to_string' mangled-name='hb_direction_to_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='155' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_direction_to_string'>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='155' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-17'/>
    </function-decl>
    <!-- hb_language_t hb_language_from_string(const char*, int) -->
    <function-decl name='hb_language_from_string' mangled-name='hb_language_from_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='293' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_language_from_string'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='str' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='293' column='1'/>
      <!-- typedef hb_language_t -->
      <return type-id='type-id-105'/>
    </function-decl>
    <!-- const char* hb_language_to_string(hb_language_t) -->
    <function-decl name='hb_language_to_string' mangled-name='hb_language_to_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='325' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_language_to_string'>
      <!-- parameter of type 'typedef hb_language_t' -->
      <parameter type-id='type-id-105' name='language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='325' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-17'/>
    </function-decl>
    <!-- hb_language_t hb_language_get_default() -->
    <function-decl name='hb_language_get_default' mangled-name='hb_language_get_default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='341' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_language_get_default'>
      <!-- typedef hb_language_t -->
      <return type-id='type-id-105'/>
    </function-decl>
    <!-- hb_script_t hb_script_from_iso15924_tag(hb_tag_t) -->
    <function-decl name='hb_script_from_iso15924_tag' mangled-name='hb_script_from_iso15924_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='368' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_script_from_iso15924_tag'>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='368' column='1'/>
      <!-- enum hb_script_t -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- hb_script_t hb_script_from_string(const char*, int) -->
    <function-decl name='hb_script_from_string' mangled-name='hb_script_from_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='413' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_script_from_string'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='s' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='413' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='413' column='1'/>
      <!-- enum hb_script_t -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- hb_tag_t hb_script_to_iso15924_tag(hb_script_t) -->
    <function-decl name='hb_script_to_iso15924_tag' mangled-name='hb_script_to_iso15924_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='429' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_script_to_iso15924_tag'>
      <!-- parameter of type 'enum hb_script_t' -->
      <parameter type-id='type-id-76' name='script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='429' column='1'/>
      <!-- typedef hb_tag_t -->
      <return type-id='type-id-189'/>
    </function-decl>
    <!-- hb_direction_t hb_script_get_horizontal_direction(hb_script_t) -->
    <function-decl name='hb_script_get_horizontal_direction' mangled-name='hb_script_get_horizontal_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='445' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_script_get_horizontal_direction'>
      <!-- parameter of type 'enum hb_script_t' -->
      <parameter type-id='type-id-76' name='script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='445' column='1'/>
      <!-- enum hb_direction_t -->
      <return type-id='type-id-75'/>
    </function-decl>
    <!-- void hb_version(unsigned int*, unsigned int*, unsigned int*) -->
    <function-decl name='hb_version' mangled-name='hb_version' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='547' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_version'>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='major' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='547' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='minor' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='548' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='micro' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='549' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- const char* hb_version_string() -->
    <function-decl name='hb_version_string' mangled-name='hb_version_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='566' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_version_string'>
      <!-- const char* -->
      <return type-id='type-id-17'/>
    </function-decl>
    <!-- hb_bool_t hb_version_atleast(unsigned int, unsigned int, unsigned int) -->
    <function-decl name='hb_version_atleast' mangled-name='hb_version_atleast' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='584' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_version_atleast'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='major' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='584' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='minor' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='585' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='micro' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-common.cc' line='586' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-face.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-196' size-in-bits='32' id='type-id-197'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::TableRecord[1] -->
    <array-type-def dimensions='1' type-id='type-id-198' size-in-bits='128' id='type-id-199'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- struct hb_auto_trace_t<0, bool> -->
    <class-decl name='hb_auto_trace_t&lt;0, bool&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='749' column='1' id='type-id-200'>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>*' -->
          <parameter type-id='type-id-201' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>* const' -->
          <parameter type-id='type-id-202' name='this' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67' name='plevel_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='what' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='798' column='1'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='799' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='800' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='message' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='801' column='1'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>*' -->
          <parameter type-id='type-id-201' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>* const' -->
          <parameter type-id='type-id-202' name='this' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67' name='plevel_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='what' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='798' column='1'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='799' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='800' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='message' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='801' column='1'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>*' -->
          <parameter type-id='type-id-201' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>* const' -->
          <parameter type-id='type-id-202' name='this' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67' name='plevel_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='what' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='798' column='1'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='799' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='800' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='message' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='801' column='1'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>*' -->
          <parameter type-id='type-id-201' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, bool>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, bool>* const' -->
          <parameter type-id='type-id-202' name='this' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67' name='plevel_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='what' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='798' column='1'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='799' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='800' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='message' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='801' column='1'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_face_t -->
    <class-decl name='hb_face_t' size-in-bits='1472' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='43' column='1' id='type-id-203'>
      <member-type access='public'>
        <!-- struct hb_face_t::plan_node_t -->
        <class-decl name='plan_node_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='59' column='1' id='type-id-204'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_shape_plan_t* hb_face_t::plan_node_t::shape_plan -->
            <var-decl name='shape_plan' type-id='type-id-205' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='60' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- hb_face_t::plan_node_t* hb_face_t::plan_node_t::next -->
            <var-decl name='next' type-id='type-id-206' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='61' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_face_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='44' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- hb_bool_t hb_face_t::immutable -->
        <var-decl name='immutable' type-id='type-id-39' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='47' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- hb_reference_table_func_t hb_face_t::reference_table_func -->
        <var-decl name='reference_table_func' type-id='type-id-207' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- void* hb_face_t::user_data -->
        <var-decl name='user_data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- hb_destroy_func_t hb_face_t::destroy -->
        <var-decl name='destroy' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='51' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- unsigned int hb_face_t::index -->
        <var-decl name='index' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='53' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1184'>
        <!-- unsigned int hb_face_t::upem -->
        <var-decl name='upem' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- unsigned int hb_face_t::num_glyphs -->
        <var-decl name='num_glyphs' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- hb_shaper_data_t hb_face_t::shaper_data -->
        <var-decl name='shaper_data' type-id='type-id-169' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- hb_face_t::plan_node_t* hb_face_t::shape_plans -->
        <var-decl name='shape_plans' type-id='type-id-206' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face-private.hh' line='62' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_feature_t -->
    <class-decl name='hb_feature_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.h' line='43' column='1' id='type-id-208'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_tag_t hb_feature_t::tag -->
        <var-decl name='tag' type-id='type-id-189' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.h' line='44' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- uint32_t hb_feature_t::value -->
        <var-decl name='value' type-id='type-id-100' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.h' line='45' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int hb_feature_t::start -->
        <var-decl name='start' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.h' line='46' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int hb_feature_t::end -->
        <var-decl name='end' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.h' line='47' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_font_funcs_t -->
    <class-decl name='hb_font_funcs_t' size-in-bits='3072' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='58' column='1' id='type-id-209'>
      <member-type access='public'>
        <!-- struct {hb_destroy_func_t glyph; hb_destroy_func_t glyph_h_advance; hb_destroy_func_t glyph_v_advance; hb_destroy_func_t glyph_h_origin; hb_destroy_func_t glyph_v_origin; hb_destroy_func_t glyph_h_kerning; hb_destroy_func_t glyph_v_kerning; hb_destroy_func_t glyph_extents; hb_destroy_func_t glyph_contour_point; hb_destroy_func_t glyph_name; hb_destroy_func_t glyph_from_name;} -->
        <class-decl name='__anonymous_struct__2' size-in-bits='704' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='78' column='1' id='type-id-210'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_destroy_func_t glyph -->
            <var-decl name='glyph' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- hb_destroy_func_t glyph_h_advance -->
            <var-decl name='glyph_h_advance' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- hb_destroy_func_t glyph_v_advance -->
            <var-decl name='glyph_v_advance' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- hb_destroy_func_t glyph_h_origin -->
            <var-decl name='glyph_h_origin' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='256'>
            <!-- hb_destroy_func_t glyph_v_origin -->
            <var-decl name='glyph_v_origin' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='320'>
            <!-- hb_destroy_func_t glyph_h_kerning -->
            <var-decl name='glyph_h_kerning' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='384'>
            <!-- hb_destroy_func_t glyph_v_kerning -->
            <var-decl name='glyph_v_kerning' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='448'>
            <!-- hb_destroy_func_t glyph_extents -->
            <var-decl name='glyph_extents' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='512'>
            <!-- hb_destroy_func_t glyph_contour_point -->
            <var-decl name='glyph_contour_point' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='576'>
            <!-- hb_destroy_func_t glyph_name -->
            <var-decl name='glyph_name' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='640'>
            <!-- hb_destroy_func_t glyph_from_name -->
            <var-decl name='glyph_from_name' type-id='type-id-20' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='80' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <member-type access='public'>
        <!-- struct {hb_font_get_glyph_func_t glyph; hb_font_get_glyph_h_advance_func_t glyph_h_advance; hb_font_get_glyph_v_advance_func_t glyph_v_advance; hb_font_get_glyph_h_origin_func_t glyph_h_origin; hb_font_get_glyph_v_origin_func_t glyph_v_origin; hb_font_get_glyph_h_kerning_func_t glyph_h_kerning; hb_font_get_glyph_v_kerning_func_t glyph_v_kerning; hb_font_get_glyph_extents_func_t glyph_extents; hb_font_get_glyph_contour_point_func_t glyph_contour_point; hb_font_get_glyph_name_func_t glyph_name; hb_font_get_glyph_from_name_func_t glyph_from_name;} -->
        <class-decl name='__anonymous_struct__' size-in-bits='704' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='66' column='1' id='type-id-211'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_font_get_glyph_func_t glyph -->
            <var-decl name='glyph' type-id='type-id-212' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- hb_font_get_glyph_h_advance_func_t glyph_h_advance -->
            <var-decl name='glyph_h_advance' type-id='type-id-213' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- hb_font_get_glyph_v_advance_func_t glyph_v_advance -->
            <var-decl name='glyph_v_advance' type-id='type-id-214' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- hb_font_get_glyph_h_origin_func_t glyph_h_origin -->
            <var-decl name='glyph_h_origin' type-id='type-id-215' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='256'>
            <!-- hb_font_get_glyph_v_origin_func_t glyph_v_origin -->
            <var-decl name='glyph_v_origin' type-id='type-id-216' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='320'>
            <!-- hb_font_get_glyph_h_kerning_func_t glyph_h_kerning -->
            <var-decl name='glyph_h_kerning' type-id='type-id-217' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='384'>
            <!-- hb_font_get_glyph_v_kerning_func_t glyph_v_kerning -->
            <var-decl name='glyph_v_kerning' type-id='type-id-218' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='448'>
            <!-- hb_font_get_glyph_extents_func_t glyph_extents -->
            <var-decl name='glyph_extents' type-id='type-id-219' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='512'>
            <!-- hb_font_get_glyph_contour_point_func_t glyph_contour_point -->
            <var-decl name='glyph_contour_point' type-id='type-id-220' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='576'>
            <!-- hb_font_get_glyph_name_func_t glyph_name -->
            <var-decl name='glyph_name' type-id='type-id-221' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='640'>
            <!-- hb_font_get_glyph_from_name_func_t glyph_from_name -->
            <var-decl name='glyph_from_name' type-id='type-id-222' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='68' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <member-type access='public'>
        <!-- struct {void* glyph; void* glyph_h_advance; void* glyph_v_advance; void* glyph_h_origin; void* glyph_v_origin; void* glyph_h_kerning; void* glyph_v_kerning; void* glyph_extents; void* glyph_contour_point; void* glyph_name; void* glyph_from_name;} -->
        <class-decl name='__anonymous_struct__1' size-in-bits='704' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='72' column='1' id='type-id-223'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- void* glyph -->
            <var-decl name='glyph' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- void* glyph_h_advance -->
            <var-decl name='glyph_h_advance' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- void* glyph_v_advance -->
            <var-decl name='glyph_v_advance' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- void* glyph_h_origin -->
            <var-decl name='glyph_h_origin' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='256'>
            <!-- void* glyph_v_origin -->
            <var-decl name='glyph_v_origin' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='320'>
            <!-- void* glyph_h_kerning -->
            <var-decl name='glyph_h_kerning' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='384'>
            <!-- void* glyph_v_kerning -->
            <var-decl name='glyph_v_kerning' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='448'>
            <!-- void* glyph_extents -->
            <var-decl name='glyph_extents' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='512'>
            <!-- void* glyph_contour_point -->
            <var-decl name='glyph_contour_point' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='576'>
            <!-- void* glyph_name -->
            <var-decl name='glyph_name' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='640'>
            <!-- void* glyph_from_name -->
            <var-decl name='glyph_from_name' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='74' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_font_funcs_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- hb_bool_t hb_font_funcs_t::immutable -->
        <var-decl name='immutable' type-id='type-id-39' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- struct {hb_font_get_glyph_func_t glyph; hb_font_get_glyph_h_advance_func_t glyph_h_advance; hb_font_get_glyph_v_advance_func_t glyph_v_advance; hb_font_get_glyph_h_origin_func_t glyph_h_origin; hb_font_get_glyph_v_origin_func_t glyph_v_origin; hb_font_get_glyph_h_kerning_func_t glyph_h_kerning; hb_font_get_glyph_v_kerning_func_t glyph_v_kerning; hb_font_get_glyph_extents_func_t glyph_extents; hb_font_get_glyph_contour_point_func_t glyph_contour_point; hb_font_get_glyph_name_func_t glyph_name; hb_font_get_glyph_from_name_func_t glyph_from_name;} hb_font_funcs_t::get -->
        <var-decl name='get' type-id='type-id-211' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1664'>
        <!-- struct {void* glyph; void* glyph_h_advance; void* glyph_v_advance; void* glyph_h_origin; void* glyph_v_origin; void* glyph_h_kerning; void* glyph_v_kerning; void* glyph_extents; void* glyph_contour_point; void* glyph_name; void* glyph_from_name;} hb_font_funcs_t::user_data -->
        <var-decl name='user_data' type-id='type-id-223' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='76' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2368'>
        <!-- struct {hb_destroy_func_t glyph; hb_destroy_func_t glyph_h_advance; hb_destroy_func_t glyph_v_advance; hb_destroy_func_t glyph_h_origin; hb_destroy_func_t glyph_v_origin; hb_destroy_func_t glyph_h_kerning; hb_destroy_func_t glyph_v_kerning; hb_destroy_func_t glyph_extents; hb_destroy_func_t glyph_contour_point; hb_destroy_func_t glyph_name; hb_destroy_func_t glyph_from_name;} hb_font_funcs_t::destroy -->
        <var-decl name='destroy' type-id='type-id-210' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font-private.hh' line='82' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_glyph_extents_t -->
    <class-decl name='hb_glyph_extents_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='84' column='1' id='type-id-224'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_position_t hb_glyph_extents_t::x_bearing -->
        <var-decl name='x_bearing' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='85' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- hb_position_t hb_glyph_extents_t::y_bearing -->
        <var-decl name='y_bearing' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='86' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_position_t hb_glyph_extents_t::width -->
        <var-decl name='width' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- hb_position_t hb_glyph_extents_t::height -->
        <var-decl name='height' type-id='type-id-103' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='88' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_shape_plan_t -->
    <class-decl name='hb_shape_plan_t' size-in-bits='1664' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='36' column='1' id='type-id-225'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_shape_plan_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- hb_bool_t hb_shape_plan_t::default_shaper_list -->
        <var-decl name='default_shaper_list' type-id='type-id-39' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- hb_face_t* hb_shape_plan_t::face_unsafe -->
        <var-decl name='face_unsafe' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- hb_segment_properties_t hb_shape_plan_t::props -->
        <var-decl name='props' type-id='type-id-92' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- hb_shape_func_t* hb_shape_plan_t::shaper_func -->
        <var-decl name='shaper_func' type-id='type-id-226' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='44' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- const char* hb_shape_plan_t::shaper_name -->
        <var-decl name='shaper_name' type-id='type-id-17' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='45' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- hb_feature_t* hb_shape_plan_t::user_features -->
        <var-decl name='user_features' type-id='type-id-227' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='47' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- unsigned int hb_shape_plan_t::num_user_features -->
        <var-decl name='num_user_features' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='48' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- hb_shaper_data_t hb_shape_plan_t::shaper_data -->
        <var-decl name='shaper_data' type-id='type-id-169' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan-private.hh' line='50' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_shaper_data_t -->
    <class-decl name='hb_shaper_data_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shaper-private.hh' line='53' column='1' id='type-id-169'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* hb_shaper_data_t::ot -->
        <var-decl name='ot' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shaper-list.hh' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* hb_shaper_data_t::fallback -->
        <var-decl name='fallback' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shaper-list.hh' line='54' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef hb_face_t hb_face_t -->
    <typedef-decl name='hb_face_t' type-id='type-id-203' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.h' line='44' column='1' id='type-id-228'/>
    <!-- typedef hb_feature_t hb_feature_t -->
    <typedef-decl name='hb_feature_t' type-id='type-id-208' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.h' line='48' column='1' id='type-id-229'/>
    <!-- typedef hb_font_funcs_t hb_font_funcs_t -->
    <typedef-decl name='hb_font_funcs_t' type-id='type-id-209' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='47' column='1' id='type-id-230'/>
    <!-- typedef hb_position_t (*)(hb_font_t*, void*, hb_codepoint_t, void*) hb_font_get_glyph_advance_func_t -->
    <typedef-decl name='hb_font_get_glyph_advance_func_t' type-id='type-id-231' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='102' column='1' id='type-id-232'/>
    <!-- typedef hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, unsigned int, hb_position_t*, hb_position_t*, void*) hb_font_get_glyph_contour_point_func_t -->
    <typedef-decl name='hb_font_get_glyph_contour_point_func_t' type-id='type-id-233' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='127' column='1' id='type-id-220'/>
    <!-- typedef hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_glyph_extents_t*, void*) hb_font_get_glyph_extents_func_t -->
    <typedef-decl name='hb_font_get_glyph_extents_func_t' type-id='type-id-234' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='123' column='1' id='type-id-219'/>
    <!-- typedef hb_bool_t (*)(hb_font_t*, void*, const char*, int, hb_codepoint_t*, void*) hb_font_get_glyph_from_name_func_t -->
    <typedef-decl name='hb_font_get_glyph_from_name_func_t' type-id='type-id-235' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='137' column='1' id='type-id-222'/>
    <!-- typedef hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*, void*) hb_font_get_glyph_func_t -->
    <typedef-decl name='hb_font_get_glyph_func_t' type-id='type-id-236' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='97' column='1' id='type-id-212'/>
    <!-- typedef hb_font_get_glyph_advance_func_t hb_font_get_glyph_h_advance_func_t -->
    <typedef-decl name='hb_font_get_glyph_h_advance_func_t' type-id='type-id-232' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='103' column='1' id='type-id-213'/>
    <!-- typedef hb_font_get_glyph_kerning_func_t hb_font_get_glyph_h_kerning_func_t -->
    <typedef-decl name='hb_font_get_glyph_h_kerning_func_t' type-id='type-id-237' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='116' column='1' id='type-id-217'/>
    <!-- typedef hb_font_get_glyph_origin_func_t hb_font_get_glyph_h_origin_func_t -->
    <typedef-decl name='hb_font_get_glyph_h_origin_func_t' type-id='type-id-238' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='110' column='1' id='type-id-215'/>
    <!-- typedef hb_position_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_codepoint_t, void*) hb_font_get_glyph_kerning_func_t -->
    <typedef-decl name='hb_font_get_glyph_kerning_func_t' type-id='type-id-239' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='115' column='1' id='type-id-237'/>
    <!-- typedef hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, char*, unsigned int, void*) hb_font_get_glyph_name_func_t -->
    <typedef-decl name='hb_font_get_glyph_name_func_t' type-id='type-id-240' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='133' column='1' id='type-id-221'/>
    <!-- typedef hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_position_t*, hb_position_t*, void*) hb_font_get_glyph_origin_func_t -->
    <typedef-decl name='hb_font_get_glyph_origin_func_t' type-id='type-id-241' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='109' column='1' id='type-id-238'/>
    <!-- typedef hb_font_get_glyph_advance_func_t hb_font_get_glyph_v_advance_func_t -->
    <typedef-decl name='hb_font_get_glyph_v_advance_func_t' type-id='type-id-232' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='104' column='1' id='type-id-214'/>
    <!-- typedef hb_font_get_glyph_kerning_func_t hb_font_get_glyph_v_kerning_func_t -->
    <typedef-decl name='hb_font_get_glyph_v_kerning_func_t' type-id='type-id-237' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='117' column='1' id='type-id-218'/>
    <!-- typedef hb_font_get_glyph_origin_func_t hb_font_get_glyph_v_origin_func_t -->
    <typedef-decl name='hb_font_get_glyph_v_origin_func_t' type-id='type-id-238' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='111' column='1' id='type-id-216'/>
    <!-- typedef hb_glyph_extents_t hb_glyph_extents_t -->
    <typedef-decl name='hb_glyph_extents_t' type-id='type-id-224' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.h' line='89' column='1' id='type-id-242'/>
    <!-- typedef hb_blob_t* (*)(hb_face_t*, hb_tag_t, void*) hb_reference_table_func_t -->
    <typedef-decl name='hb_reference_table_func_t' type-id='type-id-243' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.h' line='50' column='1' id='type-id-207'/>
    <!-- typedef typedef hb_bool_t (hb_shape_plan_t*, hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int) hb_shape_func_t -->
    <typedef-decl name='hb_shape_func_t' type-id='type-id-244' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shaper-private.hh' line='36' column='1' id='type-id-245'/>
    <!-- typedef hb_shape_plan_t hb_shape_plan_t -->
    <typedef-decl name='hb_shape_plan_t' type-id='type-id-225' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.h' line='39' column='1' id='type-id-246'/>
    <!-- uint8_t[2] -->
    <array-type-def dimensions='1' type-id='type-id-138' size-in-bits='16' id='type-id-247'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-248' size-in-bits='64' id='type-id-249'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-249' const='yes' id='type-id-250'/>
    <!-- OT::BEInt<int, 4>* -->
    <pointer-type-def type-id='type-id-251' size-in-bits='64' id='type-id-252'/>
    <!-- OT::BEInt<short int, 2>* -->
    <pointer-type-def type-id='type-id-253' size-in-bits='64' id='type-id-254'/>
    <!-- OT::BEInt<short unsigned int, 2>* -->
    <pointer-type-def type-id='type-id-255' size-in-bits='64' id='type-id-256'/>
    <!-- OT::BEInt<unsigned int, 4>* -->
    <pointer-type-def type-id='type-id-257' size-in-bits='64' id='type-id-258'/>
    <!-- OT::BEInt<unsigned int, 4>* const -->
    <qualified-type-def type-id='type-id-258' const='yes' id='type-id-259'/>
    <!-- OT::CheckSum* -->
    <pointer-type-def type-id='type-id-260' size-in-bits='64' id='type-id-261'/>
    <!-- OT::FixedVersion* -->
    <pointer-type-def type-id='type-id-262' size-in-bits='64' id='type-id-263'/>
    <!-- OT::FixedVersion* const -->
    <qualified-type-def type-id='type-id-263' const='yes' id='type-id-264'/>
    <!-- OT::IntType<int, 4u>* -->
    <pointer-type-def type-id='type-id-265' size-in-bits='64' id='type-id-266'/>
    <!-- OT::IntType<short int, 2u>* -->
    <pointer-type-def type-id='type-id-267' size-in-bits='64' id='type-id-268'/>
    <!-- OT::IntType<short unsigned int, 2u>* -->
    <pointer-type-def type-id='type-id-269' size-in-bits='64' id='type-id-270'/>
    <!-- OT::IntType<unsigned int, 4u>* -->
    <pointer-type-def type-id='type-id-271' size-in-bits='64' id='type-id-272'/>
    <!-- OT::IntType<unsigned int, 4u>* const -->
    <qualified-type-def type-id='type-id-272' const='yes' id='type-id-273'/>
    <!-- OT::LONGDATETIME* -->
    <pointer-type-def type-id='type-id-274' size-in-bits='64' id='type-id-275'/>
    <!-- OT::OffsetTable& -->
    <reference-type-def kind='lvalue' type-id='type-id-276' size-in-bits='64' id='type-id-277'/>
    <!-- OT::OffsetTable* -->
    <pointer-type-def type-id='type-id-276' size-in-bits='64' id='type-id-278'/>
    <!-- OT::OffsetTable* const -->
    <qualified-type-def type-id='type-id-278' const='yes' id='type-id-279'/>
    <!-- OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-196' size-in-bits='64' id='type-id-280'/>
    <!-- OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-196' size-in-bits='64' id='type-id-281'/>
    <!-- OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-281' const='yes' id='type-id-282'/>
    <!-- OT::OpenTypeFontFile* -->
    <pointer-type-def type-id='type-id-283' size-in-bits='64' id='type-id-284'/>
    <!-- OT::OpenTypeFontFile* const -->
    <qualified-type-def type-id='type-id-284' const='yes' id='type-id-285'/>
    <!-- OT::TTCHeader* -->
    <pointer-type-def type-id='type-id-286' size-in-bits='64' id='type-id-287'/>
    <!-- OT::TTCHeader* const -->
    <qualified-type-def type-id='type-id-287' const='yes' id='type-id-288'/>
    <!-- OT::TTCHeaderVersion1* -->
    <pointer-type-def type-id='type-id-289' size-in-bits='64' id='type-id-290'/>
    <!-- OT::TTCHeaderVersion1* const -->
    <qualified-type-def type-id='type-id-290' const='yes' id='type-id-291'/>
    <!-- OT::TableRecord* -->
    <pointer-type-def type-id='type-id-198' size-in-bits='64' id='type-id-292'/>
    <!-- OT::Tag* -->
    <pointer-type-def type-id='type-id-293' size-in-bits='64' id='type-id-294'/>
    <!-- OT::hb_sanitize_context_t* -->
    <pointer-type-def type-id='type-id-295' size-in-bits='64' id='type-id-296'/>
    <!-- OT::hb_sanitize_context_t* const -->
    <qualified-type-def type-id='type-id-296' const='yes' id='type-id-297'/>
    <!-- OT::hb_serialize_context_t* -->
    <pointer-type-def type-id='type-id-298' size-in-bits='64' id='type-id-299'/>
    <!-- OT::head* -->
    <pointer-type-def type-id='type-id-300' size-in-bits='64' id='type-id-301'/>
    <!-- OT::head* const -->
    <qualified-type-def type-id='type-id-301' const='yes' id='type-id-302'/>
    <!-- OT::maxp* -->
    <pointer-type-def type-id='type-id-303' size-in-bits='64' id='type-id-304'/>
    <!-- OT::maxp* const -->
    <qualified-type-def type-id='type-id-304' const='yes' id='type-id-305'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-248' const='yes' id='type-id-306'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-306' size-in-bits='64' id='type-id-307'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-307' const='yes' id='type-id-308'/>
    <!-- const OT::BEInt<int, 4> -->
    <qualified-type-def type-id='type-id-251' const='yes' id='type-id-309'/>
    <!-- const OT::BEInt<int, 4>& -->
    <reference-type-def kind='lvalue' type-id='type-id-309' size-in-bits='64' id='type-id-310'/>
    <!-- const OT::BEInt<int, 4>* -->
    <pointer-type-def type-id='type-id-309' size-in-bits='64' id='type-id-311'/>
    <!-- const OT::BEInt<short int, 2> -->
    <qualified-type-def type-id='type-id-253' const='yes' id='type-id-312'/>
    <!-- const OT::BEInt<short int, 2>& -->
    <reference-type-def kind='lvalue' type-id='type-id-312' size-in-bits='64' id='type-id-313'/>
    <!-- const OT::BEInt<short int, 2>* -->
    <pointer-type-def type-id='type-id-312' size-in-bits='64' id='type-id-314'/>
    <!-- const OT::BEInt<short unsigned int, 2> -->
    <qualified-type-def type-id='type-id-255' const='yes' id='type-id-315'/>
    <!-- const OT::BEInt<short unsigned int, 2>& -->
    <reference-type-def kind='lvalue' type-id='type-id-315' size-in-bits='64' id='type-id-316'/>
    <!-- const OT::BEInt<short unsigned int, 2>* -->
    <pointer-type-def type-id='type-id-315' size-in-bits='64' id='type-id-317'/>
    <!-- const OT::BEInt<short unsigned int, 2>* const -->
    <qualified-type-def type-id='type-id-317' const='yes' id='type-id-318'/>
    <!-- const OT::BEInt<unsigned int, 4> -->
    <qualified-type-def type-id='type-id-257' const='yes' id='type-id-319'/>
    <!-- const OT::BEInt<unsigned int, 4>& -->
    <reference-type-def kind='lvalue' type-id='type-id-319' size-in-bits='64' id='type-id-320'/>
    <!-- const OT::BEInt<unsigned int, 4>* -->
    <pointer-type-def type-id='type-id-319' size-in-bits='64' id='type-id-321'/>
    <!-- const OT::BEInt<unsigned int, 4>* const -->
    <qualified-type-def type-id='type-id-321' const='yes' id='type-id-322'/>
    <!-- const OT::CheckSum -->
    <qualified-type-def type-id='type-id-260' const='yes' id='type-id-323'/>
    <!-- const OT::CheckSum* -->
    <pointer-type-def type-id='type-id-323' size-in-bits='64' id='type-id-324'/>
    <!-- const OT::FixedVersion -->
    <qualified-type-def type-id='type-id-262' const='yes' id='type-id-325'/>
    <!-- const OT::FixedVersion* -->
    <pointer-type-def type-id='type-id-325' size-in-bits='64' id='type-id-326'/>
    <!-- const OT::IntType<int, 4u> -->
    <qualified-type-def type-id='type-id-265' const='yes' id='type-id-327'/>
    <!-- const OT::IntType<int, 4u>& -->
    <reference-type-def kind='lvalue' type-id='type-id-327' size-in-bits='64' id='type-id-328'/>
    <!-- const OT::IntType<int, 4u>* -->
    <pointer-type-def type-id='type-id-327' size-in-bits='64' id='type-id-329'/>
    <!-- const OT::IntType<short int, 2u> -->
    <qualified-type-def type-id='type-id-267' const='yes' id='type-id-330'/>
    <!-- const OT::IntType<short int, 2u>& -->
    <reference-type-def kind='lvalue' type-id='type-id-330' size-in-bits='64' id='type-id-331'/>
    <!-- const OT::IntType<short int, 2u>* -->
    <pointer-type-def type-id='type-id-330' size-in-bits='64' id='type-id-332'/>
    <!-- const OT::IntType<short unsigned int, 2u> -->
    <qualified-type-def type-id='type-id-269' const='yes' id='type-id-333'/>
    <!-- const OT::IntType<short unsigned int, 2u>& -->
    <reference-type-def kind='lvalue' type-id='type-id-333' size-in-bits='64' id='type-id-334'/>
    <!-- const OT::IntType<short unsigned int, 2u>* -->
    <pointer-type-def type-id='type-id-333' size-in-bits='64' id='type-id-335'/>
    <!-- const OT::IntType<short unsigned int, 2u>* const -->
    <qualified-type-def type-id='type-id-335' const='yes' id='type-id-336'/>
    <!-- const OT::IntType<unsigned int, 4u> -->
    <qualified-type-def type-id='type-id-271' const='yes' id='type-id-337'/>
    <!-- const OT::IntType<unsigned int, 4u>& -->
    <reference-type-def kind='lvalue' type-id='type-id-337' size-in-bits='64' id='type-id-338'/>
    <!-- const OT::IntType<unsigned int, 4u>* -->
    <pointer-type-def type-id='type-id-337' size-in-bits='64' id='type-id-339'/>
    <!-- const OT::IntType<unsigned int, 4u>* const -->
    <qualified-type-def type-id='type-id-339' const='yes' id='type-id-340'/>
    <!-- const OT::LONGDATETIME -->
    <qualified-type-def type-id='type-id-274' const='yes' id='type-id-341'/>
    <!-- const OT::LONGDATETIME* -->
    <pointer-type-def type-id='type-id-341' size-in-bits='64' id='type-id-342'/>
    <!-- const OT::Offset<OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-343' const='yes' id='type-id-344'/>
    <!-- const OT::Offset<OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-344' size-in-bits='64' id='type-id-345'/>
    <!-- const OT::OffsetTable -->
    <qualified-type-def type-id='type-id-276' const='yes' id='type-id-346'/>
    <!-- const OT::OffsetTable& -->
    <reference-type-def kind='lvalue' type-id='type-id-346' size-in-bits='64' id='type-id-347'/>
    <!-- const OT::OffsetTable* -->
    <pointer-type-def type-id='type-id-346' size-in-bits='64' id='type-id-348'/>
    <!-- const OT::OffsetTable* const -->
    <qualified-type-def type-id='type-id-348' const='yes' id='type-id-349'/>
    <!-- const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-196' const='yes' id='type-id-350'/>
    <!-- const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-350' size-in-bits='64' id='type-id-351'/>
    <!-- const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-350' size-in-bits='64' id='type-id-352'/>
    <!-- const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-352' const='yes' id='type-id-353'/>
    <!-- const OT::OpenTypeFontFace -->
    <qualified-type-def type-id='type-id-354' const='yes' id='type-id-355'/>
    <!-- const OT::OpenTypeFontFace& -->
    <reference-type-def kind='lvalue' type-id='type-id-355' size-in-bits='64' id='type-id-356'/>
    <!-- const OT::OpenTypeFontFile -->
    <qualified-type-def type-id='type-id-283' const='yes' id='type-id-357'/>
    <!-- const OT::OpenTypeFontFile* -->
    <pointer-type-def type-id='type-id-357' size-in-bits='64' id='type-id-358'/>
    <!-- const OT::OpenTypeFontFile* const -->
    <qualified-type-def type-id='type-id-358' const='yes' id='type-id-359'/>
    <!-- const OT::TTCHeader -->
    <qualified-type-def type-id='type-id-286' const='yes' id='type-id-360'/>
    <!-- const OT::TTCHeader* -->
    <pointer-type-def type-id='type-id-360' size-in-bits='64' id='type-id-361'/>
    <!-- const OT::TTCHeader* const -->
    <qualified-type-def type-id='type-id-361' const='yes' id='type-id-362'/>
    <!-- const OT::TTCHeaderVersion1 -->
    <qualified-type-def type-id='type-id-289' const='yes' id='type-id-363'/>
    <!-- const OT::TTCHeaderVersion1* -->
    <pointer-type-def type-id='type-id-363' size-in-bits='64' id='type-id-364'/>
    <!-- const OT::TTCHeaderVersion1* const -->
    <qualified-type-def type-id='type-id-364' const='yes' id='type-id-365'/>
    <!-- const OT::TableRecord -->
    <qualified-type-def type-id='type-id-198' const='yes' id='type-id-366'/>
    <!-- const OT::TableRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-366' size-in-bits='64' id='type-id-367'/>
    <!-- const OT::TableRecord* -->
    <pointer-type-def type-id='type-id-366' size-in-bits='64' id='type-id-368'/>
    <!-- const OT::Tag -->
    <qualified-type-def type-id='type-id-293' const='yes' id='type-id-369'/>
    <!-- const OT::Tag* -->
    <pointer-type-def type-id='type-id-369' size-in-bits='64' id='type-id-370'/>
    <!-- const OT::ULONG -->
    <qualified-type-def type-id='type-id-371' const='yes' id='type-id-372'/>
    <!-- const OT::ULONG* -->
    <pointer-type-def type-id='type-id-372' size-in-bits='64' id='type-id-373'/>
    <!-- const OT::hb_sanitize_context_t -->
    <qualified-type-def type-id='type-id-295' const='yes' id='type-id-374'/>
    <!-- const OT::hb_sanitize_context_t* -->
    <pointer-type-def type-id='type-id-374' size-in-bits='64' id='type-id-375'/>
    <!-- const OT::hb_sanitize_context_t* const -->
    <qualified-type-def type-id='type-id-375' const='yes' id='type-id-376'/>
    <!-- const OT::head -->
    <qualified-type-def type-id='type-id-300' const='yes' id='type-id-377'/>
    <!-- const OT::head* -->
    <pointer-type-def type-id='type-id-377' size-in-bits='64' id='type-id-378'/>
    <!-- const OT::head* const -->
    <qualified-type-def type-id='type-id-378' const='yes' id='type-id-379'/>
    <!-- const OT::maxp -->
    <qualified-type-def type-id='type-id-303' const='yes' id='type-id-380'/>
    <!-- const OT::maxp* -->
    <pointer-type-def type-id='type-id-380' size-in-bits='64' id='type-id-381'/>
    <!-- const OT::maxp* const -->
    <qualified-type-def type-id='type-id-381' const='yes' id='type-id-382'/>
    <!-- const hb_face_t -->
    <qualified-type-def type-id='type-id-203' const='yes' id='type-id-383'/>
    <!-- const hb_face_t* -->
    <pointer-type-def type-id='type-id-383' size-in-bits='64' id='type-id-384'/>
    <!-- const hb_face_t* const -->
    <qualified-type-def type-id='type-id-384' const='yes' id='type-id-385'/>
    <!-- const hb_feature_t -->
    <qualified-type-def type-id='type-id-229' const='yes' id='type-id-386'/>
    <!-- const hb_feature_t* -->
    <pointer-type-def type-id='type-id-386' size-in-bits='64' id='type-id-387'/>
    <!-- const hb_font_funcs_t -->
    <qualified-type-def type-id='type-id-209' const='yes' id='type-id-388'/>
    <!-- const hb_font_funcs_t* -->
    <pointer-type-def type-id='type-id-388' size-in-bits='64' id='type-id-389'/>
    <!-- const hb_font_t -->
    <qualified-type-def type-id='type-id-120' const='yes' id='type-id-390'/>
    <!-- const hb_font_t* -->
    <pointer-type-def type-id='type-id-390' size-in-bits='64' id='type-id-391'/>
    <!-- const hb_shape_plan_t -->
    <qualified-type-def type-id='type-id-225' const='yes' id='type-id-392'/>
    <!-- const hb_shape_plan_t* -->
    <pointer-type-def type-id='type-id-392' size-in-bits='64' id='type-id-393'/>
    <!-- const hb_tag_t -->
    <qualified-type-def type-id='type-id-189' const='yes' id='type-id-394'/>
    <!-- const int -->
    <qualified-type-def type-id='type-id-11' const='yes' id='type-id-395'/>
    <!-- const int& -->
    <reference-type-def kind='lvalue' type-id='type-id-395' size-in-bits='64' id='type-id-396'/>
    <!-- hb_auto_trace_t<0, bool>* -->
    <pointer-type-def type-id='type-id-200' size-in-bits='64' id='type-id-201'/>
    <!-- hb_auto_trace_t<0, bool>* const -->
    <qualified-type-def type-id='type-id-201' const='yes' id='type-id-202'/>
    <!-- hb_blob_t* (*)(hb_face_t*, hb_tag_t, void*) -->
    <pointer-type-def type-id='type-id-397' size-in-bits='64' id='type-id-243'/>
    <!-- hb_bool_t (*)(hb_font_t*, void*, const char*, int, hb_codepoint_t*, void*) -->
    <pointer-type-def type-id='type-id-398' size-in-bits='64' id='type-id-235'/>
    <!-- hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, char*, unsigned int, void*) -->
    <pointer-type-def type-id='type-id-399' size-in-bits='64' id='type-id-240'/>
    <!-- hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*, void*) -->
    <pointer-type-def type-id='type-id-400' size-in-bits='64' id='type-id-236'/>
    <!-- hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_glyph_extents_t*, void*) -->
    <pointer-type-def type-id='type-id-401' size-in-bits='64' id='type-id-234'/>
    <!-- hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_position_t*, hb_position_t*, void*) -->
    <pointer-type-def type-id='type-id-402' size-in-bits='64' id='type-id-241'/>
    <!-- hb_bool_t (*)(hb_font_t*, void*, hb_codepoint_t, unsigned int, hb_position_t*, hb_position_t*, void*) -->
    <pointer-type-def type-id='type-id-403' size-in-bits='64' id='type-id-233'/>
    <!-- hb_face_t* -->
    <pointer-type-def type-id='type-id-228' size-in-bits='64' id='type-id-167'/>
    <!-- hb_face_t::plan_node_t* -->
    <pointer-type-def type-id='type-id-204' size-in-bits='64' id='type-id-206'/>
    <!-- hb_feature_t* -->
    <pointer-type-def type-id='type-id-229' size-in-bits='64' id='type-id-227'/>
    <!-- hb_font_funcs_t* -->
    <pointer-type-def type-id='type-id-230' size-in-bits='64' id='type-id-168'/>
    <!-- hb_font_t* -->
    <pointer-type-def type-id='type-id-120' size-in-bits='64' id='type-id-166'/>
    <!-- hb_glyph_extents_t* -->
    <pointer-type-def type-id='type-id-242' size-in-bits='64' id='type-id-404'/>
    <!-- hb_position_t (*)(hb_font_t*, void*, hb_codepoint_t, hb_codepoint_t, void*) -->
    <pointer-type-def type-id='type-id-405' size-in-bits='64' id='type-id-239'/>
    <!-- hb_position_t (*)(hb_font_t*, void*, hb_codepoint_t, void*) -->
    <pointer-type-def type-id='type-id-406' size-in-bits='64' id='type-id-231'/>
    <!-- hb_position_t* -->
    <pointer-type-def type-id='type-id-103' size-in-bits='64' id='type-id-407'/>
    <!-- hb_shape_func_t* -->
    <pointer-type-def type-id='type-id-245' size-in-bits='64' id='type-id-226'/>
    <!-- hb_shape_plan_t* -->
    <pointer-type-def type-id='type-id-246' size-in-bits='64' id='type-id-205'/>
    <reference-type-def kind='lvalue' type-id='type-id-408' size-in-bits='64' id='type-id-409'/>
    <!-- hb_face_t* hb_face_create_for_tables(hb_reference_table_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_face_create_for_tables' mangled-name='hb_face_create_for_tables' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='83' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_create_for_tables'>
      <!-- parameter of type 'typedef hb_reference_table_func_t' -->
      <parameter type-id='type-id-207' name='reference_table_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='83' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='84' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='85' column='1'/>
      <!-- hb_face_t* -->
      <return type-id='type-id-167'/>
    </function-decl>
    <!-- hb_face_t* hb_face_create(hb_blob_t*, unsigned int) -->
    <function-decl name='hb_face_create' mangled-name='hb_face_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='163' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_create'>
      <!-- parameter of type 'hb_blob_t*' -->
      <parameter type-id='type-id-58' name='blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='163' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='164' column='1'/>
      <!-- hb_face_t* -->
      <return type-id='type-id-167'/>
    </function-decl>
    <!-- hb_face_t* hb_face_get_empty() -->
    <function-decl name='hb_face_get_empty' mangled-name='hb_face_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='195' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_get_empty'>
      <!-- hb_face_t* -->
      <return type-id='type-id-167'/>
    </function-decl>
    <!-- hb_face_t* hb_face_reference(hb_face_t*) -->
    <function-decl name='hb_face_reference' mangled-name='hb_face_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='212' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_reference'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='212' column='1'/>
      <!-- hb_face_t* -->
      <return type-id='type-id-167'/>
    </function-decl>
    <!-- void hb_face_destroy(hb_face_t*) -->
    <function-decl name='hb_face_destroy' mangled-name='hb_face_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='226' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_destroy'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='226' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_face_set_user_data(hb_face_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_face_set_user_data' mangled-name='hb_face_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='263' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_set_user_data'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='263' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='264' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='265' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='266' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='267' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_face_get_user_data(hb_face_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_face_get_user_data' mangled-name='hb_face_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='284' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_get_user_data'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='284' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='285' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- void hb_face_make_immutable(hb_face_t*) -->
    <function-decl name='hb_face_make_immutable' mangled-name='hb_face_make_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='299' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_make_immutable'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='299' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_face_is_immutable(hb_face_t*) -->
    <function-decl name='hb_face_is_immutable' mangled-name='hb_face_is_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='318' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_is_immutable'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='318' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_blob_t* hb_face_reference_table(hb_face_t*, hb_tag_t) -->
    <function-decl name='hb_face_reference_table' mangled-name='hb_face_reference_table' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='336' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_reference_table'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='336' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='337' column='1'/>
      <!-- hb_blob_t* -->
      <return type-id='type-id-58'/>
    </function-decl>
    <!-- hb_blob_t* hb_face_reference_blob(hb_face_t*) -->
    <function-decl name='hb_face_reference_blob' mangled-name='hb_face_reference_blob' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='353' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_reference_blob'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='353' column='1'/>
      <!-- hb_blob_t* -->
      <return type-id='type-id-58'/>
    </function-decl>
    <!-- void hb_face_set_index(hb_face_t*, unsigned int) -->
    <function-decl name='hb_face_set_index' mangled-name='hb_face_set_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='368' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_set_index'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='368' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='369' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- unsigned int hb_face_get_index(hb_face_t*) -->
    <function-decl name='hb_face_get_index' mangled-name='hb_face_get_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='388' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_get_index'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='388' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void hb_face_set_upem(hb_face_t*, unsigned int) -->
    <function-decl name='hb_face_set_upem' mangled-name='hb_face_set_upem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='403' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_set_upem'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='403' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='upem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='404' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- unsigned int hb_face_get_upem(hb_face_t*) -->
    <function-decl name='hb_face_get_upem' mangled-name='hb_face_get_upem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='423' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_get_upem'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='423' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void hb_face_set_glyph_count(hb_face_t*, unsigned int) -->
    <function-decl name='hb_face_set_glyph_count' mangled-name='hb_face_set_glyph_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='447' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_set_glyph_count'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='447' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='glyph_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='448' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- unsigned int hb_face_get_glyph_count(hb_face_t*) -->
    <function-decl name='hb_face_get_glyph_count' mangled-name='hb_face_get_glyph_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='467' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_face_get_glyph_count'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-face.cc' line='467' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- namespace OT -->
    <namespace-decl name='OT'>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-248'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<unsigned int, 4u> OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >::len -->
          <var-decl name='len' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> > OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >::array[1] -->
          <var-decl name='array' type-id='type-id-197' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::BEInt<int, 4> -->
      <class-decl name='BEInt&lt;int, 4&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='532' column='1' id='type-id-251'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- uint8_t OT::BEInt<int, 4>::v[4] -->
          <var-decl name='v' type-id='type-id-140' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='607' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::BEInt<short int, 2> -->
      <class-decl name='BEInt&lt;short int, 2&gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='532' column='1' id='type-id-253'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- uint8_t OT::BEInt<short int, 2>::v[2] -->
          <var-decl name='v' type-id='type-id-247' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='554' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::BEInt<short unsigned int, 2> -->
      <class-decl name='BEInt&lt;short unsigned int, 2&gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='532' column='1' id='type-id-255'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- uint8_t OT::BEInt<short unsigned int, 2>::v[2] -->
          <var-decl name='v' type-id='type-id-247' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='554' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::BEInt<unsigned int, 4> -->
      <class-decl name='BEInt&lt;unsigned int, 4&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='532' column='1' id='type-id-257'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- uint8_t OT::BEInt<unsigned int, 4>::v[4] -->
          <var-decl name='v' type-id='type-id-140' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='607' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CheckSum -->
      <class-decl name='CheckSum' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='692' column='1' id='type-id-260'>
        <!-- struct OT::IntType<unsigned int, 4u> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-271'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CheckSum::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='709' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CheckSum::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='709' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::FixedVersion -->
      <class-decl name='FixedVersion' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='718' column='1' id='type-id-262'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::FixedVersion::major -->
          <var-decl name='major' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='726' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::FixedVersion::minor -->
          <var-decl name='minor' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='727' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::FixedVersion::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='729' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::FixedVersion::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='729' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::IntType<int, 4u> -->
      <class-decl name='IntType&lt;int, 4u&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='613' column='1' id='type-id-265'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::BEInt<int, 4> OT::IntType<int, 4u>::v -->
          <var-decl name='v' type-id='type-id-251' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='626' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<int, 4u>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<int, 4u>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::IntType<short int, 2u> -->
      <class-decl name='IntType&lt;short int, 2u&gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='613' column='1' id='type-id-267'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::BEInt<short int, 2> OT::IntType<short int, 2u>::v -->
          <var-decl name='v' type-id='type-id-253' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='626' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<short int, 2u>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<short int, 2u>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::IntType<short unsigned int, 2u> -->
      <class-decl name='IntType&lt;short unsigned int, 2u&gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='613' column='1' id='type-id-269'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::BEInt<short unsigned int, 2> OT::IntType<short unsigned int, 2u>::v -->
          <var-decl name='v' type-id='type-id-255' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='626' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<short unsigned int, 2u>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<short unsigned int, 2u>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::IntType<unsigned int, 4u> -->
      <class-decl name='IntType&lt;unsigned int, 4u&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='613' column='1' id='type-id-271'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::BEInt<unsigned int, 4> OT::IntType<unsigned int, 4u>::v -->
          <var-decl name='v' type-id='type-id-257' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='626' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<unsigned int, 4u>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<unsigned int, 4u>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::LONGDATETIME -->
      <class-decl name='LONGDATETIME' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='647' column='1' id='type-id-274'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::LONG OT::LONGDATETIME::major -->
          <var-decl name='major' type-id='type-id-411' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='653' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ULONG OT::LONGDATETIME::minor -->
          <var-decl name='minor' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='654' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LONGDATETIME::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='656' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LONGDATETIME::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='656' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Offset<OT::IntType<unsigned int, 4u> > -->
      <class-decl name='Offset&lt;OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='683' column='1' id='type-id-343'>
        <!-- struct OT::IntType<unsigned int, 4u> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-271'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Offset<OT::IntType<unsigned int, 4u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='686' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Offset<OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='686' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTable -->
      <class-decl name='OffsetTable' size-in-bits='224' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='71' column='1' id='type-id-276'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::Tag OT::OffsetTable::sfnt_version -->
          <var-decl name='sfnt_version' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='111' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::OffsetTable::numTables -->
          <var-decl name='numTables' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='112' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::OffsetTable::searchRangeZ -->
          <var-decl name='searchRangeZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='113' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::USHORT OT::OffsetTable::entrySelectorZ -->
          <var-decl name='entrySelectorZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='114' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::USHORT OT::OffsetTable::rangeShiftZ -->
          <var-decl name='rangeShiftZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='115' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::TableRecord OT::OffsetTable::tables[1] -->
          <var-decl name='tables' type-id='type-id-199' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='116' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTable::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='118' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-196'>
        <!-- struct OT::Offset<OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-343'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OpenTypeFontFile -->
      <class-decl name='OpenTypeFontFile' size-in-bits='224' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='199' column='1' id='type-id-283'>
        <member-type access='protected'>
          <!-- union {OT::Tag tag; OT::OpenTypeFontFace fontFace; OT::TTCHeader ttcHeader;} -->
          <union-decl name='__anonymous_union__' size-in-bits='224' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='250' column='1' id='type-id-412'>
            <data-member access='public'>
              <!-- OT::Tag tag -->
              <var-decl name='tag' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='251' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::OpenTypeFontFace fontFace -->
              <var-decl name='fontFace' type-id='type-id-354' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='252' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::TTCHeader ttcHeader -->
              <var-decl name='ttcHeader' type-id='type-id-286' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='253' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::OpenTypeFontFile::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='200' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::OpenTypeFontFile::CFFTag -->
          <var-decl name='CFFTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='202' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::OpenTypeFontFile::TrueTypeTag -->
          <var-decl name='TrueTypeTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='203' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::OpenTypeFontFile::TTCTag -->
          <var-decl name='TTCTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='204' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::OpenTypeFontFile::TrueTag -->
          <var-decl name='TrueTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='205' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::OpenTypeFontFile::Typ1Tag -->
          <var-decl name='Typ1Tag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='206' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::Tag tag; OT::OpenTypeFontFace fontFace; OT::TTCHeader ttcHeader;} OT::OpenTypeFontFile::u -->
          <var-decl name='u' type-id='type-id-412' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='254' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OpenTypeFontFile::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='256' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Sanitizer<OT::OpenTypeFontFile> -->
      <class-decl name='Sanitizer&lt;OT::OpenTypeFontFile&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-413'/>
      <!-- struct OT::Sanitizer<OT::head> -->
      <class-decl name='Sanitizer&lt;OT::head&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-414'/>
      <!-- struct OT::Sanitizer<OT::maxp> -->
      <class-decl name='Sanitizer&lt;OT::maxp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-415'/>
      <!-- struct OT::TTCHeader -->
      <class-decl name='TTCHeader' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='150' column='1' id='type-id-286'>
        <member-type access='protected'>
          <!-- union {struct {OT::Tag ttcTag; OT::FixedVersion version;} header; OT::TTCHeaderVersion1 version1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='128' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='183' column='1' id='type-id-416'>
            <member-type access='public'>
              <!-- struct {OT::Tag ttcTag; OT::FixedVersion version;} -->
              <class-decl name='__anonymous_struct__' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='184' column='1' id='type-id-417'>
                <data-member access='public' layout-offset-in-bits='0'>
                  <!-- OT::Tag ttcTag -->
                  <var-decl name='ttcTag' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='185' column='1'/>
                </data-member>
                <data-member access='public' layout-offset-in-bits='32'>
                  <!-- OT::FixedVersion version -->
                  <var-decl name='version' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='186' column='1'/>
                </data-member>
              </class-decl>
            </member-type>
            <data-member access='public'>
              <!-- struct {OT::Tag ttcTag; OT::FixedVersion version;} header -->
              <var-decl name='header' type-id='type-id-417' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='188' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::TTCHeaderVersion1 version1 -->
              <var-decl name='version1' type-id='type-id-289' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='189' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {struct {OT::Tag ttcTag; OT::FixedVersion version;} header; OT::TTCHeaderVersion1 version1;} OT::TTCHeader::u -->
          <var-decl name='u' type-id='type-id-416' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='190' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::TTCHeaderVersion1 -->
      <class-decl name='TTCHeaderVersion1' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='127' column='1' id='type-id-289'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::Tag OT::TTCHeaderVersion1::ttcTag -->
          <var-decl name='ttcTag' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='139' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::FixedVersion OT::TTCHeaderVersion1::version -->
          <var-decl name='version' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='140' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > OT::TTCHeaderVersion1::table -->
          <var-decl name='table' type-id='type-id-248' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='143' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::TTCHeaderVersion1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='146' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::TableRecord -->
      <class-decl name='TableRecord' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='55' column='1' id='type-id-198'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::Tag OT::TableRecord::tag -->
          <var-decl name='tag' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='61' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::CheckSum OT::TableRecord::checkSum -->
          <var-decl name='checkSum' type-id='type-id-260' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='62' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- OT::ULONG OT::TableRecord::offset -->
          <var-decl name='offset' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='63' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='96'>
          <!-- OT::ULONG OT::TableRecord::length -->
          <var-decl name='length' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='65' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::TableRecord::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='67' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::TableRecord::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='67' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Tag -->
      <class-decl name='Tag' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='662' column='1' id='type-id-293'>
        <!-- struct OT::IntType<unsigned int, 4u> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-271'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Tag::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='667' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Tag::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='667' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::hb_sanitize_context_t -->
      <class-decl name='hb_sanitize_context_t' size-in-bits='320' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='178' column='1' id='type-id-295'>
        <member-type access='public'>
          <!-- typedef bool OT::hb_sanitize_context_t::return_t -->
          <typedef-decl name='return_t' type-id='type-id-1' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='181' column='1' id='type-id-418'/>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::hb_sanitize_context_t::max_debug_depth -->
          <var-decl name='max_debug_depth' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='180' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned int OT::hb_sanitize_context_t::debug_depth -->
          <var-decl name='debug_depth' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='280' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- const char* OT::hb_sanitize_context_t::start -->
          <var-decl name='start' type-id='type-id-17' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='281' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- const char* OT::hb_sanitize_context_t::end -->
          <var-decl name='end' type-id='type-id-17' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='281' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- bool OT::hb_sanitize_context_t::writable -->
          <var-decl name='writable' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='282' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='224'>
          <!-- unsigned int OT::hb_sanitize_context_t::edit_count -->
          <var-decl name='edit_count' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='283' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- hb_blob_t* OT::hb_sanitize_context_t::blob -->
          <var-decl name='blob' type-id='type-id-58' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='284' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-281'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::maxp>(const OT::maxp*) -->
          <function-decl name='check_struct&lt;OT::maxp&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::maxp*' -->
            <parameter type-id='type-id-381'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::head>(const OT::head*) -->
          <function-decl name='check_struct&lt;OT::head&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::head*' -->
            <parameter type-id='type-id-378'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<unsigned int, 4u> >(const OT::IntType<unsigned int, 4u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;unsigned int, 4u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<unsigned int, 4u>*' -->
            <parameter type-id='type-id-339'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTable>(const OT::OffsetTable*) -->
          <function-decl name='check_struct&lt;OT::OffsetTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTable*' -->
            <parameter type-id='type-id-348'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FixedVersion>(const OT::FixedVersion*) -->
          <function-decl name='check_struct&lt;OT::FixedVersion&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FixedVersion*' -->
            <parameter type-id='type-id-326'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-307'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-352'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-281' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::maxp>(const OT::maxp*) -->
          <function-decl name='check_struct&lt;OT::maxp&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::maxp*' -->
            <parameter type-id='type-id-381' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::head>(const OT::head*) -->
          <function-decl name='check_struct&lt;OT::head&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::head*' -->
            <parameter type-id='type-id-378' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<unsigned int, 4u> >(const OT::IntType<unsigned int, 4u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;unsigned int, 4u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<unsigned int, 4u>*' -->
            <parameter type-id='type-id-339' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTable>(const OT::OffsetTable*) -->
          <function-decl name='check_struct&lt;OT::OffsetTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTable*' -->
            <parameter type-id='type-id-348' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FixedVersion>(const OT::FixedVersion*) -->
          <function-decl name='check_struct&lt;OT::FixedVersion&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FixedVersion*' -->
            <parameter type-id='type-id-326' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-307' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-352' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-419'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-420'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::CmapSubtable, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-421'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::EncodingRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-422'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<short unsigned int, 2u> >(const OT::IntType<short unsigned int, 2u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short unsigned int, 2u>*' -->
            <parameter type-id='type-id-335'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat0>(const OT::CmapSubtableFormat0*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableFormat0&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableFormat0*' -->
            <parameter type-id='type-id-423'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat4>(const OT::CmapSubtableFormat4*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableFormat4&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableFormat4*' -->
            <parameter type-id='type-id-424'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::USHORT, uint16_t>(OT::USHORT*, const uint16_t&) -->
          <function-decl name='try_set&lt;OT::USHORT, uint16_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::USHORT*' -->
            <parameter type-id='type-id-425'/>
            <!-- parameter of type 'const uint16_t&' -->
            <parameter type-id='type-id-426'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-427'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> > >(const OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableTrimmed&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-428'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-429'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> > >(const OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableTrimmed&lt;OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-430'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::CmapSubtableLongGroup, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-431'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12> >(const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableLongSegmented&lt;OT::CmapSubtableFormat12&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>*' -->
            <parameter type-id='type-id-432'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13> >(const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableLongSegmented&lt;OT::CmapSubtableFormat13&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>*' -->
            <parameter type-id='type-id-433'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::VariationSelectorRecord, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-434'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-435'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-436'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-437'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-438'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::VariationSelectorRecord>(const OT::VariationSelectorRecord*) -->
          <function-decl name='check_struct&lt;OT::VariationSelectorRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::VariationSelectorRecord*' -->
            <parameter type-id='type-id-439'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat14>(const OT::CmapSubtableFormat14*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableFormat14&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableFormat14*' -->
            <parameter type-id='type-id-440'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::CmapSubtable, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-441'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::EncodingRecord>(const OT::EncodingRecord*) -->
          <function-decl name='check_struct&lt;OT::EncodingRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::EncodingRecord*' -->
            <parameter type-id='type-id-442'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::cmap>(const OT::cmap*) -->
          <function-decl name='check_struct&lt;OT::cmap&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::cmap*' -->
            <parameter type-id='type-id-443'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::_hea>(const OT::_hea*) -->
          <function-decl name='check_struct&lt;OT::_hea&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::_hea*' -->
            <parameter type-id='type-id-444'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-419' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-420' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::CmapSubtable, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-421' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::EncodingRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-422' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<short unsigned int, 2u> >(const OT::IntType<short unsigned int, 2u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short unsigned int, 2u>*' -->
            <parameter type-id='type-id-335' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat0>(const OT::CmapSubtableFormat0*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableFormat0&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableFormat0*' -->
            <parameter type-id='type-id-423' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat4>(const OT::CmapSubtableFormat4*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableFormat4&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableFormat4*' -->
            <parameter type-id='type-id-424' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::USHORT, uint16_t>(OT::USHORT*, const uint16_t&) -->
          <function-decl name='try_set&lt;OT::USHORT, uint16_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::USHORT*' -->
            <parameter type-id='type-id-425' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const uint16_t&' -->
            <parameter type-id='type-id-426' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-427' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> > >(const OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableTrimmed&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-428' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-429' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> > >(const OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableTrimmed&lt;OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-430' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::CmapSubtableLongGroup, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-431' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12> >(const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableLongSegmented&lt;OT::CmapSubtableFormat12&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>*' -->
            <parameter type-id='type-id-432' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13> >(const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableLongSegmented&lt;OT::CmapSubtableFormat13&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>*' -->
            <parameter type-id='type-id-433' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::VariationSelectorRecord, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-434' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-435' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-436' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> > >(const OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-437' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SortedArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-438' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::VariationSelectorRecord>(const OT::VariationSelectorRecord*) -->
          <function-decl name='check_struct&lt;OT::VariationSelectorRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::VariationSelectorRecord*' -->
            <parameter type-id='type-id-439' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat14>(const OT::CmapSubtableFormat14*) -->
          <function-decl name='check_struct&lt;OT::CmapSubtableFormat14&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CmapSubtableFormat14*' -->
            <parameter type-id='type-id-440' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::CmapSubtable, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-441' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::EncodingRecord>(const OT::EncodingRecord*) -->
          <function-decl name='check_struct&lt;OT::EncodingRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::EncodingRecord*' -->
            <parameter type-id='type-id-442' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::cmap>(const OT::cmap*) -->
          <function-decl name='check_struct&lt;OT::cmap&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::cmap*' -->
            <parameter type-id='type-id-443' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::_hea>(const OT::_hea*) -->
          <function-decl name='check_struct&lt;OT::_hea&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::_hea*' -->
            <parameter type-id='type-id-444' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LangSys, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-445'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-446'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-447'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Device, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-448'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ClassDef, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-449'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::AttachList, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-450'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LigCaretList, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-451'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::MarkGlyphSets, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-452'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-453'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-454'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::Lookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-455'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::SubstLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-456'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Anchor, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-457'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::MarkArray, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-458'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-459'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::AnchorMatrix&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-460'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::PosLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-461'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-462'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-463'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-464'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-465'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-466'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-467'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-468'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-469'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-470'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-471'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-472'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-473'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-474'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-475'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-476'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-477'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-478'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Script, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-479'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Feature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-480'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FixedVersion>(const OT::FixedVersion*) -->
          <function-decl name='check_struct&lt;OT::FixedVersion&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FixedVersion*' -->
            <parameter type-id='type-id-326'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<short unsigned int, 2u> >(const OT::IntType<short unsigned int, 2u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short unsigned int, 2u>*' -->
            <parameter type-id='type-id-335'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-427'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-481'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-482'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-483'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-484'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::AttachList, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-485'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-486'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-487'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat1>(const OT::CaretValueFormat1*) -->
          <function-decl name='check_struct&lt;OT::CaretValueFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CaretValueFormat1*' -->
            <parameter type-id='type-id-488'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat2>(const OT::CaretValueFormat2*) -->
          <function-decl name='check_struct&lt;OT::CaretValueFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CaretValueFormat2*' -->
            <parameter type-id='type-id-489'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Device>(const OT::Device*) -->
          <function-decl name='check_struct&lt;OT::Device&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Device*' -->
            <parameter type-id='type-id-490'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Device, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-491'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat3>(const OT::CaretValueFormat3*) -->
          <function-decl name='check_struct&lt;OT::CaretValueFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CaretValueFormat3*' -->
            <parameter type-id='type-id-492'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-493'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-494'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LigCaretList, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-495'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ClassDefFormat1>(const OT::ClassDefFormat1*) -->
          <function-decl name='check_struct&lt;OT::ClassDefFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ClassDefFormat1*' -->
            <parameter type-id='type-id-496'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ClassDef, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-497'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-498'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-499'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::MarkGlyphSets, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-500'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Record&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-501'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Index, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-502'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::LangSys>(const OT::LangSys*) -->
          <function-decl name='check_struct&lt;OT::LangSys&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LangSys*' -->
            <parameter type-id='type-id-503'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LangSys, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-504'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Record&lt;OT::LangSys&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-505'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Record<OT::LangSys> >(const OT::Record<OT::LangSys>*) -->
          <function-decl name='check_struct&lt;OT::Record&lt;OT::LangSys&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Record<OT::LangSys>*' -->
            <parameter type-id='type-id-506'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Script, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-507'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Record<OT::Script> >(const OT::Record<OT::Script>*) -->
          <function-decl name='check_struct&lt;OT::Record&lt;OT::Script&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Record<OT::Script>*' -->
            <parameter type-id='type-id-508'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-509'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Record&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-510'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsSize>(const OT::FeatureParamsSize*) -->
          <function-decl name='check_struct&lt;OT::FeatureParamsSize&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FeatureParamsSize*' -->
            <parameter type-id='type-id-511'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsStylisticSet>(const OT::FeatureParamsStylisticSet*) -->
          <function-decl name='check_struct&lt;OT::FeatureParamsStylisticSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FeatureParamsStylisticSet*' -->
            <parameter type-id='type-id-512'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;unsigned int, 3u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-513'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsCharacterVariants>(const OT::FeatureParamsCharacterVariants*) -->
          <function-decl name='check_struct&lt;OT::FeatureParamsCharacterVariants&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FeatureParamsCharacterVariants*' -->
            <parameter type-id='type-id-514'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-515'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Feature>(const OT::Feature*) -->
          <function-decl name='check_struct&lt;OT::Feature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Feature*' -->
            <parameter type-id='type-id-516'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >, OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> > >(OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*, const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-446'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-517'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Feature, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-518'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Record<OT::Feature> >(const OT::Record<OT::Feature>*) -->
          <function-decl name='check_struct&lt;OT::Record&lt;OT::Feature&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Record<OT::Feature>*' -->
            <parameter type-id='type-id-519'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-520'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-521'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-522'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Lookup>(const OT::Lookup*) -->
          <function-decl name='check_struct&lt;OT::Lookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Lookup*' -->
            <parameter type-id='type-id-523'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-524'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::Lookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-525'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-526'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-527'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<short int, 2u> >(const OT::IntType<short int, 2u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;short int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short int, 2u>*' -->
            <parameter type-id='type-id-332'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-528'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-529'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-530'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-531'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(const OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-532'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-533'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-534'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-535'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-536'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-537'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-538'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ContextFormat3>(const OT::ContextFormat3*) -->
          <function-decl name='check_struct&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3*' -->
            <parameter type-id='type-id-539'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-540'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-541'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::LookupRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-542'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-543'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-544'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-545'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ExtensionFormat1>(const OT::ExtensionFormat1*) -->
          <function-decl name='check_struct&lt;OT::ExtensionFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ExtensionFormat1*' -->
            <parameter type-id='type-id-546'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-547'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-548'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::SubstLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-549'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-550'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-551'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-552'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::PairSet>(const OT::PairSet*) -->
          <function-decl name='check_struct&lt;OT::PairSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairSet*' -->
            <parameter type-id='type-id-553'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-554'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::EntryExitRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-555'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat1>(const OT::AnchorFormat1*) -->
          <function-decl name='check_struct&lt;OT::AnchorFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorFormat1*' -->
            <parameter type-id='type-id-556'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat2>(const OT::AnchorFormat2*) -->
          <function-decl name='check_struct&lt;OT::AnchorFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorFormat2*' -->
            <parameter type-id='type-id-557'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat3>(const OT::AnchorFormat3*) -->
          <function-decl name='check_struct&lt;OT::AnchorFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorFormat3*' -->
            <parameter type-id='type-id-558'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Anchor, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-559'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::MarkRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-560'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkRecord>(const OT::MarkRecord*) -->
          <function-decl name='check_struct&lt;OT::MarkRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkRecord*' -->
            <parameter type-id='type-id-561'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::MarkArray, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-562'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorMatrix>(const OT::AnchorMatrix*) -->
          <function-decl name='check_struct&lt;OT::AnchorMatrix&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorMatrix*' -->
            <parameter type-id='type-id-563'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-564'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1*) -->
          <function-decl name='check_struct&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1*' -->
            <parameter type-id='type-id-565'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-566'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::AnchorMatrix&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-567'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1*) -->
          <function-decl name='check_struct&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1*' -->
            <parameter type-id='type-id-568'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1*) -->
          <function-decl name='check_struct&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1*' -->
            <parameter type-id='type-id-569'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::SinglePosFormat1>(const OT::SinglePosFormat1*) -->
          <function-decl name='check_struct&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1*' -->
            <parameter type-id='type-id-570'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::SinglePosFormat2>(const OT::SinglePosFormat2*) -->
          <function-decl name='check_struct&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2*' -->
            <parameter type-id='type-id-571'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::PairPosFormat1>(const OT::PairPosFormat1*) -->
          <function-decl name='check_struct&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1*' -->
            <parameter type-id='type-id-572'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::PairPosFormat2>(const OT::PairPosFormat2*) -->
          <function-decl name='check_struct&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2*' -->
            <parameter type-id='type-id-573'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-574'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-575'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::PosLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-375' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-576'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LangSys, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-445' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-446' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-447' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Device, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-448' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ClassDef, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-449' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::AttachList, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-450' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LigCaretList, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-451' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::MarkGlyphSets, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-452' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-453' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-454' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::Lookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-455' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::SubstLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-456' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Anchor, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-457' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::MarkArray, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-458' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-459' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::AnchorMatrix&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-460' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::PosLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-461' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-462' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-463' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-464' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, int>(OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-465' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-466' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-467' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-468' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-469' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-470' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-471' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-472' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-473' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-474' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-475' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-476' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-477' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-478' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Script, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-479' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >, int>(OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*, const int&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::Feature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-480' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='type-id-396' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FixedVersion>(const OT::FixedVersion*) -->
          <function-decl name='check_struct&lt;OT::FixedVersion&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FixedVersion*' -->
            <parameter type-id='type-id-326' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<short unsigned int, 2u> >(const OT::IntType<short unsigned int, 2u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short unsigned int, 2u>*' -->
            <parameter type-id='type-id-335' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-427' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-481' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-482' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-483' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-484' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::AttachList, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-485' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-486' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-487' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat1>(const OT::CaretValueFormat1*) -->
          <function-decl name='check_struct&lt;OT::CaretValueFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CaretValueFormat1*' -->
            <parameter type-id='type-id-488' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat2>(const OT::CaretValueFormat2*) -->
          <function-decl name='check_struct&lt;OT::CaretValueFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CaretValueFormat2*' -->
            <parameter type-id='type-id-489' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Device>(const OT::Device*) -->
          <function-decl name='check_struct&lt;OT::Device&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Device*' -->
            <parameter type-id='type-id-490' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Device, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-491' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat3>(const OT::CaretValueFormat3*) -->
          <function-decl name='check_struct&lt;OT::CaretValueFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CaretValueFormat3*' -->
            <parameter type-id='type-id-492' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-493' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-494' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LigCaretList, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-495' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ClassDefFormat1>(const OT::ClassDefFormat1*) -->
          <function-decl name='check_struct&lt;OT::ClassDefFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ClassDefFormat1*' -->
            <parameter type-id='type-id-496' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ClassDef, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-497' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-498' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > >(const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-499' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::MarkGlyphSets, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-500' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Record&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-501' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Index, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-502' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::LangSys>(const OT::LangSys*) -->
          <function-decl name='check_struct&lt;OT::LangSys&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LangSys*' -->
            <parameter type-id='type-id-503' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LangSys, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-504' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Record&lt;OT::LangSys&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-505' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Record<OT::LangSys> >(const OT::Record<OT::LangSys>*) -->
          <function-decl name='check_struct&lt;OT::Record&lt;OT::LangSys&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Record<OT::LangSys>*' -->
            <parameter type-id='type-id-506' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Script, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-507' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Record<OT::Script> >(const OT::Record<OT::Script>*) -->
          <function-decl name='check_struct&lt;OT::Record&lt;OT::Script&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Record<OT::Script>*' -->
            <parameter type-id='type-id-508' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-509' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Record&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-510' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsSize>(const OT::FeatureParamsSize*) -->
          <function-decl name='check_struct&lt;OT::FeatureParamsSize&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FeatureParamsSize*' -->
            <parameter type-id='type-id-511' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsStylisticSet>(const OT::FeatureParamsStylisticSet*) -->
          <function-decl name='check_struct&lt;OT::FeatureParamsStylisticSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FeatureParamsStylisticSet*' -->
            <parameter type-id='type-id-512' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::IntType&lt;unsigned int, 3u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-513' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsCharacterVariants>(const OT::FeatureParamsCharacterVariants*) -->
          <function-decl name='check_struct&lt;OT::FeatureParamsCharacterVariants&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::FeatureParamsCharacterVariants*' -->
            <parameter type-id='type-id-514' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-515' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Feature>(const OT::Feature*) -->
          <function-decl name='check_struct&lt;OT::Feature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Feature*' -->
            <parameter type-id='type-id-516' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >, OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> > >(OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*, const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='try_set&lt;OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-297' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-446' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-517' name='v' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='272' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Feature, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-518' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Record<OT::Feature> >(const OT::Record<OT::Feature>*) -->
          <function-decl name='check_struct&lt;OT::Record&lt;OT::Feature&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Record<OT::Feature>*' -->
            <parameter type-id='type-id-519' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::RecordListOf&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-520' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-521' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-522' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::Lookup>(const OT::Lookup*) -->
          <function-decl name='check_struct&lt;OT::Lookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Lookup*' -->
            <parameter type-id='type-id-523' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-524' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::Lookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-525' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-526' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-527' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::IntType<short int, 2u> >(const OT::IntType<short int, 2u>*) -->
          <function-decl name='check_struct&lt;OT::IntType&lt;short int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short int, 2u>*' -->
            <parameter type-id='type-id-332' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-528' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-529' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-530' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-531' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(const OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-532' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-533' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-534' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-535' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-536' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-537' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-538' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ContextFormat3>(const OT::ContextFormat3*) -->
          <function-decl name='check_struct&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3*' -->
            <parameter type-id='type-id-539' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-540' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-541' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::LookupRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-542' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-543' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-544' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-545' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ExtensionFormat1>(const OT::ExtensionFormat1*) -->
          <function-decl name='check_struct&lt;OT::ExtensionFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ExtensionFormat1*' -->
            <parameter type-id='type-id-546' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-547' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-548' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::SubstLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-549' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-550' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-551' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-552' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::PairSet>(const OT::PairSet*) -->
          <function-decl name='check_struct&lt;OT::PairSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairSet*' -->
            <parameter type-id='type-id-553' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-554' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::EntryExitRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-555' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat1>(const OT::AnchorFormat1*) -->
          <function-decl name='check_struct&lt;OT::AnchorFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorFormat1*' -->
            <parameter type-id='type-id-556' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat2>(const OT::AnchorFormat2*) -->
          <function-decl name='check_struct&lt;OT::AnchorFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorFormat2*' -->
            <parameter type-id='type-id-557' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat3>(const OT::AnchorFormat3*) -->
          <function-decl name='check_struct&lt;OT::AnchorFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorFormat3*' -->
            <parameter type-id='type-id-558' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::Anchor, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-559' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::MarkRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-560' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkRecord>(const OT::MarkRecord*) -->
          <function-decl name='check_struct&lt;OT::MarkRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkRecord*' -->
            <parameter type-id='type-id-561' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::MarkArray, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-562' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::AnchorMatrix>(const OT::AnchorMatrix*) -->
          <function-decl name='check_struct&lt;OT::AnchorMatrix&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AnchorMatrix*' -->
            <parameter type-id='type-id-563' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-564' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1*) -->
          <function-decl name='check_struct&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1*' -->
            <parameter type-id='type-id-565' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(const OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-566' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::AnchorMatrix&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-567' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1*) -->
          <function-decl name='check_struct&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1*' -->
            <parameter type-id='type-id-568' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1*) -->
          <function-decl name='check_struct&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1*' -->
            <parameter type-id='type-id-569' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::SinglePosFormat1>(const OT::SinglePosFormat1*) -->
          <function-decl name='check_struct&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1*' -->
            <parameter type-id='type-id-570' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::SinglePosFormat2>(const OT::SinglePosFormat2*) -->
          <function-decl name='check_struct&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2*' -->
            <parameter type-id='type-id-571' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::PairPosFormat1>(const OT::PairPosFormat1*) -->
          <function-decl name='check_struct&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1*' -->
            <parameter type-id='type-id-572' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::PairPosFormat2>(const OT::PairPosFormat2*) -->
          <function-decl name='check_struct&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2*' -->
            <parameter type-id='type-id-573' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-574' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-575' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> > >(const OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*) -->
          <function-decl name='check_struct&lt;OT::OffsetTo&lt;OT::OffsetListOf&lt;OT::PosLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::hb_sanitize_context_t* const' -->
            <parameter type-id='type-id-376' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-576' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='248' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::hb_serialize_context_t -->
      <class-decl name='hb_serialize_context_t' size-in-bits='320' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='377' column='1' id='type-id-298'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned int OT::hb_serialize_context_t::debug_depth -->
          <var-decl name='debug_depth' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='480' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char* OT::hb_serialize_context_t::start -->
          <var-decl name='start' type-id='type-id-44' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='481' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- char* OT::hb_serialize_context_t::end -->
          <var-decl name='end' type-id='type-id-44' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='481' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- char* OT::hb_serialize_context_t::head -->
          <var-decl name='head' type-id='type-id-44' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='481' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- bool OT::hb_serialize_context_t::ran_out_of_room -->
          <var-decl name='ran_out_of_room' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='482' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int) -->
          <function-decl name='hb_serialize_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int) -->
          <function-decl name='hb_serialize_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int) -->
          <function-decl name='hb_serialize_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int) -->
          <function-decl name='hb_serialize_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Coverage* OT::hb_serialize_context_t::start_embed<OT::Coverage>() -->
          <function-decl name='start_embed&lt;OT::Coverage&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- OT::Coverage* -->
            <return type-id='type-id-577'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Ligature* OT::hb_serialize_context_t::start_embed<OT::Ligature>() -->
          <function-decl name='start_embed&lt;OT::Ligature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- OT::Ligature* -->
            <return type-id='type-id-578'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSet* OT::hb_serialize_context_t::start_embed<OT::LigatureSet>() -->
          <function-decl name='start_embed&lt;OT::LigatureSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- OT::LigatureSet* -->
            <return type-id='type-id-579'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookupSubTable* OT::hb_serialize_context_t::start_embed<OT::SubstLookupSubTable>() -->
          <function-decl name='start_embed&lt;OT::SubstLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- OT::SubstLookupSubTable* -->
            <return type-id='type-id-580'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookup* OT::hb_serialize_context_t::start_embed<OT::SubstLookup>() -->
          <function-decl name='start_embed&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- OT::SubstLookup* -->
            <return type-id='type-id-581'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Lookup* OT::hb_serialize_context_t::allocate_size<OT::Lookup>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::Lookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::Lookup* -->
            <return type-id='type-id-582'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-583'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-584'/>
            <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-583'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-584'/>
            <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-583'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Lookup* OT::hb_serialize_context_t::extend_min<OT::Lookup>(OT::Lookup&) -->
          <function-decl name='extend_min&lt;OT::Lookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::Lookup&' -->
            <parameter type-id='type-id-585'/>
            <!-- OT::Lookup* -->
            <return type-id='type-id-582'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::IntType<short unsigned int, 2u>* OT::hb_serialize_context_t::allocate_size<OT::IntType<short unsigned int, 2u> >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::IntType<short unsigned int, 2u>* -->
            <return type-id='type-id-270'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat1* OT::hb_serialize_context_t::allocate_size<OT::SingleSubstFormat1>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::SingleSubstFormat1* -->
            <return type-id='type-id-586'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Coverage* OT::hb_serialize_context_t::allocate_size<OT::Coverage>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::Coverage&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::Coverage* -->
            <return type-id='type-id-577'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat1* OT::hb_serialize_context_t::allocate_size<OT::CoverageFormat1>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::CoverageFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::CoverageFormat1* -->
            <return type-id='type-id-587'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SortedArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-588'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat1* OT::hb_serialize_context_t::extend_min<OT::CoverageFormat1>(OT::CoverageFormat1&) -->
          <function-decl name='extend_min&lt;OT::CoverageFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::CoverageFormat1&' -->
            <parameter type-id='type-id-589'/>
            <!-- OT::CoverageFormat1* -->
            <return type-id='type-id-587'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::SortedArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-590'/>
            <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-588'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat2* OT::hb_serialize_context_t::allocate_size<OT::CoverageFormat2>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::CoverageFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::CoverageFormat2* -->
            <return type-id='type-id-591'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SortedArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-592'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat2* OT::hb_serialize_context_t::extend_min<OT::CoverageFormat2>(OT::CoverageFormat2&) -->
          <function-decl name='extend_min&lt;OT::CoverageFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::CoverageFormat2&' -->
            <parameter type-id='type-id-593'/>
            <!-- OT::CoverageFormat2* -->
            <return type-id='type-id-591'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > >(OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::SortedArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-594'/>
            <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-592'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Coverage* OT::hb_serialize_context_t::extend_min<OT::Coverage>(OT::Coverage&) -->
          <function-decl name='extend_min&lt;OT::Coverage&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::Coverage&' -->
            <parameter type-id='type-id-595'/>
            <!-- OT::Coverage* -->
            <return type-id='type-id-577'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat1* OT::hb_serialize_context_t::extend_min<OT::SingleSubstFormat1>(OT::SingleSubstFormat1&) -->
          <function-decl name='extend_min&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-596'/>
            <!-- OT::SingleSubstFormat1* -->
            <return type-id='type-id-586'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat2* OT::hb_serialize_context_t::allocate_size<OT::SingleSubstFormat2>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::SingleSubstFormat2* -->
            <return type-id='type-id-597'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-598'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-599'/>
            <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-598'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-599'/>
            <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-598'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat2* OT::hb_serialize_context_t::extend_min<OT::SingleSubstFormat2>(OT::SingleSubstFormat2&) -->
          <function-decl name='extend_min&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-600'/>
            <!-- OT::SingleSubstFormat2* -->
            <return type-id='type-id-597'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSubstFormat1* OT::hb_serialize_context_t::allocate_size<OT::LigatureSubstFormat1>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::LigatureSubstFormat1* -->
            <return type-id='type-id-601'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-602'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-603'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-602'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-603'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-602'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSet* OT::hb_serialize_context_t::allocate_size<OT::LigatureSet>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::LigatureSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::LigatureSet* -->
            <return type-id='type-id-579'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-604'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-605'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-604'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-605'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-604'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Ligature* OT::hb_serialize_context_t::allocate_size<OT::Ligature>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::Ligature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::Ligature* -->
            <return type-id='type-id-578'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-606'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-607'/>
            <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-606'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-607'/>
            <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-606'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Ligature* OT::hb_serialize_context_t::extend_min<OT::Ligature>(OT::Ligature&) -->
          <function-decl name='extend_min&lt;OT::Ligature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::Ligature&' -->
            <parameter type-id='type-id-608'/>
            <!-- OT::Ligature* -->
            <return type-id='type-id-578'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSet* OT::hb_serialize_context_t::extend_min<OT::LigatureSet>(OT::LigatureSet&) -->
          <function-decl name='extend_min&lt;OT::LigatureSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::LigatureSet&' -->
            <parameter type-id='type-id-609'/>
            <!-- OT::LigatureSet* -->
            <return type-id='type-id-579'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSubstFormat1* OT::hb_serialize_context_t::extend_min<OT::LigatureSubstFormat1>(OT::LigatureSubstFormat1&) -->
          <function-decl name='extend_min&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-610'/>
            <!-- OT::LigatureSubstFormat1* -->
            <return type-id='type-id-601'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookup* OT::hb_serialize_context_t::start_serialize<OT::SubstLookup>() -->
          <function-decl name='start_serialize&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='389' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- OT::SubstLookup* -->
            <return type-id='type-id-581'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::USHORT* OT::hb_serialize_context_t::extend_min<OT::USHORT>(OT::USHORT&) -->
          <function-decl name='extend_min&lt;OT::USHORT&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'OT::USHORT&' -->
            <parameter type-id='type-id-611'/>
            <!-- OT::USHORT* -->
            <return type-id='type-id-425'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookup* OT::hb_serialize_context_t::copy<OT::SubstLookup>() -->
          <function-decl name='copy&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='410' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- OT::SubstLookup* -->
            <return type-id='type-id-581'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Coverage* OT::hb_serialize_context_t::start_embed<OT::Coverage>() -->
          <function-decl name='start_embed&lt;OT::Coverage&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- OT::Coverage* -->
            <return type-id='type-id-577'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Ligature* OT::hb_serialize_context_t::start_embed<OT::Ligature>() -->
          <function-decl name='start_embed&lt;OT::Ligature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- OT::Ligature* -->
            <return type-id='type-id-578'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSet* OT::hb_serialize_context_t::start_embed<OT::LigatureSet>() -->
          <function-decl name='start_embed&lt;OT::LigatureSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- OT::LigatureSet* -->
            <return type-id='type-id-579'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookupSubTable* OT::hb_serialize_context_t::start_embed<OT::SubstLookupSubTable>() -->
          <function-decl name='start_embed&lt;OT::SubstLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- OT::SubstLookupSubTable* -->
            <return type-id='type-id-580'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookup* OT::hb_serialize_context_t::start_embed<OT::SubstLookup>() -->
          <function-decl name='start_embed&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='440' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- OT::SubstLookup* -->
            <return type-id='type-id-581'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Lookup* OT::hb_serialize_context_t::allocate_size<OT::Lookup>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::Lookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::Lookup* -->
            <return type-id='type-id-582'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-583'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-584' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-583'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-584' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1'/>
            <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-583'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Lookup* OT::hb_serialize_context_t::extend_min<OT::Lookup>(OT::Lookup&) -->
          <function-decl name='extend_min&lt;OT::Lookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::Lookup&' -->
            <parameter type-id='type-id-585' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::Lookup* -->
            <return type-id='type-id-582'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::IntType<short unsigned int, 2u>* OT::hb_serialize_context_t::allocate_size<OT::IntType<short unsigned int, 2u> >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::IntType<short unsigned int, 2u>* -->
            <return type-id='type-id-270'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat1* OT::hb_serialize_context_t::allocate_size<OT::SingleSubstFormat1>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::SingleSubstFormat1* -->
            <return type-id='type-id-586'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Coverage* OT::hb_serialize_context_t::allocate_size<OT::Coverage>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::Coverage&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::Coverage* -->
            <return type-id='type-id-577'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat1* OT::hb_serialize_context_t::allocate_size<OT::CoverageFormat1>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::CoverageFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::CoverageFormat1* -->
            <return type-id='type-id-587'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SortedArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-588'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat1* OT::hb_serialize_context_t::extend_min<OT::CoverageFormat1>(OT::CoverageFormat1&) -->
          <function-decl name='extend_min&lt;OT::CoverageFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::CoverageFormat1&' -->
            <parameter type-id='type-id-589' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::CoverageFormat1* -->
            <return type-id='type-id-587'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::SortedArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-590' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1'/>
            <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-588'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat2* OT::hb_serialize_context_t::allocate_size<OT::CoverageFormat2>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::CoverageFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::CoverageFormat2* -->
            <return type-id='type-id-591'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SortedArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-592'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::CoverageFormat2* OT::hb_serialize_context_t::extend_min<OT::CoverageFormat2>(OT::CoverageFormat2&) -->
          <function-decl name='extend_min&lt;OT::CoverageFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::CoverageFormat2&' -->
            <parameter type-id='type-id-593' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::CoverageFormat2* -->
            <return type-id='type-id-591'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > >(OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::SortedArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-594' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1'/>
            <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-592'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Coverage* OT::hb_serialize_context_t::extend_min<OT::Coverage>(OT::Coverage&) -->
          <function-decl name='extend_min&lt;OT::Coverage&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::Coverage&' -->
            <parameter type-id='type-id-595' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::Coverage* -->
            <return type-id='type-id-577'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat1* OT::hb_serialize_context_t::extend_min<OT::SingleSubstFormat1>(OT::SingleSubstFormat1&) -->
          <function-decl name='extend_min&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-596' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::SingleSubstFormat1* -->
            <return type-id='type-id-586'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat2* OT::hb_serialize_context_t::allocate_size<OT::SingleSubstFormat2>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::SingleSubstFormat2* -->
            <return type-id='type-id-597'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-598'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-599' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-598'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-599' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1'/>
            <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-598'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SingleSubstFormat2* OT::hb_serialize_context_t::extend_min<OT::SingleSubstFormat2>(OT::SingleSubstFormat2&) -->
          <function-decl name='extend_min&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-600' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::SingleSubstFormat2* -->
            <return type-id='type-id-597'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSubstFormat1* OT::hb_serialize_context_t::allocate_size<OT::LigatureSubstFormat1>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::LigatureSubstFormat1* -->
            <return type-id='type-id-601'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-602'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-603' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-602'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-603' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-602'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSet* OT::hb_serialize_context_t::allocate_size<OT::LigatureSet>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::LigatureSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::LigatureSet* -->
            <return type-id='type-id-579'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-604'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-605' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-604'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-605' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1'/>
            <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-604'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Ligature* OT::hb_serialize_context_t::allocate_size<OT::Ligature>(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::Ligature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::Ligature* -->
            <return type-id='type-id-578'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::allocate_size<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(unsigned int) -->
          <function-decl name='allocate_size&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='421' column='1'/>
            <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-606'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend_min<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend_min&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-607' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-606'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* OT::hb_serialize_context_t::extend<OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > >(OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='extend&lt;OT::HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-607' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='466' column='1'/>
            <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
            <return type-id='type-id-606'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::Ligature* OT::hb_serialize_context_t::extend_min<OT::Ligature>(OT::Ligature&) -->
          <function-decl name='extend_min&lt;OT::Ligature&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::Ligature&' -->
            <parameter type-id='type-id-608' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::Ligature* -->
            <return type-id='type-id-578'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSet* OT::hb_serialize_context_t::extend_min<OT::LigatureSet>(OT::LigatureSet&) -->
          <function-decl name='extend_min&lt;OT::LigatureSet&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::LigatureSet&' -->
            <parameter type-id='type-id-609' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::LigatureSet* -->
            <return type-id='type-id-579'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::LigatureSubstFormat1* OT::hb_serialize_context_t::extend_min<OT::LigatureSubstFormat1>(OT::LigatureSubstFormat1&) -->
          <function-decl name='extend_min&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-610' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::LigatureSubstFormat1* -->
            <return type-id='type-id-601'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int) -->
          <function-decl name='hb_serialize_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='start' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookup* OT::hb_serialize_context_t::start_serialize<OT::SubstLookup>() -->
          <function-decl name='start_serialize&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='389' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- OT::SubstLookup* -->
            <return type-id='type-id-581'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::USHORT* OT::hb_serialize_context_t::extend_min<OT::USHORT>(OT::USHORT&) -->
          <function-decl name='extend_min&lt;OT::USHORT&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::USHORT&' -->
            <parameter type-id='type-id-611' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='457' column='1'/>
            <!-- OT::USHORT* -->
            <return type-id='type-id-425'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::SubstLookup* OT::hb_serialize_context_t::copy<OT::SubstLookup>() -->
          <function-decl name='copy&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='410' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t* const' -->
            <parameter type-id='type-id-612' name='this' is-artificial='yes'/>
            <!-- OT::SubstLookup* -->
            <return type-id='type-id-581'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int) -->
          <function-decl name='hb_serialize_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='378' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_serialize_context_t*' -->
            <parameter type-id='type-id-299' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::head -->
      <class-decl name='head' size-in-bits='432' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='45' column='1' id='type-id-300'>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::head::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='46' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::FixedVersion OT::head::version -->
          <var-decl name='version' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='60' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::FixedVersion OT::head::fontRevision -->
          <var-decl name='fontRevision' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='62' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::ULONG OT::head::checkSumAdjustment -->
          <var-decl name='checkSumAdjustment' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='63' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::ULONG OT::head::magicNumber -->
          <var-decl name='magicNumber' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='66' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='128'>
          <!-- OT::USHORT OT::head::flags -->
          <var-decl name='flags' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='67' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='144'>
          <!-- OT::USHORT OT::head::unitsPerEm -->
          <var-decl name='unitsPerEm' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='113' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='160'>
          <!-- OT::LONGDATETIME OT::head::created -->
          <var-decl name='created' type-id='type-id-274' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='116' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='224'>
          <!-- OT::LONGDATETIME OT::head::modified -->
          <var-decl name='modified' type-id='type-id-274' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='118' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='288'>
          <!-- OT::SHORT OT::head::xMin -->
          <var-decl name='xMin' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='120' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='304'>
          <!-- OT::SHORT OT::head::yMin -->
          <var-decl name='yMin' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='121' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='320'>
          <!-- OT::SHORT OT::head::xMax -->
          <var-decl name='xMax' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='122' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='336'>
          <!-- OT::SHORT OT::head::yMax -->
          <var-decl name='yMax' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='123' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='352'>
          <!-- OT::USHORT OT::head::macStyle -->
          <var-decl name='macStyle' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='124' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='368'>
          <!-- OT::USHORT OT::head::lowestRecPPEM -->
          <var-decl name='lowestRecPPEM' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='132' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='384'>
          <!-- OT::SHORT OT::head::fontDirectionHint -->
          <var-decl name='fontDirectionHint' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='133' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='400'>
          <!-- OT::SHORT OT::head::indexToLocFormat -->
          <var-decl name='indexToLocFormat' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='139' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='416'>
          <!-- OT::SHORT OT::head::glyphDataFormat -->
          <var-decl name='glyphDataFormat' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='140' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::head::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='142' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::head::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-head-table.hh' line='142' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::maxp -->
      <class-decl name='maxp' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-maxp-table.hh' line='43' column='1' id='type-id-303'>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::maxp::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-maxp-table.hh' line='44' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::FixedVersion OT::maxp::version -->
          <var-decl name='version' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-maxp-table.hh' line='58' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::maxp::numGlyphs -->
          <var-decl name='numGlyphs' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-maxp-table.hh' line='60' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::maxp::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-maxp-table.hh' line='62' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::maxp::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-maxp-table.hh' line='62' column='1'/>
        </data-member>
      </class-decl>
      <!-- typedef OT::IntType<int, 4u> OT::LONG -->
      <typedef-decl name='LONG' type-id='type-id-265' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='635' column='1' id='type-id-411'/>
      <!-- typedef OT::OffsetTable OT::OpenTypeFontFace -->
      <typedef-decl name='OpenTypeFontFace' type-id='type-id-276' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-file-private.hh' line='119' column='1' id='type-id-354'/>
      <!-- typedef OT::IntType<short int, 2u> OT::SHORT -->
      <typedef-decl name='SHORT' type-id='type-id-267' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='633' column='1' id='type-id-613'/>
      <!-- typedef OT::IntType<unsigned int, 4u> OT::ULONG -->
      <typedef-decl name='ULONG' type-id='type-id-271' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='634' column='1' id='type-id-371'/>
      <!-- typedef OT::IntType<short unsigned int, 2u> OT::USHORT -->
      <typedef-decl name='USHORT' type-id='type-id-269' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='632' column='1' id='type-id-410'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::OffsetTable, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-408'/>
    </namespace-decl>
    <!-- variadic parameter type -->
    <type-decl name='variadic parameter type' id='type-id-614'/>
    <!-- hb_blob_t* (hb_face_t*, hb_tag_t, void*) -->
    <function-type size-in-bits='64' id='type-id-397'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- hb_blob_t* -->
      <return type-id='type-id-58'/>
    </function-type>
    <!-- hb_bool_t (hb_font_t*, void*, const char*, int, hb_codepoint_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-398'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- hb_bool_t (hb_font_t*, void*, hb_codepoint_t, char*, unsigned int, void*) -->
    <function-type size-in-bits='64' id='type-id-399'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-44'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- hb_bool_t (hb_font_t*, void*, hb_codepoint_t, hb_glyph_extents_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-401'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_glyph_extents_t*' -->
      <parameter type-id='type-id-404'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- hb_bool_t (hb_font_t*, void*, hb_codepoint_t, hb_position_t*, hb_position_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-402'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- hb_bool_t (hb_font_t*, void*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-400'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- hb_bool_t (hb_font_t*, void*, hb_codepoint_t, unsigned int, hb_position_t*, hb_position_t*, void*) -->
    <function-type size-in-bits='64' id='type-id-403'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
    <!-- hb_position_t (hb_font_t*, void*, hb_codepoint_t, hb_codepoint_t, void*) -->
    <function-type size-in-bits='64' id='type-id-405'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_position_t -->
      <return type-id='type-id-103'/>
    </function-type>
    <!-- hb_position_t (hb_font_t*, void*, hb_codepoint_t, void*) -->
    <function-type size-in-bits='64' id='type-id-406'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- typedef hb_position_t -->
      <return type-id='type-id-103'/>
    </function-type>
    <!-- hb_bool_t (hb_shape_plan_t*, hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int) -->
    <function-type size-in-bits='64' id='type-id-244'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205'/>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155'/>
      <!-- parameter of type 'const hb_feature_t*' -->
      <parameter type-id='type-id-387'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='hb-fallback-shape.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-font.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- hb_font_t* const -->
    <qualified-type-def type-id='type-id-166' const='yes' id='type-id-615'/>
    <!-- int* -->
    <pointer-type-def type-id='type-id-11' size-in-bits='64' id='type-id-616'/>
    <!-- hb_font_funcs_t* hb_font_funcs_create() -->
    <function-decl name='hb_font_funcs_create' mangled-name='hb_font_funcs_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='242' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_create'>
      <!-- hb_font_funcs_t* -->
      <return type-id='type-id-168'/>
    </function-decl>
    <!-- hb_font_funcs_t* hb_font_funcs_get_empty() -->
    <function-decl name='hb_font_funcs_get_empty' mangled-name='hb_font_funcs_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='264' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_get_empty'>
      <!-- hb_font_funcs_t* -->
      <return type-id='type-id-168'/>
    </function-decl>
    <!-- hb_font_funcs_t* hb_font_funcs_reference(hb_font_funcs_t*) -->
    <function-decl name='hb_font_funcs_reference' mangled-name='hb_font_funcs_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='280' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_reference'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='280' column='1'/>
      <!-- hb_font_funcs_t* -->
      <return type-id='type-id-168'/>
    </function-decl>
    <!-- void hb_font_funcs_destroy(hb_font_funcs_t*) -->
    <function-decl name='hb_font_funcs_destroy' mangled-name='hb_font_funcs_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='294' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_destroy'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='294' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_font_funcs_set_user_data(hb_font_funcs_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_font_funcs_set_user_data' mangled-name='hb_font_funcs_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='321' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_user_data'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='321' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='322' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='323' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='324' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='325' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_font_funcs_get_user_data(hb_font_funcs_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_font_funcs_get_user_data' mangled-name='hb_font_funcs_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='342' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_get_user_data'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='342' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='343' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- void hb_font_funcs_make_immutable(hb_font_funcs_t*) -->
    <function-decl name='hb_font_funcs_make_immutable' mangled-name='hb_font_funcs_make_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='358' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_make_immutable'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='358' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_font_funcs_is_immutable(hb_font_funcs_t*) -->
    <function-decl name='hb_font_funcs_is_immutable' mangled-name='hb_font_funcs_is_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_is_immutable'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='377' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_contour_point_func(hb_font_funcs_t*, hb_font_get_glyph_contour_point_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_contour_point_func' mangled-name='hb_font_funcs_set_glyph_contour_point_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_contour_point_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_contour_point_func_t' -->
      <parameter type-id='type-id-220' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_extents_func(hb_font_funcs_t*, hb_font_get_glyph_extents_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_extents_func' mangled-name='hb_font_funcs_set_glyph_extents_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_extents_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_extents_func_t' -->
      <parameter type-id='type-id-219' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_from_name_func(hb_font_funcs_t*, hb_font_get_glyph_from_name_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_from_name_func' mangled-name='hb_font_funcs_set_glyph_from_name_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_from_name_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_from_name_func_t' -->
      <parameter type-id='type-id-222' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_func(hb_font_funcs_t*, hb_font_get_glyph_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_func' mangled-name='hb_font_funcs_set_glyph_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_func_t' -->
      <parameter type-id='type-id-212' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_h_advance_func(hb_font_funcs_t*, hb_font_get_glyph_h_advance_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_h_advance_func' mangled-name='hb_font_funcs_set_glyph_h_advance_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_h_advance_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_h_advance_func_t' -->
      <parameter type-id='type-id-213' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_h_kerning_func(hb_font_funcs_t*, hb_font_get_glyph_h_kerning_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_h_kerning_func' mangled-name='hb_font_funcs_set_glyph_h_kerning_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_h_kerning_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_h_kerning_func_t' -->
      <parameter type-id='type-id-217' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_h_origin_func(hb_font_funcs_t*, hb_font_get_glyph_h_origin_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_h_origin_func' mangled-name='hb_font_funcs_set_glyph_h_origin_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_h_origin_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_h_origin_func_t' -->
      <parameter type-id='type-id-215' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_name_func(hb_font_funcs_t*, hb_font_get_glyph_name_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_name_func' mangled-name='hb_font_funcs_set_glyph_name_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_name_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_name_func_t' -->
      <parameter type-id='type-id-221' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_v_advance_func(hb_font_funcs_t*, hb_font_get_glyph_v_advance_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_v_advance_func' mangled-name='hb_font_funcs_set_glyph_v_advance_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_v_advance_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_v_advance_func_t' -->
      <parameter type-id='type-id-214' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_v_kerning_func(hb_font_funcs_t*, hb_font_get_glyph_v_kerning_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_v_kerning_func' mangled-name='hb_font_funcs_set_glyph_v_kerning_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_v_kerning_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_v_kerning_func_t' -->
      <parameter type-id='type-id-218' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_funcs_set_glyph_v_origin_func(hb_font_funcs_t*, hb_font_get_glyph_v_origin_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_funcs_set_glyph_v_origin_func' mangled-name='hb_font_funcs_set_glyph_v_origin_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_funcs_set_glyph_v_origin_func'>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='ffuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_font_get_glyph_v_origin_func_t' -->
      <parameter type-id='type-id-216' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='411' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph(hb_font_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*) -->
    <function-decl name='hb_font_get_glyph' mangled-name='hb_font_get_glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='431' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='431' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='unicode' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='432' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='variation_selector' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='432' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='433' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_position_t hb_font_get_glyph_h_advance(hb_font_t*, hb_codepoint_t) -->
    <function-decl name='hb_font_get_glyph_h_advance' mangled-name='hb_font_get_glyph_h_advance' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='450' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_h_advance'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='450' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='451' column='1'/>
      <!-- typedef hb_position_t -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- hb_position_t hb_font_get_glyph_v_advance(hb_font_t*, hb_codepoint_t) -->
    <function-decl name='hb_font_get_glyph_v_advance' mangled-name='hb_font_get_glyph_v_advance' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='468' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_v_advance'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='468' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='469' column='1'/>
      <!-- typedef hb_position_t -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_h_origin(hb_font_t*, hb_codepoint_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_get_glyph_h_origin' mangled-name='hb_font_get_glyph_h_origin' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='488' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_h_origin'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='488' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='489' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='490' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='490' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_v_origin(hb_font_t*, hb_codepoint_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_get_glyph_v_origin' mangled-name='hb_font_get_glyph_v_origin' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='509' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_v_origin'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='509' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='510' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='511' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='511' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_position_t hb_font_get_glyph_h_kerning(hb_font_t*, hb_codepoint_t, hb_codepoint_t) -->
    <function-decl name='hb_font_get_glyph_h_kerning' mangled-name='hb_font_get_glyph_h_kerning' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='529' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_h_kerning'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='529' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='left_glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='530' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='right_glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='530' column='1'/>
      <!-- typedef hb_position_t -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- hb_position_t hb_font_get_glyph_v_kerning(hb_font_t*, hb_codepoint_t, hb_codepoint_t) -->
    <function-decl name='hb_font_get_glyph_v_kerning' mangled-name='hb_font_get_glyph_v_kerning' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='548' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_v_kerning'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='548' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='top_glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='549' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='bottom_glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='549' column='1'/>
      <!-- typedef hb_position_t -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_extents(hb_font_t*, hb_codepoint_t, hb_glyph_extents_t*) -->
    <function-decl name='hb_font_get_glyph_extents' mangled-name='hb_font_get_glyph_extents' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='567' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_extents'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='567' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='568' column='1'/>
      <!-- parameter of type 'hb_glyph_extents_t*' -->
      <parameter type-id='type-id-404' name='extents' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='569' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_contour_point(hb_font_t*, hb_codepoint_t, unsigned int, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_get_glyph_contour_point' mangled-name='hb_font_get_glyph_contour_point' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='589' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_contour_point'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='589' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='590' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='point_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='590' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='591' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='591' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_name(hb_font_t*, hb_codepoint_t, char*, unsigned int) -->
    <function-decl name='hb_font_get_glyph_name' mangled-name='hb_font_get_glyph_name' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='610' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_name'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='610' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='611' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-44' name='name' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='612' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='612' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_from_name(hb_font_t*, const char*, int, hb_codepoint_t*) -->
    <function-decl name='hb_font_get_glyph_from_name' mangled-name='hb_font_get_glyph_from_name' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='631' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_from_name'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='631' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='name' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='632' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='632' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='633' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_font_get_glyph_advance_for_direction(hb_font_t*, hb_codepoint_t, hb_direction_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_get_glyph_advance_for_direction' mangled-name='hb_font_get_glyph_advance_for_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='654' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_advance_for_direction'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='654' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='655' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='656' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='657' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='657' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_get_glyph_origin_for_direction(hb_font_t*, hb_codepoint_t, hb_direction_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_get_glyph_origin_for_direction' mangled-name='hb_font_get_glyph_origin_for_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='675' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_origin_for_direction'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='675' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='676' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='677' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='678' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='678' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_add_glyph_origin_for_direction(hb_font_t*, hb_codepoint_t, hb_direction_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_add_glyph_origin_for_direction' mangled-name='hb_font_add_glyph_origin_for_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='696' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_add_glyph_origin_for_direction'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='696' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='697' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='698' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='699' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='699' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_subtract_glyph_origin_for_direction(hb_font_t*, hb_codepoint_t, hb_direction_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_subtract_glyph_origin_for_direction' mangled-name='hb_font_subtract_glyph_origin_for_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='717' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_subtract_glyph_origin_for_direction'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='717' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='718' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='719' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='720' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='720' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_get_glyph_kerning_for_direction(hb_font_t*, hb_codepoint_t, hb_codepoint_t, hb_direction_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_get_glyph_kerning_for_direction' mangled-name='hb_font_get_glyph_kerning_for_direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='739' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_kerning_for_direction'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='739' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='first_glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='740' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='second_glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='740' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='741' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='742' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='742' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_extents_for_origin(hb_font_t*, hb_codepoint_t, hb_direction_t, hb_glyph_extents_t*) -->
    <function-decl name='hb_font_get_glyph_extents_for_origin' mangled-name='hb_font_get_glyph_extents_for_origin' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='761' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_extents_for_origin'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='761' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='762' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='763' column='1'/>
      <!-- parameter of type 'hb_glyph_extents_t*' -->
      <parameter type-id='type-id-404' name='extents' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='764' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_font_get_glyph_contour_point_for_origin(hb_font_t*, hb_codepoint_t, unsigned int, hb_direction_t, hb_position_t*, hb_position_t*) -->
    <function-decl name='hb_font_get_glyph_contour_point_for_origin' mangled-name='hb_font_get_glyph_contour_point_for_origin' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='785' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_glyph_contour_point_for_origin'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='785' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='786' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='point_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='786' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='787' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='788' column='1'/>
      <!-- parameter of type 'hb_position_t*' -->
      <parameter type-id='type-id-407' name='y' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='788' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_font_glyph_to_string(hb_font_t*, hb_codepoint_t, char*, unsigned int) -->
    <function-decl name='hb_font_glyph_to_string' mangled-name='hb_font_glyph_to_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='806' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_glyph_to_string'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='806' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='807' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-44' name='s' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='808' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='808' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_font_glyph_from_string(hb_font_t*, const char*, int, hb_codepoint_t*) -->
    <function-decl name='hb_font_glyph_from_string' mangled-name='hb_font_glyph_from_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='828' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_glyph_from_string'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='828' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='s' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='829' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='829' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='830' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_font_t* hb_font_create(hb_face_t*) -->
    <function-decl name='hb_font_create' mangled-name='hb_font_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='851' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_create'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='851' column='1'/>
      <!-- hb_font_t* -->
      <return type-id='type-id-158'/>
    </function-decl>
    <!-- hb_font_t* hb_font_create_sub_font(hb_font_t*) -->
    <function-decl name='hb_font_create_sub_font' mangled-name='hb_font_create_sub_font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='880' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_create_sub_font'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='parent' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='880' column='1'/>
      <!-- hb_font_t* -->
      <return type-id='type-id-158'/>
    </function-decl>
    <!-- hb_font_t* hb_font_get_empty() -->
    <function-decl name='hb_font_get_empty' mangled-name='hb_font_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='911' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_empty'>
      <!-- hb_font_t* -->
      <return type-id='type-id-158'/>
    </function-decl>
    <!-- hb_font_t* hb_font_reference(hb_font_t*) -->
    <function-decl name='hb_font_reference' mangled-name='hb_font_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='952' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_reference'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='952' column='1'/>
      <!-- hb_font_t* -->
      <return type-id='type-id-158'/>
    </function-decl>
    <!-- void hb_font_destroy(hb_font_t*) -->
    <function-decl name='hb_font_destroy' mangled-name='hb_font_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='966' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_destroy'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='966' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_font_set_user_data(hb_font_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_font_set_user_data' mangled-name='hb_font_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='999' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_set_user_data'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='999' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1000' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1001' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1002' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1003' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_font_get_user_data(hb_font_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_font_get_user_data' mangled-name='hb_font_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1020' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_user_data'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1020' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1021' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- void hb_font_make_immutable(hb_font_t*) -->
    <function-decl name='hb_font_make_immutable' mangled-name='hb_font_make_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1035' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_make_immutable'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1035' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_font_is_immutable(hb_font_t*) -->
    <function-decl name='hb_font_is_immutable' mangled-name='hb_font_is_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1054' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_is_immutable'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1054' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_font_t* hb_font_get_parent(hb_font_t*) -->
    <function-decl name='hb_font_get_parent' mangled-name='hb_font_get_parent' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1070' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_parent'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1070' column='1'/>
      <!-- hb_font_t* -->
      <return type-id='type-id-158'/>
    </function-decl>
    <!-- hb_face_t* hb_font_get_face(hb_font_t*) -->
    <function-decl name='hb_font_get_face' mangled-name='hb_font_get_face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1086' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_face'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1086' column='1'/>
      <!-- hb_face_t* -->
      <return type-id='type-id-167'/>
    </function-decl>
    <!-- void hb_font_set_funcs(hb_font_t*, hb_font_funcs_t*, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_set_funcs' mangled-name='hb_font_set_funcs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1104' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_set_funcs'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1104' column='1'/>
      <!-- parameter of type 'hb_font_funcs_t*' -->
      <parameter type-id='type-id-168' name='klass' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1105' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='font_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1106' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1107' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_set_funcs_data(hb_font_t*, void*, hb_destroy_func_t) -->
    <function-decl name='hb_font_set_funcs_data' mangled-name='hb_font_set_funcs_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1139' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_set_funcs_data'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1139' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='font_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1140' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1141' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_set_scale(hb_font_t*, int, int) -->
    <function-decl name='hb_font_set_scale' mangled-name='hb_font_set_scale' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1169' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_set_scale'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1169' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='x_scale' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1170' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='y_scale' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1171' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_get_scale(hb_font_t*, int*, int*) -->
    <function-decl name='hb_font_get_scale' mangled-name='hb_font_get_scale' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1191' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_scale'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1191' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-616' name='x_scale' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1192' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-616' name='y_scale' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1193' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_set_ppem(hb_font_t*, unsigned int, unsigned int) -->
    <function-decl name='hb_font_set_ppem' mangled-name='hb_font_set_ppem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1210' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_set_ppem'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1210' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='x_ppem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1211' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='y_ppem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1212' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_font_get_ppem(hb_font_t*, unsigned int*, unsigned int*) -->
    <function-decl name='hb_font_get_ppem' mangled-name='hb_font_get_ppem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1232' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_font_get_ppem'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1232' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='x_ppem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1233' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='y_ppem' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-font.cc' line='1234' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ft.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- enum FT_Encoding_ -->
    <enum-decl name='FT_Encoding_' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='698' column='1' id='type-id-617'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='FT_ENCODING_NONE' value='0'/>
      <enumerator name='FT_ENCODING_MS_SYMBOL' value='1937337698'/>
      <enumerator name='FT_ENCODING_UNICODE' value='1970170211'/>
      <enumerator name='FT_ENCODING_SJIS' value='1936353651'/>
      <enumerator name='FT_ENCODING_GB2312' value='1734484000'/>
      <enumerator name='FT_ENCODING_BIG5' value='1651074869'/>
      <enumerator name='FT_ENCODING_WANSUNG' value='2002873971'/>
      <enumerator name='FT_ENCODING_JOHAB' value='1785686113'/>
      <enumerator name='FT_ENCODING_MS_SJIS' value='1936353651'/>
      <enumerator name='FT_ENCODING_MS_GB2312' value='1734484000'/>
      <enumerator name='FT_ENCODING_MS_BIG5' value='1651074869'/>
      <enumerator name='FT_ENCODING_MS_WANSUNG' value='2002873971'/>
      <enumerator name='FT_ENCODING_MS_JOHAB' value='1785686113'/>
      <enumerator name='FT_ENCODING_ADOBE_STANDARD' value='1094995778'/>
      <enumerator name='FT_ENCODING_ADOBE_EXPERT' value='1094992453'/>
      <enumerator name='FT_ENCODING_ADOBE_CUSTOM' value='1094992451'/>
      <enumerator name='FT_ENCODING_ADOBE_LATIN_1' value='1818326065'/>
      <enumerator name='FT_ENCODING_OLD_LATIN_2' value='1818326066'/>
      <enumerator name='FT_ENCODING_APPLE_ROMAN' value='1634889070'/>
    </enum-decl>
    <!-- enum FT_Glyph_Format_ -->
    <enum-decl name='FT_Glyph_Format_' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='787' column='1' id='type-id-618'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='FT_GLYPH_FORMAT_NONE' value='0'/>
      <enumerator name='FT_GLYPH_FORMAT_COMPOSITE' value='1668246896'/>
      <enumerator name='FT_GLYPH_FORMAT_BITMAP' value='1651078259'/>
      <enumerator name='FT_GLYPH_FORMAT_OUTLINE' value='1869968492'/>
      <enumerator name='FT_GLYPH_FORMAT_PLOTTER' value='1886154612'/>
    </enum-decl>
    <!-- struct FT_BBox_ -->
    <class-decl name='FT_BBox_' size-in-bits='256' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='116' column='1' id='type-id-619'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Pos FT_BBox_::xMin -->
        <var-decl name='xMin' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='117' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Pos FT_BBox_::yMin -->
        <var-decl name='yMin' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='117' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- FT_Pos FT_BBox_::xMax -->
        <var-decl name='xMax' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='118' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_Pos FT_BBox_::yMax -->
        <var-decl name='yMax' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='118' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_Bitmap_ -->
    <class-decl name='FT_Bitmap_' size-in-bits='320' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='320' column='1' id='type-id-621'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int FT_Bitmap_::rows -->
        <var-decl name='rows' type-id='type-id-11' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='321' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int FT_Bitmap_::width -->
        <var-decl name='width' type-id='type-id-11' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='322' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int FT_Bitmap_::pitch -->
        <var-decl name='pitch' type-id='type-id-11' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='323' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char* FT_Bitmap_::buffer -->
        <var-decl name='buffer' type-id='type-id-622' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='324' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- short int FT_Bitmap_::num_grays -->
        <var-decl name='num_grays' type-id='type-id-87' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='325' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='208'>
        <!-- char FT_Bitmap_::pixel_mode -->
        <var-decl name='pixel_mode' type-id='type-id-2' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='326' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='216'>
        <!-- char FT_Bitmap_::palette_mode -->
        <var-decl name='palette_mode' type-id='type-id-2' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='327' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void* FT_Bitmap_::palette -->
        <var-decl name='palette' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='328' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_Bitmap_Size_ -->
    <class-decl name='FT_Bitmap_Size_' size-in-bits='256' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='334' column='1' id='type-id-623'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Short FT_Bitmap_Size_::height -->
        <var-decl name='height' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='335' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- FT_Short FT_Bitmap_Size_::width -->
        <var-decl name='width' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='336' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Pos FT_Bitmap_Size_::size -->
        <var-decl name='size' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='338' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- FT_Pos FT_Bitmap_Size_::x_ppem -->
        <var-decl name='x_ppem' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='340' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_Pos FT_Bitmap_Size_::y_ppem -->
        <var-decl name='y_ppem' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='341' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_CharMapRec_ -->
    <class-decl name='FT_CharMapRec_' size-in-bits='128' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='780' column='1' id='type-id-625'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Face FT_CharMapRec_::face -->
        <var-decl name='face' type-id='type-id-626' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='781' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Encoding FT_CharMapRec_::encoding -->
        <var-decl name='encoding' type-id='type-id-627' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='782' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- FT_UShort FT_CharMapRec_::platform_id -->
        <var-decl name='platform_id' type-id='type-id-628' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='783' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='112'>
        <!-- FT_UShort FT_CharMapRec_::encoding_id -->
        <var-decl name='encoding_id' type-id='type-id-628' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='784' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_FaceRec_ -->
    <class-decl name='FT_FaceRec_' size-in-bits='1984' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='959' column='1' id='type-id-629'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Long FT_FaceRec_::num_faces -->
        <var-decl name='num_faces' type-id='type-id-630' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='960' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Long FT_FaceRec_::face_index -->
        <var-decl name='face_index' type-id='type-id-630' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='961' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- FT_Long FT_FaceRec_::face_flags -->
        <var-decl name='face_flags' type-id='type-id-630' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='963' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_Long FT_FaceRec_::style_flags -->
        <var-decl name='style_flags' type-id='type-id-630' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='964' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- FT_Long FT_FaceRec_::num_glyphs -->
        <var-decl name='num_glyphs' type-id='type-id-630' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='966' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- FT_String* FT_FaceRec_::family_name -->
        <var-decl name='family_name' type-id='type-id-631' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='968' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- FT_String* FT_FaceRec_::style_name -->
        <var-decl name='style_name' type-id='type-id-631' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='969' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- FT_Int FT_FaceRec_::num_fixed_sizes -->
        <var-decl name='num_fixed_sizes' type-id='type-id-632' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='971' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- FT_Bitmap_Size* FT_FaceRec_::available_sizes -->
        <var-decl name='available_sizes' type-id='type-id-633' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='972' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- FT_Int FT_FaceRec_::num_charmaps -->
        <var-decl name='num_charmaps' type-id='type-id-632' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='974' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- FT_CharMap* FT_FaceRec_::charmaps -->
        <var-decl name='charmaps' type-id='type-id-634' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='975' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- FT_Generic FT_FaceRec_::generic -->
        <var-decl name='generic' type-id='type-id-635' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='977' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- FT_BBox FT_FaceRec_::bbox -->
        <var-decl name='bbox' type-id='type-id-636' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='982' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- FT_UShort FT_FaceRec_::units_per_EM -->
        <var-decl name='units_per_EM' type-id='type-id-628' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='984' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1104'>
        <!-- FT_Short FT_FaceRec_::ascender -->
        <var-decl name='ascender' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='985' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1120'>
        <!-- FT_Short FT_FaceRec_::descender -->
        <var-decl name='descender' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='986' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1136'>
        <!-- FT_Short FT_FaceRec_::height -->
        <var-decl name='height' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='987' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- FT_Short FT_FaceRec_::max_advance_width -->
        <var-decl name='max_advance_width' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='989' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1168'>
        <!-- FT_Short FT_FaceRec_::max_advance_height -->
        <var-decl name='max_advance_height' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='990' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1184'>
        <!-- FT_Short FT_FaceRec_::underline_position -->
        <var-decl name='underline_position' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='992' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1200'>
        <!-- FT_Short FT_FaceRec_::underline_thickness -->
        <var-decl name='underline_thickness' type-id='type-id-624' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='993' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- FT_GlyphSlot FT_FaceRec_::glyph -->
        <var-decl name='glyph' type-id='type-id-637' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='995' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- FT_Size FT_FaceRec_::size -->
        <var-decl name='size' type-id='type-id-638' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='996' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- FT_CharMap FT_FaceRec_::charmap -->
        <var-decl name='charmap' type-id='type-id-639' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='997' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- FT_Driver FT_FaceRec_::driver -->
        <var-decl name='driver' type-id='type-id-640' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1001' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- FT_Memory FT_FaceRec_::memory -->
        <var-decl name='memory' type-id='type-id-641' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1002' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- FT_Stream FT_FaceRec_::stream -->
        <var-decl name='stream' type-id='type-id-642' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1003' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- FT_ListRec FT_FaceRec_::sizes_list -->
        <var-decl name='sizes_list' type-id='type-id-643' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1005' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1728'>
        <!-- FT_Generic FT_FaceRec_::autohint -->
        <var-decl name='autohint' type-id='type-id-635' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1007' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1856'>
        <!-- void* FT_FaceRec_::extensions -->
        <var-decl name='extensions' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1008' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1920'>
        <!-- FT_Face_Internal FT_FaceRec_::internal -->
        <var-decl name='internal' type-id='type-id-644' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1010' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_Generic_ -->
    <class-decl name='FT_Generic_' size-in-bits='128' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='456' column='1' id='type-id-645'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* FT_Generic_::data -->
        <var-decl name='data' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='457' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Generic_Finalizer FT_Generic_::finalizer -->
        <var-decl name='finalizer' type-id='type-id-646' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='458' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_GlyphSlotRec_ -->
    <class-decl name='FT_GlyphSlotRec_' size-in-bits='2432' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1671' column='1' id='type-id-647'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Library FT_GlyphSlotRec_::library -->
        <var-decl name='library' type-id='type-id-648' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1672' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Face FT_GlyphSlotRec_::face -->
        <var-decl name='face' type-id='type-id-626' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1673' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- FT_GlyphSlot FT_GlyphSlotRec_::next -->
        <var-decl name='next' type-id='type-id-637' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1674' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_UInt FT_GlyphSlotRec_::reserved -->
        <var-decl name='reserved' type-id='type-id-649' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1675' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- FT_Generic FT_GlyphSlotRec_::generic -->
        <var-decl name='generic' type-id='type-id-635' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1676' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- FT_Glyph_Metrics FT_GlyphSlotRec_::metrics -->
        <var-decl name='metrics' type-id='type-id-650' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1678' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- FT_Fixed FT_GlyphSlotRec_::linearHoriAdvance -->
        <var-decl name='linearHoriAdvance' type-id='type-id-651' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1679' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- FT_Fixed FT_GlyphSlotRec_::linearVertAdvance -->
        <var-decl name='linearVertAdvance' type-id='type-id-651' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1680' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- FT_Vector FT_GlyphSlotRec_::advance -->
        <var-decl name='advance' type-id='type-id-652' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1681' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- FT_Glyph_Format FT_GlyphSlotRec_::format -->
        <var-decl name='format' type-id='type-id-653' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1683' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- FT_Bitmap FT_GlyphSlotRec_::bitmap -->
        <var-decl name='bitmap' type-id='type-id-654' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1685' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- FT_Int FT_GlyphSlotRec_::bitmap_left -->
        <var-decl name='bitmap_left' type-id='type-id-632' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1686' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1568'>
        <!-- FT_Int FT_GlyphSlotRec_::bitmap_top -->
        <var-decl name='bitmap_top' type-id='type-id-632' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1687' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- FT_Outline FT_GlyphSlotRec_::outline -->
        <var-decl name='outline' type-id='type-id-655' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1689' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1920'>
        <!-- FT_UInt FT_GlyphSlotRec_::num_subglyphs -->
        <var-decl name='num_subglyphs' type-id='type-id-649' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1691' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1984'>
        <!-- FT_SubGlyph FT_GlyphSlotRec_::subglyphs -->
        <var-decl name='subglyphs' type-id='type-id-656' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1692' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2048'>
        <!-- void* FT_GlyphSlotRec_::control_data -->
        <var-decl name='control_data' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1694' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2112'>
        <!-- long int FT_GlyphSlotRec_::control_len -->
        <var-decl name='control_len' type-id='type-id-12' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1695' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2176'>
        <!-- FT_Pos FT_GlyphSlotRec_::lsb_delta -->
        <var-decl name='lsb_delta' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1697' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2240'>
        <!-- FT_Pos FT_GlyphSlotRec_::rsb_delta -->
        <var-decl name='rsb_delta' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1698' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2304'>
        <!-- void* FT_GlyphSlotRec_::other -->
        <var-decl name='other' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1700' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2368'>
        <!-- FT_Slot_Internal FT_GlyphSlotRec_::internal -->
        <var-decl name='internal' type-id='type-id-657' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1702' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_Glyph_Metrics_ -->
    <class-decl name='FT_Glyph_Metrics_' size-in-bits='512' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='280' column='1' id='type-id-658'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Pos FT_Glyph_Metrics_::width -->
        <var-decl name='width' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='281' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Pos FT_Glyph_Metrics_::height -->
        <var-decl name='height' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='282' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- FT_Pos FT_Glyph_Metrics_::horiBearingX -->
        <var-decl name='horiBearingX' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='284' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_Pos FT_Glyph_Metrics_::horiBearingY -->
        <var-decl name='horiBearingY' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='285' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- FT_Pos FT_Glyph_Metrics_::horiAdvance -->
        <var-decl name='horiAdvance' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='286' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- FT_Pos FT_Glyph_Metrics_::vertBearingX -->
        <var-decl name='vertBearingX' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='288' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- FT_Pos FT_Glyph_Metrics_::vertBearingY -->
        <var-decl name='vertBearingY' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='289' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- FT_Pos FT_Glyph_Metrics_::vertAdvance -->
        <var-decl name='vertAdvance' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='290' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_ListNodeRec_ -->
    <class-decl name='FT_ListNodeRec_' size-in-bits='192' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='541' column='1' id='type-id-659'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_ListNode FT_ListNodeRec_::prev -->
        <var-decl name='prev' type-id='type-id-660' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='542' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_ListNode FT_ListNodeRec_::next -->
        <var-decl name='next' type-id='type-id-660' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='543' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* FT_ListNodeRec_::data -->
        <var-decl name='data' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='544' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_ListRec_ -->
    <class-decl name='FT_ListRec_' size-in-bits='128' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='564' column='1' id='type-id-661'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_ListNode FT_ListRec_::head -->
        <var-decl name='head' type-id='type-id-660' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='565' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_ListNode FT_ListRec_::tail -->
        <var-decl name='tail' type-id='type-id-660' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='566' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_MemoryRec_ -->
    <class-decl name='FT_MemoryRec_' size-in-bits='256' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='172' column='1' id='type-id-662'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* FT_MemoryRec_::user -->
        <var-decl name='user' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='173' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Alloc_Func FT_MemoryRec_::alloc -->
        <var-decl name='alloc' type-id='type-id-663' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='174' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- FT_Free_Func FT_MemoryRec_::free -->
        <var-decl name='free' type-id='type-id-664' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='175' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_Realloc_Func FT_MemoryRec_::realloc -->
        <var-decl name='realloc' type-id='type-id-665' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='176' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_Outline_ -->
    <class-decl name='FT_Outline_' size-in-bits='320' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='393' column='1' id='type-id-666'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- short int FT_Outline_::n_contours -->
        <var-decl name='n_contours' type-id='type-id-87' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='394' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- short int FT_Outline_::n_points -->
        <var-decl name='n_points' type-id='type-id-87' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='395' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Vector* FT_Outline_::points -->
        <var-decl name='points' type-id='type-id-667' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='397' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- char* FT_Outline_::tags -->
        <var-decl name='tags' type-id='type-id-44' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='398' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- short int* FT_Outline_::contours -->
        <var-decl name='contours' type-id='type-id-668' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='399' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int FT_Outline_::flags -->
        <var-decl name='flags' type-id='type-id-11' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='401' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_SizeRec_ -->
    <class-decl name='FT_SizeRec_' size-in-bits='704' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1461' column='1' id='type-id-669'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Face FT_SizeRec_::face -->
        <var-decl name='face' type-id='type-id-626' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1462' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Generic FT_SizeRec_::generic -->
        <var-decl name='generic' type-id='type-id-635' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1463' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_Size_Metrics FT_SizeRec_::metrics -->
        <var-decl name='metrics' type-id='type-id-670' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1464' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- FT_Size_Internal FT_SizeRec_::internal -->
        <var-decl name='internal' type-id='type-id-671' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1465' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_Size_Metrics_ -->
    <class-decl name='FT_Size_Metrics_' size-in-bits='448' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1426' column='1' id='type-id-672'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_UShort FT_Size_Metrics_::x_ppem -->
        <var-decl name='x_ppem' type-id='type-id-628' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1427' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- FT_UShort FT_Size_Metrics_::y_ppem -->
        <var-decl name='y_ppem' type-id='type-id-628' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1428' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Fixed FT_Size_Metrics_::x_scale -->
        <var-decl name='x_scale' type-id='type-id-651' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1430' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- FT_Fixed FT_Size_Metrics_::y_scale -->
        <var-decl name='y_scale' type-id='type-id-651' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1431' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_Pos FT_Size_Metrics_::ascender -->
        <var-decl name='ascender' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1433' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- FT_Pos FT_Size_Metrics_::descender -->
        <var-decl name='descender' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1434' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- FT_Pos FT_Size_Metrics_::height -->
        <var-decl name='height' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1435' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- FT_Pos FT_Size_Metrics_::max_advance -->
        <var-decl name='max_advance' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1436' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_StreamRec_ -->
    <class-decl name='FT_StreamRec_' size-in-bits='640' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='322' column='1' id='type-id-673'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned char* FT_StreamRec_::base -->
        <var-decl name='base' type-id='type-id-622' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='323' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned long int FT_StreamRec_::size -->
        <var-decl name='size' type-id='type-id-4' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='324' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned long int FT_StreamRec_::pos -->
        <var-decl name='pos' type-id='type-id-4' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='325' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- FT_StreamDesc FT_StreamRec_::descriptor -->
        <var-decl name='descriptor' type-id='type-id-674' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='327' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- FT_StreamDesc FT_StreamRec_::pathname -->
        <var-decl name='pathname' type-id='type-id-674' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='328' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- FT_Stream_IoFunc FT_StreamRec_::read -->
        <var-decl name='read' type-id='type-id-675' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='329' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- FT_Stream_CloseFunc FT_StreamRec_::close -->
        <var-decl name='close' type-id='type-id-676' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- FT_Memory FT_StreamRec_::memory -->
        <var-decl name='memory' type-id='type-id-641' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- unsigned char* FT_StreamRec_::cursor -->
        <var-decl name='cursor' type-id='type-id-622' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='333' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- unsigned char* FT_StreamRec_::limit -->
        <var-decl name='limit' type-id='type-id-622' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='334' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct FT_Vector_ -->
    <class-decl name='FT_Vector_' size-in-bits='128' is-struct='yes' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='75' column='1' id='type-id-677'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- FT_Pos FT_Vector_::x -->
        <var-decl name='x' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='76' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- FT_Pos FT_Vector_::y -->
        <var-decl name='y' type-id='type-id-620' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='77' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef void* (*)(FT_Memory, long int) FT_Alloc_Func -->
    <typedef-decl name='FT_Alloc_Func' type-id='type-id-678' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='90' column='1' id='type-id-663'/>
    <!-- typedef FT_BBox_ FT_BBox -->
    <typedef-decl name='FT_BBox' type-id='type-id-619' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='120' column='1' id='type-id-636'/>
    <!-- typedef FT_Bitmap_ FT_Bitmap -->
    <typedef-decl name='FT_Bitmap' type-id='type-id-621' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='330' column='1' id='type-id-654'/>
    <!-- typedef FT_Bitmap_Size_ FT_Bitmap_Size -->
    <typedef-decl name='FT_Bitmap_Size' type-id='type-id-623' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='343' column='1' id='type-id-679'/>
    <!-- typedef FT_CharMapRec_* FT_CharMap -->
    <typedef-decl name='FT_CharMap' type-id='type-id-680' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='524' column='1' id='type-id-639'/>
    <!-- typedef FT_Encoding_ FT_Encoding -->
    <typedef-decl name='FT_Encoding' type-id='type-id-617' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='727' column='1' id='type-id-627'/>
    <!-- typedef FT_FaceRec_* FT_Face -->
    <typedef-decl name='FT_Face' type-id='type-id-681' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='440' column='1' id='type-id-626'/>
    <!-- typedef long int FT_Fixed -->
    <typedef-decl name='FT_Fixed' type-id='type-id-12' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='284' column='1' id='type-id-651'/>
    <!-- typedef void (*)(FT_Memory, void*) FT_Free_Func -->
    <typedef-decl name='FT_Free_Func' type-id='type-id-682' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='111' column='1' id='type-id-664'/>
    <!-- typedef FT_Generic_ FT_Generic -->
    <typedef-decl name='FT_Generic' type-id='type-id-645' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='460' column='1' id='type-id-635'/>
    <!-- typedef void (*)(void*) FT_Generic_Finalizer -->
    <typedef-decl name='FT_Generic_Finalizer' type-id='type-id-40' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='424' column='1' id='type-id-646'/>
    <!-- typedef FT_GlyphSlotRec_* FT_GlyphSlot -->
    <typedef-decl name='FT_GlyphSlot' type-id='type-id-683' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='492' column='1' id='type-id-637'/>
    <!-- typedef FT_Glyph_Format_ FT_Glyph_Format -->
    <typedef-decl name='FT_Glyph_Format' type-id='type-id-618' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='796' column='1' id='type-id-653'/>
    <!-- typedef FT_Glyph_Metrics_ FT_Glyph_Metrics -->
    <typedef-decl name='FT_Glyph_Metrics' type-id='type-id-658' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='292' column='1' id='type-id-650'/>
    <!-- typedef int FT_Int -->
    <typedef-decl name='FT_Int' type-id='type-id-11' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='216' column='1' id='type-id-632'/>
    <!-- typedef FT_ListNodeRec_* FT_ListNode -->
    <typedef-decl name='FT_ListNode' type-id='type-id-684' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='511' column='1' id='type-id-660'/>
    <!-- typedef FT_ListRec_ FT_ListRec -->
    <typedef-decl name='FT_ListRec' type-id='type-id-661' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='568' column='1' id='type-id-643'/>
    <!-- typedef long int FT_Long -->
    <typedef-decl name='FT_Long' type-id='type-id-12' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='238' column='1' id='type-id-630'/>
    <!-- typedef FT_MemoryRec_* FT_Memory -->
    <typedef-decl name='FT_Memory' type-id='type-id-685' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='66' column='1' id='type-id-641'/>
    <!-- typedef FT_Outline_ FT_Outline -->
    <typedef-decl name='FT_Outline' type-id='type-id-666' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='403' column='1' id='type-id-655'/>
    <!-- typedef long int FT_Pos -->
    <typedef-decl name='FT_Pos' type-id='type-id-12' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='58' column='1' id='type-id-620'/>
    <!-- typedef void* (*)(FT_Memory, long int, long int, void*) FT_Realloc_Func -->
    <typedef-decl name='FT_Realloc_Func' type-id='type-id-686' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='146' column='1' id='type-id-665'/>
    <!-- typedef short int FT_Short -->
    <typedef-decl name='FT_Short' type-id='type-id-87' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='194' column='1' id='type-id-624'/>
    <!-- typedef FT_SizeRec_* FT_Size -->
    <typedef-decl name='FT_Size' type-id='type-id-687' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='471' column='1' id='type-id-638'/>
    <!-- typedef FT_Size_Metrics_ FT_Size_Metrics -->
    <typedef-decl name='FT_Size_Metrics' type-id='type-id-672' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1438' column='1' id='type-id-670'/>
    <!-- typedef FT_StreamRec_* FT_Stream -->
    <typedef-decl name='FT_Stream' type-id='type-id-688' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='196' column='1' id='type-id-642'/>
    <!-- typedef FT_StreamDesc_ FT_StreamDesc -->
    <typedef-decl name='FT_StreamDesc' type-id='type-id-689' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='214' column='1' id='type-id-674'/>
    <!-- typedef void (*)(FT_Stream) FT_Stream_CloseFunc -->
    <typedef-decl name='FT_Stream_CloseFunc' type-id='type-id-690' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='268' column='1' id='type-id-676'/>
    <!-- typedef unsigned long int (*)(FT_Stream, unsigned long int, unsigned char*, unsigned long int) FT_Stream_IoFunc -->
    <typedef-decl name='FT_Stream_IoFunc' type-id='type-id-691' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='251' column='1' id='type-id-675'/>
    <!-- typedef char FT_String -->
    <typedef-decl name='FT_String' type-id='type-id-2' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='183' column='1' id='type-id-692'/>
    <!-- typedef unsigned int FT_UInt -->
    <typedef-decl name='FT_UInt' type-id='type-id-18' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='227' column='1' id='type-id-649'/>
    <!-- typedef unsigned short int FT_UShort -->
    <typedef-decl name='FT_UShort' type-id='type-id-135' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/fttypes.h' line='205' column='1' id='type-id-628'/>
    <!-- typedef FT_Vector_ FT_Vector -->
    <typedef-decl name='FT_Vector' type-id='type-id-677' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftimage.h' line='79' column='1' id='type-id-652'/>
    <!-- union FT_StreamDesc_ -->
    <union-decl name='FT_StreamDesc_' size-in-bits='64' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='210' column='1' id='type-id-689'>
      <data-member access='public'>
        <!-- long int FT_StreamDesc_::value -->
        <var-decl name='value' type-id='type-id-12' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='211' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- void* FT_StreamDesc_::pointer -->
        <var-decl name='pointer' type-id='type-id-19' visibility='default' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/ftsystem.h' line='212' column='1'/>
      </data-member>
    </union-decl>
    <!-- FT_Bitmap_Size* -->
    <pointer-type-def type-id='type-id-679' size-in-bits='64' id='type-id-633'/>
    <!-- FT_CharMap* -->
    <pointer-type-def type-id='type-id-639' size-in-bits='64' id='type-id-634'/>
    <!-- FT_CharMapRec_* -->
    <pointer-type-def type-id='type-id-625' size-in-bits='64' id='type-id-680'/>
    <!-- FT_FaceRec_* -->
    <pointer-type-def type-id='type-id-629' size-in-bits='64' id='type-id-681'/>
    <!-- FT_GlyphSlotRec_* -->
    <pointer-type-def type-id='type-id-647' size-in-bits='64' id='type-id-683'/>
    <!-- FT_ListNodeRec_* -->
    <pointer-type-def type-id='type-id-659' size-in-bits='64' id='type-id-684'/>
    <!-- FT_MemoryRec_* -->
    <pointer-type-def type-id='type-id-662' size-in-bits='64' id='type-id-685'/>
    <!-- FT_SizeRec_* -->
    <pointer-type-def type-id='type-id-669' size-in-bits='64' id='type-id-687'/>
    <!-- FT_StreamRec_* -->
    <pointer-type-def type-id='type-id-673' size-in-bits='64' id='type-id-688'/>
    <!-- FT_String* -->
    <pointer-type-def type-id='type-id-692' size-in-bits='64' id='type-id-631'/>
    <!-- FT_Vector* -->
    <pointer-type-def type-id='type-id-652' size-in-bits='64' id='type-id-667'/>
    <!-- short int* -->
    <pointer-type-def type-id='type-id-87' size-in-bits='64' id='type-id-668'/>
    <!-- unsigned char* -->
    <pointer-type-def type-id='type-id-137' size-in-bits='64' id='type-id-622'/>
    <!-- unsigned long int (*)(FT_Stream, unsigned long int, unsigned char*, unsigned long int) -->
    <pointer-type-def type-id='type-id-693' size-in-bits='64' id='type-id-691'/>
    <!-- void (*)(FT_Memory, void*) -->
    <pointer-type-def type-id='type-id-694' size-in-bits='64' id='type-id-682'/>
    <!-- void (*)(FT_Stream) -->
    <pointer-type-def type-id='type-id-695' size-in-bits='64' id='type-id-690'/>
    <!-- void* (*)(FT_Memory, long int) -->
    <pointer-type-def type-id='type-id-696' size-in-bits='64' id='type-id-678'/>
    <!-- void* (*)(FT_Memory, long int, long int, void*) -->
    <pointer-type-def type-id='type-id-697' size-in-bits='64' id='type-id-686'/>
    <!-- FT_DriverRec_* -->
    <pointer-type-def type-id='type-id-698' size-in-bits='64' id='type-id-699'/>
    <!-- FT_Face_InternalRec_* -->
    <pointer-type-def type-id='type-id-700' size-in-bits='64' id='type-id-701'/>
    <!-- FT_LibraryRec_* -->
    <pointer-type-def type-id='type-id-702' size-in-bits='64' id='type-id-703'/>
    <!-- FT_Size_InternalRec_* -->
    <pointer-type-def type-id='type-id-704' size-in-bits='64' id='type-id-705'/>
    <!-- FT_Slot_InternalRec_* -->
    <pointer-type-def type-id='type-id-706' size-in-bits='64' id='type-id-707'/>
    <!-- FT_SubGlyphRec_* -->
    <pointer-type-def type-id='type-id-708' size-in-bits='64' id='type-id-709'/>
    <!-- struct FT_DriverRec_ -->
    <class-decl name='FT_DriverRec_' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-698'/>
    <!-- struct FT_Face_InternalRec_ -->
    <class-decl name='FT_Face_InternalRec_' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-700'/>
    <!-- struct FT_LibraryRec_ -->
    <class-decl name='FT_LibraryRec_' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-702'/>
    <!-- struct FT_Size_InternalRec_ -->
    <class-decl name='FT_Size_InternalRec_' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-704'/>
    <!-- struct FT_Slot_InternalRec_ -->
    <class-decl name='FT_Slot_InternalRec_' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-706'/>
    <!-- struct FT_SubGlyphRec_ -->
    <class-decl name='FT_SubGlyphRec_' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-708'/>
    <!-- typedef FT_LibraryRec_* FT_Library -->
    <typedef-decl name='FT_Library' type-id='type-id-703' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='376' column='1' id='type-id-648'/>
    <!-- typedef FT_DriverRec_* FT_Driver -->
    <typedef-decl name='FT_Driver' type-id='type-id-699' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='401' column='1' id='type-id-640'/>
    <!-- typedef FT_Face_InternalRec_* FT_Face_Internal -->
    <typedef-decl name='FT_Face_Internal' type-id='type-id-701' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='810' column='1' id='type-id-644'/>
    <!-- typedef FT_Size_InternalRec_* FT_Size_Internal -->
    <typedef-decl name='FT_Size_Internal' type-id='type-id-705' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1367' column='1' id='type-id-671'/>
    <!-- typedef FT_SubGlyphRec_* FT_SubGlyph -->
    <typedef-decl name='FT_SubGlyph' type-id='type-id-709' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1486' column='1' id='type-id-656'/>
    <!-- typedef FT_Slot_InternalRec_* FT_Slot_Internal -->
    <typedef-decl name='FT_Slot_Internal' type-id='type-id-707' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/freetype@2.5.3-77fab1b8/include/freetype2/freetype.h' line='1498' column='1' id='type-id-657'/>
    <!-- hb_face_t* hb_ft_face_create(FT_Face, hb_destroy_func_t) -->
    <function-decl name='hb_ft_face_create' mangled-name='hb_ft_face_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='333' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ft_face_create'>
      <!-- parameter of type 'typedef FT_Face' -->
      <parameter type-id='type-id-626' name='ft_face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='333' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='334' column='1'/>
      <!-- hb_face_t* -->
      <return type-id='type-id-167'/>
    </function-decl>
    <!-- hb_face_t* hb_ft_face_create_cached(FT_Face) -->
    <function-decl name='hb_ft_face_create_cached' mangled-name='hb_ft_face_create_cached' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ft_face_create_cached'>
      <!-- parameter of type 'typedef FT_Face' -->
      <parameter type-id='type-id-626' name='ft_face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='377' column='1'/>
      <!-- hb_face_t* -->
      <return type-id='type-id-167'/>
    </function-decl>
    <!-- hb_font_t* hb_ft_font_create(FT_Face, hb_destroy_func_t) -->
    <function-decl name='hb_ft_font_create' mangled-name='hb_ft_font_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='408' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ft_font_create'>
      <!-- parameter of type 'typedef FT_Face' -->
      <parameter type-id='type-id-626' name='ft_face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='408' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='409' column='1'/>
      <!-- hb_font_t* -->
      <return type-id='type-id-158'/>
    </function-decl>
    <!-- void hb_ft_font_set_funcs(hb_font_t*) -->
    <function-decl name='hb_ft_font_set_funcs' mangled-name='hb_ft_font_set_funcs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='473' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ft_font_set_funcs'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='473' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- FT_Face hb_ft_font_get_face(hb_font_t*) -->
    <function-decl name='hb_ft_font_get_face' mangled-name='hb_ft_font_get_face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='515' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ft_font_get_face'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ft.cc' line='515' column='1'/>
      <!-- typedef FT_Face -->
      <return type-id='type-id-626'/>
    </function-decl>
    <!-- unsigned long int (FT_Stream, unsigned long int, unsigned char*, unsigned long int) -->
    <function-type size-in-bits='64' id='type-id-693'>
      <!-- parameter of type 'typedef FT_Stream' -->
      <parameter type-id='type-id-642'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='type-id-4'/>
      <!-- parameter of type 'unsigned char*' -->
      <parameter type-id='type-id-622'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='type-id-4'/>
      <!-- unsigned long int -->
      <return type-id='type-id-4'/>
    </function-type>
    <!-- void (FT_Memory, void*) -->
    <function-type size-in-bits='64' id='type-id-694'>
      <!-- parameter of type 'typedef FT_Memory' -->
      <parameter type-id='type-id-641'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-type>
    <!-- void (FT_Stream) -->
    <function-type size-in-bits='64' id='type-id-695'>
      <!-- parameter of type 'typedef FT_Stream' -->
      <parameter type-id='type-id-642'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-type>
    <!-- void* (FT_Memory, long int) -->
    <function-type size-in-bits='64' id='type-id-696'>
      <!-- parameter of type 'typedef FT_Memory' -->
      <parameter type-id='type-id-641'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-12'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-type>
    <!-- void* (FT_Memory, long int, long int, void*) -->
    <function-type size-in-bits='64' id='type-id-697'>
      <!-- parameter of type 'typedef FT_Memory' -->
      <parameter type-id='type-id-641'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-12'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-12'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='hb-glib.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- enum GUnicodeScript -->
    <enum-decl name='GUnicodeScript' filepath='/collab/usr/global/tools/order/spack/opt/chaos_5_x86_64_ib/gcc@4.4.7/glib@2.42.1-46d6a76b/include/glib-2.0/glib/gunicode.h' line='409' column='1' id='type-id-710'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='G_UNICODE_SCRIPT_INVALID_CODE' value='-1'/>
      <enumerator name='G_UNICODE_SCRIPT_COMMON' value='0'/>
      <enumerator name='G_UNICODE_SCRIPT_INHERITED' value='1'/>
      <enumerator name='G_UNICODE_SCRIPT_ARABIC' value='2'/>
      <enumerator name='G_UNICODE_SCRIPT_ARMENIAN' value='3'/>
      <enumerator name='G_UNICODE_SCRIPT_BENGALI' value='4'/>
      <enumerator name='G_UNICODE_SCRIPT_BOPOMOFO' value='5'/>
      <enumerator name='G_UNICODE_SCRIPT_CHEROKEE' value='6'/>
      <enumerator name='G_UNICODE_SCRIPT_COPTIC' value='7'/>
      <enumerator name='G_UNICODE_SCRIPT_CYRILLIC' value='8'/>
      <enumerator name='G_UNICODE_SCRIPT_DESERET' value='9'/>
      <enumerator name='G_UNICODE_SCRIPT_DEVANAGARI' value='10'/>
      <enumerator name='G_UNICODE_SCRIPT_ETHIOPIC' value='11'/>
      <enumerator name='G_UNICODE_SCRIPT_GEORGIAN' value='12'/>
      <enumerator name='G_UNICODE_SCRIPT_GOTHIC' value='13'/>
      <enumerator name='G_UNICODE_SCRIPT_GREEK' value='14'/>
      <enumerator name='G_UNICODE_SCRIPT_GUJARATI' value='15'/>
      <enumerator name='G_UNICODE_SCRIPT_GURMUKHI' value='16'/>
      <enumerator name='G_UNICODE_SCRIPT_HAN' value='17'/>
      <enumerator name='G_UNICODE_SCRIPT_HANGUL' value='18'/>
      <enumerator name='G_UNICODE_SCRIPT_HEBREW' value='19'/>
      <enumerator name='G_UNICODE_SCRIPT_HIRAGANA' value='20'/>
      <enumerator name='G_UNICODE_SCRIPT_KANNADA' value='21'/>
      <enumerator name='G_UNICODE_SCRIPT_KATAKANA' value='22'/>
      <enumerator name='G_UNICODE_SCRIPT_KHMER' value='23'/>
      <enumerator name='G_UNICODE_SCRIPT_LAO' value='24'/>
      <enumerator name='G_UNICODE_SCRIPT_LATIN' value='25'/>
      <enumerator name='G_UNICODE_SCRIPT_MALAYALAM' value='26'/>
      <enumerator name='G_UNICODE_SCRIPT_MONGOLIAN' value='27'/>
      <enumerator name='G_UNICODE_SCRIPT_MYANMAR' value='28'/>
      <enumerator name='G_UNICODE_SCRIPT_OGHAM' value='29'/>
      <enumerator name='G_UNICODE_SCRIPT_OLD_ITALIC' value='30'/>
      <enumerator name='G_UNICODE_SCRIPT_ORIYA' value='31'/>
      <enumerator name='G_UNICODE_SCRIPT_RUNIC' value='32'/>
      <enumerator name='G_UNICODE_SCRIPT_SINHALA' value='33'/>
      <enumerator name='G_UNICODE_SCRIPT_SYRIAC' value='34'/>
      <enumerator name='G_UNICODE_SCRIPT_TAMIL' value='35'/>
      <enumerator name='G_UNICODE_SCRIPT_TELUGU' value='36'/>
      <enumerator name='G_UNICODE_SCRIPT_THAANA' value='37'/>
      <enumerator name='G_UNICODE_SCRIPT_THAI' value='38'/>
      <enumerator name='G_UNICODE_SCRIPT_TIBETAN' value='39'/>
      <enumerator name='G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL' value='40'/>
      <enumerator name='G_UNICODE_SCRIPT_YI' value='41'/>
      <enumerator name='G_UNICODE_SCRIPT_TAGALOG' value='42'/>
      <enumerator name='G_UNICODE_SCRIPT_HANUNOO' value='43'/>
      <enumerator name='G_UNICODE_SCRIPT_BUHID' value='44'/>
      <enumerator name='G_UNICODE_SCRIPT_TAGBANWA' value='45'/>
      <enumerator name='G_UNICODE_SCRIPT_BRAILLE' value='46'/>
      <enumerator name='G_UNICODE_SCRIPT_CYPRIOT' value='47'/>
      <enumerator name='G_UNICODE_SCRIPT_LIMBU' value='48'/>
      <enumerator name='G_UNICODE_SCRIPT_OSMANYA' value='49'/>
      <enumerator name='G_UNICODE_SCRIPT_SHAVIAN' value='50'/>
      <enumerator name='G_UNICODE_SCRIPT_LINEAR_B' value='51'/>
      <enumerator name='G_UNICODE_SCRIPT_TAI_LE' value='52'/>
      <enumerator name='G_UNICODE_SCRIPT_UGARITIC' value='53'/>
      <enumerator name='G_UNICODE_SCRIPT_NEW_TAI_LUE' value='54'/>
      <enumerator name='G_UNICODE_SCRIPT_BUGINESE' value='55'/>
      <enumerator name='G_UNICODE_SCRIPT_GLAGOLITIC' value='56'/>
      <enumerator name='G_UNICODE_SCRIPT_TIFINAGH' value='57'/>
      <enumerator name='G_UNICODE_SCRIPT_SYLOTI_NAGRI' value='58'/>
      <enumerator name='G_UNICODE_SCRIPT_OLD_PERSIAN' value='59'/>
      <enumerator name='G_UNICODE_SCRIPT_KHAROSHTHI' value='60'/>
      <enumerator name='G_UNICODE_SCRIPT_UNKNOWN' value='61'/>
      <enumerator name='G_UNICODE_SCRIPT_BALINESE' value='62'/>
      <enumerator name='G_UNICODE_SCRIPT_CUNEIFORM' value='63'/>
      <enumerator name='G_UNICODE_SCRIPT_PHOENICIAN' value='64'/>
      <enumerator name='G_UNICODE_SCRIPT_PHAGS_PA' value='65'/>
      <enumerator name='G_UNICODE_SCRIPT_NKO' value='66'/>
      <enumerator name='G_UNICODE_SCRIPT_KAYAH_LI' value='67'/>
      <enumerator name='G_UNICODE_SCRIPT_LEPCHA' value='68'/>
      <enumerator name='G_UNICODE_SCRIPT_REJANG' value='69'/>
      <enumerator name='G_UNICODE_SCRIPT_SUNDANESE' value='70'/>
      <enumerator name='G_UNICODE_SCRIPT_SAURASHTRA' value='71'/>
      <enumerator name='G_UNICODE_SCRIPT_CHAM' value='72'/>
      <enumerator name='G_UNICODE_SCRIPT_OL_CHIKI' value='73'/>
      <enumerator name='G_UNICODE_SCRIPT_VAI' value='74'/>
      <enumerator name='G_UNICODE_SCRIPT_CARIAN' value='75'/>
      <enumerator name='G_UNICODE_SCRIPT_LYCIAN' value='76'/>
      <enumerator name='G_UNICODE_SCRIPT_LYDIAN' value='77'/>
      <enumerator name='G_UNICODE_SCRIPT_AVESTAN' value='78'/>
      <enumerator name='G_UNICODE_SCRIPT_BAMUM' value='79'/>
      <enumerator name='G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS' value='80'/>
      <enumerator name='G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC' value='81'/>
      <enumerator name='G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI' value='82'/>
      <enumerator name='G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN' value='83'/>
      <enumerator name='G_UNICODE_SCRIPT_JAVANESE' value='84'/>
      <enumerator name='G_UNICODE_SCRIPT_KAITHI' value='85'/>
      <enumerator name='G_UNICODE_SCRIPT_LISU' value='86'/>
      <enumerator name='G_UNICODE_SCRIPT_MEETEI_MAYEK' value='87'/>
      <enumerator name='G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN' value='88'/>
      <enumerator name='G_UNICODE_SCRIPT_OLD_TURKIC' value='89'/>
      <enumerator name='G_UNICODE_SCRIPT_SAMARITAN' value='90'/>
      <enumerator name='G_UNICODE_SCRIPT_TAI_THAM' value='91'/>
      <enumerator name='G_UNICODE_SCRIPT_TAI_VIET' value='92'/>
      <enumerator name='G_UNICODE_SCRIPT_BATAK' value='93'/>
      <enumerator name='G_UNICODE_SCRIPT_BRAHMI' value='94'/>
      <enumerator name='G_UNICODE_SCRIPT_MANDAIC' value='95'/>
      <enumerator name='G_UNICODE_SCRIPT_CHAKMA' value='96'/>
      <enumerator name='G_UNICODE_SCRIPT_MEROITIC_CURSIVE' value='97'/>
      <enumerator name='G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS' value='98'/>
      <enumerator name='G_UNICODE_SCRIPT_MIAO' value='99'/>
      <enumerator name='G_UNICODE_SCRIPT_SHARADA' value='100'/>
      <enumerator name='G_UNICODE_SCRIPT_SORA_SOMPENG' value='101'/>
      <enumerator name='G_UNICODE_SCRIPT_TAKRI' value='102'/>
      <enumerator name='G_UNICODE_SCRIPT_BASSA_VAH' value='103'/>
      <enumerator name='G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN' value='104'/>
      <enumerator name='G_UNICODE_SCRIPT_DUPLOYAN' value='105'/>
      <enumerator name='G_UNICODE_SCRIPT_ELBASAN' value='106'/>
      <enumerator name='G_UNICODE_SCRIPT_GRANTHA' value='107'/>
      <enumerator name='G_UNICODE_SCRIPT_KHOJKI' value='108'/>
      <enumerator name='G_UNICODE_SCRIPT_KHUDAWADI' value='109'/>
      <enumerator name='G_UNICODE_SCRIPT_LINEAR_A' value='110'/>
      <enumerator name='G_UNICODE_SCRIPT_MAHAJANI' value='111'/>
      <enumerator name='G_UNICODE_SCRIPT_MANICHAEAN' value='112'/>
      <enumerator name='G_UNICODE_SCRIPT_MENDE_KIKAKUI' value='113'/>
      <enumerator name='G_UNICODE_SCRIPT_MODI' value='114'/>
      <enumerator name='G_UNICODE_SCRIPT_MRO' value='115'/>
      <enumerator name='G_UNICODE_SCRIPT_NABATAEAN' value='116'/>
      <enumerator name='G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN' value='117'/>
      <enumerator name='G_UNICODE_SCRIPT_OLD_PERMIC' value='118'/>
      <enumerator name='G_UNICODE_SCRIPT_PAHAWH_HMONG' value='119'/>
      <enumerator name='G_UNICODE_SCRIPT_PALMYRENE' value='120'/>
      <enumerator name='G_UNICODE_SCRIPT_PAU_CIN_HAU' value='121'/>
      <enumerator name='G_UNICODE_SCRIPT_PSALTER_PAHLAVI' value='122'/>
      <enumerator name='G_UNICODE_SCRIPT_SIDDHAM' value='123'/>
      <enumerator name='G_UNICODE_SCRIPT_TIRHUTA' value='124'/>
      <enumerator name='G_UNICODE_SCRIPT_WARANG_CITI' value='125'/>
    </enum-decl>
    <!-- hb_script_t hb_glib_script_to_script(GUnicodeScript) -->
    <function-decl name='hb_glib_script_to_script' mangled-name='hb_glib_script_to_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-glib.cc' line='161' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_glib_script_to_script'>
      <!-- parameter of type 'enum GUnicodeScript' -->
      <parameter type-id='type-id-710' name='script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-glib.cc' line='161' column='1'/>
      <!-- enum hb_script_t -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- GUnicodeScript hb_glib_script_from_script(hb_script_t) -->
    <function-decl name='hb_glib_script_from_script' mangled-name='hb_glib_script_from_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-glib.cc' line='177' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_glib_script_from_script'>
      <!-- parameter of type 'enum hb_script_t' -->
      <parameter type-id='type-id-76' name='script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-glib.cc' line='177' column='1'/>
      <!-- enum GUnicodeScript -->
      <return type-id='type-id-710'/>
    </function-decl>
    <!-- hb_unicode_funcs_t* hb_glib_get_unicode_funcs() -->
    <function-decl name='hb_glib_get_unicode_funcs' mangled-name='hb_glib_get_unicode_funcs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-glib.cc' line='368' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_glib_get_unicode_funcs'>
      <!-- hb_unicode_funcs_t* -->
      <return type-id='type-id-91'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-font.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- OT::BYTE[256] -->
    <array-type-def dimensions='1' type-id='type-id-711' size-in-bits='2048' id='type-id-712'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' lower-bound='0' upper-bound='255' type-id='type-id-4' id='type-id-713'/>
    </array-type-def>
    <!-- OT::CmapSubtableLongGroup[1] -->
    <array-type-def dimensions='1' type-id='type-id-714' size-in-bits='96' id='type-id-715'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::EncodingRecord[1] -->
    <array-type-def dimensions='1' type-id='type-id-716' size-in-bits='64' id='type-id-717'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::IntType<short unsigned int, 2u>[1] -->
    <array-type-def dimensions='1' type-id='type-id-269' size-in-bits='16' id='type-id-718'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::LongMetric[1] -->
    <array-type-def dimensions='1' type-id='type-id-719' size-in-bits='32' id='type-id-720'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::SHORT[1] -->
    <array-type-def dimensions='1' type-id='type-id-613' size-in-bits='16' id='type-id-721'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::USHORT[1] -->
    <array-type-def dimensions='1' type-id='type-id-410' size-in-bits='16' id='type-id-722'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::UVSMapping[1] -->
    <array-type-def dimensions='1' type-id='type-id-723' size-in-bits='40' id='type-id-724'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::UnicodeValueRange[1] -->
    <array-type-def dimensions='1' type-id='type-id-725' size-in-bits='32' id='type-id-726'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::VariationSelectorRecord[1] -->
    <array-type-def dimensions='1' type-id='type-id-727' size-in-bits='88' id='type-id-728'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- struct hb_ot_face_cmap_accelerator_t -->
    <class-decl name='hb_ot_face_cmap_accelerator_t' size-in-bits='192' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='95' column='1' id='type-id-729'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const OT::CmapSubtable* hb_ot_face_cmap_accelerator_t::table -->
        <var-decl name='table' type-id='type-id-730' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const OT::CmapSubtable* hb_ot_face_cmap_accelerator_t::uvs_table -->
        <var-decl name='uvs_table' type-id='type-id-730' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_blob_t* hb_ot_face_cmap_accelerator_t::blob -->
        <var-decl name='blob' type-id='type-id-58' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='98' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_ot_face_metrics_accelerator_t -->
    <class-decl name='hb_ot_face_metrics_accelerator_t' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='39' column='1' id='type-id-731'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int hb_ot_face_metrics_accelerator_t::num_metrics -->
        <var-decl name='num_metrics' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int hb_ot_face_metrics_accelerator_t::num_advances -->
        <var-decl name='num_advances' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int hb_ot_face_metrics_accelerator_t::default_advance -->
        <var-decl name='default_advance' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const OT::_mtx* hb_ot_face_metrics_accelerator_t::table -->
        <var-decl name='table' type-id='type-id-732' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- hb_blob_t* hb_ot_face_metrics_accelerator_t::blob -->
        <var-decl name='blob' type-id='type-id-58' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='44' column='1'/>
      </data-member>
    </class-decl>
    <!-- uint8_t[3] -->
    <array-type-def dimensions='1' type-id='type-id-138' size-in-bits='24' id='type-id-733'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' lower-bound='0' upper-bound='2' type-id='type-id-4' id='type-id-734'/>
    </array-type-def>
    <!-- OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-735' size-in-bits='64' id='type-id-736'/>
    <!-- OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-736' const='yes' id='type-id-737'/>
    <!-- OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-738' size-in-bits='64' id='type-id-739'/>
    <!-- OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-739' const='yes' id='type-id-740'/>
    <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-741' size-in-bits='64' id='type-id-598'/>
    <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-598' const='yes' id='type-id-742'/>
    <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-743' size-in-bits='64' id='type-id-744'/>
    <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-744' const='yes' id='type-id-745'/>
    <!-- OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-746' size-in-bits='64' id='type-id-747'/>
    <!-- OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-747' const='yes' id='type-id-748'/>
    <!-- OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-749' size-in-bits='64' id='type-id-750'/>
    <!-- OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-750' const='yes' id='type-id-751'/>
    <!-- OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-752' size-in-bits='64' id='type-id-753'/>
    <!-- OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-753' const='yes' id='type-id-754'/>
    <!-- OT::BEInt<short unsigned int, 2>* const -->
    <qualified-type-def type-id='type-id-256' const='yes' id='type-id-755'/>
    <!-- OT::BEInt<unsigned int, 3>* -->
    <pointer-type-def type-id='type-id-756' size-in-bits='64' id='type-id-757'/>
    <!-- OT::CmapSubtable& -->
    <reference-type-def kind='lvalue' type-id='type-id-758' size-in-bits='64' id='type-id-759'/>
    <!-- OT::CmapSubtable* -->
    <pointer-type-def type-id='type-id-758' size-in-bits='64' id='type-id-760'/>
    <!-- OT::CmapSubtable* const -->
    <qualified-type-def type-id='type-id-760' const='yes' id='type-id-761'/>
    <!-- OT::CmapSubtableFormat0* -->
    <pointer-type-def type-id='type-id-762' size-in-bits='64' id='type-id-763'/>
    <!-- OT::CmapSubtableFormat0* const -->
    <qualified-type-def type-id='type-id-763' const='yes' id='type-id-764'/>
    <!-- OT::CmapSubtableFormat14* -->
    <pointer-type-def type-id='type-id-765' size-in-bits='64' id='type-id-766'/>
    <!-- OT::CmapSubtableFormat14* const -->
    <qualified-type-def type-id='type-id-766' const='yes' id='type-id-767'/>
    <!-- OT::CmapSubtableFormat4* -->
    <pointer-type-def type-id='type-id-768' size-in-bits='64' id='type-id-769'/>
    <!-- OT::CmapSubtableFormat4* const -->
    <qualified-type-def type-id='type-id-769' const='yes' id='type-id-770'/>
    <!-- OT::CmapSubtableLongGroup& -->
    <reference-type-def kind='lvalue' type-id='type-id-714' size-in-bits='64' id='type-id-771'/>
    <!-- OT::CmapSubtableLongGroup* -->
    <pointer-type-def type-id='type-id-714' size-in-bits='64' id='type-id-772'/>
    <!-- OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>* -->
    <pointer-type-def type-id='type-id-773' size-in-bits='64' id='type-id-774'/>
    <!-- OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>* const -->
    <qualified-type-def type-id='type-id-774' const='yes' id='type-id-775'/>
    <!-- OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>* -->
    <pointer-type-def type-id='type-id-776' size-in-bits='64' id='type-id-777'/>
    <!-- OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>* const -->
    <qualified-type-def type-id='type-id-777' const='yes' id='type-id-778'/>
    <!-- OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-779' size-in-bits='64' id='type-id-780'/>
    <!-- OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-780' const='yes' id='type-id-781'/>
    <!-- OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-782' size-in-bits='64' id='type-id-783'/>
    <!-- OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-783' const='yes' id='type-id-784'/>
    <!-- OT::EncodingRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-716' size-in-bits='64' id='type-id-785'/>
    <!-- OT::EncodingRecord* -->
    <pointer-type-def type-id='type-id-716' size-in-bits='64' id='type-id-786'/>
    <!-- OT::EncodingRecord* const -->
    <qualified-type-def type-id='type-id-786' const='yes' id='type-id-787'/>
    <!-- OT::IntType<short unsigned int, 2u>& -->
    <reference-type-def kind='lvalue' type-id='type-id-269' size-in-bits='64' id='type-id-788'/>
    <!-- OT::IntType<short unsigned int, 2u>* const -->
    <qualified-type-def type-id='type-id-270' const='yes' id='type-id-789'/>
    <!-- OT::IntType<unsigned int, 3u>* -->
    <pointer-type-def type-id='type-id-790' size-in-bits='64' id='type-id-791'/>
    <!-- OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-792' size-in-bits='64' id='type-id-421'/>
    <!-- OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-421' const='yes' id='type-id-793'/>
    <!-- OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-794' size-in-bits='64' id='type-id-420'/>
    <!-- OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-420' const='yes' id='type-id-795'/>
    <!-- OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-796' size-in-bits='64' id='type-id-419'/>
    <!-- OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-419' const='yes' id='type-id-797'/>
    <!-- OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-798' size-in-bits='64' id='type-id-799'/>
    <!-- OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-800' size-in-bits='64' id='type-id-801'/>
    <!-- OT::Supplier<OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-802' size-in-bits='64' id='type-id-803'/>
    <!-- OT::USHORT* -->
    <pointer-type-def type-id='type-id-410' size-in-bits='64' id='type-id-425'/>
    <!-- OT::UVSMapping& -->
    <reference-type-def kind='lvalue' type-id='type-id-723' size-in-bits='64' id='type-id-804'/>
    <!-- OT::UVSMapping* -->
    <pointer-type-def type-id='type-id-723' size-in-bits='64' id='type-id-805'/>
    <!-- OT::UnicodeValueRange& -->
    <reference-type-def kind='lvalue' type-id='type-id-725' size-in-bits='64' id='type-id-806'/>
    <!-- OT::UnicodeValueRange* -->
    <pointer-type-def type-id='type-id-725' size-in-bits='64' id='type-id-807'/>
    <!-- OT::VariationSelectorRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-727' size-in-bits='64' id='type-id-808'/>
    <!-- OT::VariationSelectorRecord* -->
    <pointer-type-def type-id='type-id-727' size-in-bits='64' id='type-id-809'/>
    <!-- OT::VariationSelectorRecord* const -->
    <qualified-type-def type-id='type-id-809' const='yes' id='type-id-810'/>
    <!-- OT::_hea* -->
    <pointer-type-def type-id='type-id-811' size-in-bits='64' id='type-id-812'/>
    <!-- OT::_hea* const -->
    <qualified-type-def type-id='type-id-812' const='yes' id='type-id-813'/>
    <!-- OT::_mtx* -->
    <pointer-type-def type-id='type-id-814' size-in-bits='64' id='type-id-815'/>
    <!-- OT::_mtx* const -->
    <qualified-type-def type-id='type-id-815' const='yes' id='type-id-816'/>
    <!-- OT::cmap* -->
    <pointer-type-def type-id='type-id-817' size-in-bits='64' id='type-id-818'/>
    <!-- OT::cmap* const -->
    <qualified-type-def type-id='type-id-818' const='yes' id='type-id-819'/>
    <!-- const OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-735' const='yes' id='type-id-820'/>
    <!-- const OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-820' size-in-bits='64' id='type-id-431'/>
    <!-- const OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-431' const='yes' id='type-id-821'/>
    <!-- const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-738' const='yes' id='type-id-822'/>
    <!-- const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-822' size-in-bits='64' id='type-id-422'/>
    <!-- const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-422' const='yes' id='type-id-823'/>
    <!-- const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-741' const='yes' id='type-id-824'/>
    <!-- const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-824' size-in-bits='64' id='type-id-427'/>
    <!-- const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-427' const='yes' id='type-id-825'/>
    <!-- const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-743' const='yes' id='type-id-826'/>
    <!-- const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-826' size-in-bits='64' id='type-id-429'/>
    <!-- const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-429' const='yes' id='type-id-827'/>
    <!-- const OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-746' const='yes' id='type-id-828'/>
    <!-- const OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-828' size-in-bits='64' id='type-id-437'/>
    <!-- const OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-437' const='yes' id='type-id-829'/>
    <!-- const OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-749' const='yes' id='type-id-830'/>
    <!-- const OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-830' size-in-bits='64' id='type-id-435'/>
    <!-- const OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-752' const='yes' id='type-id-831'/>
    <!-- const OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-831' size-in-bits='64' id='type-id-434'/>
    <!-- const OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-434' const='yes' id='type-id-832'/>
    <!-- const OT::BEInt<unsigned int, 3> -->
    <qualified-type-def type-id='type-id-756' const='yes' id='type-id-833'/>
    <!-- const OT::BEInt<unsigned int, 3>& -->
    <reference-type-def kind='lvalue' type-id='type-id-833' size-in-bits='64' id='type-id-834'/>
    <!-- const OT::BEInt<unsigned int, 3>* -->
    <pointer-type-def type-id='type-id-833' size-in-bits='64' id='type-id-835'/>
    <!-- const OT::BEInt<unsigned int, 3>* const -->
    <qualified-type-def type-id='type-id-835' const='yes' id='type-id-836'/>
    <!-- const OT::CmapSubtable -->
    <qualified-type-def type-id='type-id-758' const='yes' id='type-id-837'/>
    <!-- const OT::CmapSubtable& -->
    <reference-type-def kind='lvalue' type-id='type-id-837' size-in-bits='64' id='type-id-838'/>
    <!-- const OT::CmapSubtable* -->
    <pointer-type-def type-id='type-id-837' size-in-bits='64' id='type-id-730'/>
    <!-- const OT::CmapSubtable* const -->
    <qualified-type-def type-id='type-id-730' const='yes' id='type-id-839'/>
    <!-- const OT::CmapSubtableFormat0 -->
    <qualified-type-def type-id='type-id-762' const='yes' id='type-id-840'/>
    <!-- const OT::CmapSubtableFormat0* -->
    <pointer-type-def type-id='type-id-840' size-in-bits='64' id='type-id-423'/>
    <!-- const OT::CmapSubtableFormat0* const -->
    <qualified-type-def type-id='type-id-423' const='yes' id='type-id-841'/>
    <!-- const OT::CmapSubtableFormat14 -->
    <qualified-type-def type-id='type-id-765' const='yes' id='type-id-842'/>
    <!-- const OT::CmapSubtableFormat14* -->
    <pointer-type-def type-id='type-id-842' size-in-bits='64' id='type-id-440'/>
    <!-- const OT::CmapSubtableFormat14* const -->
    <qualified-type-def type-id='type-id-440' const='yes' id='type-id-843'/>
    <!-- const OT::CmapSubtableFormat4 -->
    <qualified-type-def type-id='type-id-768' const='yes' id='type-id-844'/>
    <!-- const OT::CmapSubtableFormat4* -->
    <pointer-type-def type-id='type-id-844' size-in-bits='64' id='type-id-424'/>
    <!-- const OT::CmapSubtableFormat4* const -->
    <qualified-type-def type-id='type-id-424' const='yes' id='type-id-845'/>
    <!-- const OT::CmapSubtableLongGroup -->
    <qualified-type-def type-id='type-id-714' const='yes' id='type-id-846'/>
    <!-- const OT::CmapSubtableLongGroup& -->
    <reference-type-def kind='lvalue' type-id='type-id-846' size-in-bits='64' id='type-id-847'/>
    <!-- const OT::CmapSubtableLongGroup* -->
    <pointer-type-def type-id='type-id-846' size-in-bits='64' id='type-id-848'/>
    <!-- const OT::CmapSubtableLongGroup* const -->
    <qualified-type-def type-id='type-id-848' const='yes' id='type-id-849'/>
    <!-- const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12> -->
    <qualified-type-def type-id='type-id-773' const='yes' id='type-id-850'/>
    <!-- const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>* -->
    <pointer-type-def type-id='type-id-850' size-in-bits='64' id='type-id-432'/>
    <!-- const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>* const -->
    <qualified-type-def type-id='type-id-432' const='yes' id='type-id-851'/>
    <!-- const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13> -->
    <qualified-type-def type-id='type-id-776' const='yes' id='type-id-852'/>
    <!-- const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>* -->
    <pointer-type-def type-id='type-id-852' size-in-bits='64' id='type-id-433'/>
    <!-- const OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>* const -->
    <qualified-type-def type-id='type-id-433' const='yes' id='type-id-853'/>
    <!-- const OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-779' const='yes' id='type-id-854'/>
    <!-- const OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-854' size-in-bits='64' id='type-id-428'/>
    <!-- const OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-428' const='yes' id='type-id-855'/>
    <!-- const OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-782' const='yes' id='type-id-856'/>
    <!-- const OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-856' size-in-bits='64' id='type-id-430'/>
    <!-- const OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-430' const='yes' id='type-id-857'/>
    <!-- const OT::EncodingRecord -->
    <qualified-type-def type-id='type-id-716' const='yes' id='type-id-858'/>
    <!-- const OT::EncodingRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-858' size-in-bits='64' id='type-id-859'/>
    <!-- const OT::EncodingRecord* -->
    <pointer-type-def type-id='type-id-858' size-in-bits='64' id='type-id-442'/>
    <!-- const OT::EncodingRecord* const -->
    <qualified-type-def type-id='type-id-442' const='yes' id='type-id-860'/>
    <!-- const OT::IntType<unsigned int, 3u> -->
    <qualified-type-def type-id='type-id-790' const='yes' id='type-id-861'/>
    <!-- const OT::IntType<unsigned int, 3u>& -->
    <reference-type-def kind='lvalue' type-id='type-id-861' size-in-bits='64' id='type-id-862'/>
    <!-- const OT::IntType<unsigned int, 3u>* -->
    <pointer-type-def type-id='type-id-861' size-in-bits='64' id='type-id-863'/>
    <!-- const OT::IntType<unsigned int, 3u>* const -->
    <qualified-type-def type-id='type-id-863' const='yes' id='type-id-864'/>
    <!-- const OT::LongMetric -->
    <qualified-type-def type-id='type-id-719' const='yes' id='type-id-865'/>
    <!-- const OT::LongMetric* -->
    <pointer-type-def type-id='type-id-865' size-in-bits='64' id='type-id-866'/>
    <!-- const OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-792' const='yes' id='type-id-867'/>
    <!-- const OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-867' size-in-bits='64' id='type-id-441'/>
    <!-- const OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-441' const='yes' id='type-id-868'/>
    <!-- const OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-794' const='yes' id='type-id-869'/>
    <!-- const OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-869' size-in-bits='64' id='type-id-438'/>
    <!-- const OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-438' const='yes' id='type-id-870'/>
    <!-- const OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-796' const='yes' id='type-id-871'/>
    <!-- const OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-871' size-in-bits='64' id='type-id-436'/>
    <!-- const OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-436' const='yes' id='type-id-872'/>
    <!-- const OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-873' const='yes' id='type-id-874'/>
    <!-- const OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-874' size-in-bits='64' id='type-id-875'/>
    <!-- const OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-875' const='yes' id='type-id-876'/>
    <!-- const OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-798' const='yes' id='type-id-877'/>
    <!-- const OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-877' size-in-bits='64' id='type-id-878'/>
    <!-- const OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-877' size-in-bits='64' id='type-id-879'/>
    <!-- const OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-879' const='yes' id='type-id-880'/>
    <!-- const OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-800' const='yes' id='type-id-881'/>
    <!-- const OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-881' size-in-bits='64' id='type-id-882'/>
    <!-- const OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-881' size-in-bits='64' id='type-id-883'/>
    <!-- const OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-883' const='yes' id='type-id-884'/>
    <!-- const OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-885' const='yes' id='type-id-886'/>
    <!-- const OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-886' size-in-bits='64' id='type-id-887'/>
    <!-- const OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-887' const='yes' id='type-id-888'/>
    <!-- const OT::UVSMapping -->
    <qualified-type-def type-id='type-id-723' const='yes' id='type-id-889'/>
    <!-- const OT::UVSMapping& -->
    <reference-type-def kind='lvalue' type-id='type-id-889' size-in-bits='64' id='type-id-890'/>
    <!-- const OT::UVSMapping* -->
    <pointer-type-def type-id='type-id-889' size-in-bits='64' id='type-id-891'/>
    <!-- const OT::UVSMapping* const -->
    <qualified-type-def type-id='type-id-891' const='yes' id='type-id-892'/>
    <!-- const OT::UnicodeValueRange -->
    <qualified-type-def type-id='type-id-725' const='yes' id='type-id-893'/>
    <!-- const OT::UnicodeValueRange& -->
    <reference-type-def kind='lvalue' type-id='type-id-893' size-in-bits='64' id='type-id-894'/>
    <!-- const OT::UnicodeValueRange* -->
    <pointer-type-def type-id='type-id-893' size-in-bits='64' id='type-id-895'/>
    <!-- const OT::UnicodeValueRange* const -->
    <qualified-type-def type-id='type-id-895' const='yes' id='type-id-896'/>
    <!-- const OT::VariationSelectorRecord -->
    <qualified-type-def type-id='type-id-727' const='yes' id='type-id-897'/>
    <!-- const OT::VariationSelectorRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-897' size-in-bits='64' id='type-id-898'/>
    <!-- const OT::VariationSelectorRecord* -->
    <pointer-type-def type-id='type-id-897' size-in-bits='64' id='type-id-439'/>
    <!-- const OT::VariationSelectorRecord* const -->
    <qualified-type-def type-id='type-id-439' const='yes' id='type-id-899'/>
    <!-- const OT::_hea -->
    <qualified-type-def type-id='type-id-811' const='yes' id='type-id-900'/>
    <!-- const OT::_hea* -->
    <pointer-type-def type-id='type-id-900' size-in-bits='64' id='type-id-444'/>
    <!-- const OT::_mtx -->
    <qualified-type-def type-id='type-id-814' const='yes' id='type-id-901'/>
    <!-- const OT::_mtx* -->
    <pointer-type-def type-id='type-id-901' size-in-bits='64' id='type-id-732'/>
    <!-- const OT::cmap -->
    <qualified-type-def type-id='type-id-817' const='yes' id='type-id-902'/>
    <!-- const OT::cmap* -->
    <pointer-type-def type-id='type-id-902' size-in-bits='64' id='type-id-443'/>
    <!-- const OT::cmap* const -->
    <qualified-type-def type-id='type-id-443' const='yes' id='type-id-903'/>
    <!-- const hb_codepoint_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-144' size-in-bits='64' id='type-id-904'/>
    <!-- const hb_ot_face_cmap_accelerator_t -->
    <qualified-type-def type-id='type-id-729' const='yes' id='type-id-905'/>
    <!-- const hb_ot_face_cmap_accelerator_t* -->
    <pointer-type-def type-id='type-id-905' size-in-bits='64' id='type-id-906'/>
    <!-- const hb_ot_face_cmap_accelerator_t* const -->
    <qualified-type-def type-id='type-id-906' const='yes' id='type-id-907'/>
    <!-- const hb_ot_face_metrics_accelerator_t -->
    <qualified-type-def type-id='type-id-731' const='yes' id='type-id-908'/>
    <!-- const hb_ot_face_metrics_accelerator_t* -->
    <pointer-type-def type-id='type-id-908' size-in-bits='64' id='type-id-909'/>
    <!-- const hb_ot_face_metrics_accelerator_t* const -->
    <qualified-type-def type-id='type-id-909' const='yes' id='type-id-910'/>
    <!-- const uint16_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-176' size-in-bits='64' id='type-id-426'/>
    <!-- hb_ot_face_cmap_accelerator_t* -->
    <pointer-type-def type-id='type-id-729' size-in-bits='64' id='type-id-911'/>
    <!-- hb_ot_face_cmap_accelerator_t* const -->
    <qualified-type-def type-id='type-id-911' const='yes' id='type-id-912'/>
    <!-- hb_ot_face_metrics_accelerator_t* -->
    <pointer-type-def type-id='type-id-731' size-in-bits='64' id='type-id-913'/>
    <!-- hb_ot_face_metrics_accelerator_t* const -->
    <qualified-type-def type-id='type-id-913' const='yes' id='type-id-914'/>
    <reference-type-def kind='lvalue' type-id='type-id-915' size-in-bits='64' id='type-id-916'/>
    <reference-type-def kind='lvalue' type-id='type-id-917' size-in-bits='64' id='type-id-918'/>
    <reference-type-def kind='lvalue' type-id='type-id-919' size-in-bits='64' id='type-id-920'/>
    <reference-type-def kind='lvalue' type-id='type-id-921' size-in-bits='64' id='type-id-922'/>
    <reference-type-def kind='lvalue' type-id='type-id-923' size-in-bits='64' id='type-id-924'/>
    <!-- namespace OT -->
    <namespace-decl name='OT'>
      <!-- enum OT::glyph_variant_t -->
      <enum-decl name='glyph_variant_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='275' column='1' id='type-id-925'>
        <underlying-type type-id='type-id-7'/>
        <enumerator name='GLYPH_VARIANT_NOT_FOUND' value='0'/>
        <enumerator name='GLYPH_VARIANT_FOUND' value='1'/>
        <enumerator name='GLYPH_VARIANT_USE_DEFAULT' value='2'/>
      </enum-decl>
      <!-- struct OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='ArrayOf&lt;OT::CmapSubtableLongGroup, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-735'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<unsigned int, 4u> OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >::len -->
          <var-decl name='len' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::CmapSubtableLongGroup OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >::array[1] -->
          <var-decl name='array' type-id='type-id-715' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::EncodingRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-738'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::EncodingRecord OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-717' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- int OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >::lsearch<OT::EncodingRecord>(const OT::EncodingRecord&) -->
          <function-decl name='lsearch&lt;OT::EncodingRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-422' is-artificial='yes'/>
            <!-- parameter of type 'const OT::EncodingRecord&' -->
            <parameter type-id='type-id-859'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >::lsearch<OT::EncodingRecord>(const OT::EncodingRecord&) -->
          <function-decl name='lsearch&lt;OT::EncodingRecord&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='876' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-823' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::EncodingRecord&' -->
            <parameter type-id='type-id-859' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='876' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-741'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-718' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-743'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<unsigned int, 4u> OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >::len -->
          <var-decl name='len' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >::array[1] -->
          <var-decl name='array' type-id='type-id-718' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='ArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='72' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-746'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<unsigned int, 4u> OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >::len -->
          <var-decl name='len' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::UVSMapping OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >::array[1] -->
          <var-decl name='array' type-id='type-id-724' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='ArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-749'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<unsigned int, 4u> OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >::len -->
          <var-decl name='len' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::UnicodeValueRange OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >::array[1] -->
          <var-decl name='array' type-id='type-id-726' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='ArrayOf&lt;OT::VariationSelectorRecord, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='120' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-752'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<unsigned int, 4u> OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::len -->
          <var-decl name='len' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::VariationSelectorRecord OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::array[1] -->
          <var-decl name='array' type-id='type-id-728' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::BEInt<short unsigned int, 2> -->
      <class-decl name='BEInt&lt;short unsigned int, 2&gt;' is-struct='yes' visibility='default' id='type-id-926'/>
      <!-- struct OT::BEInt<unsigned int, 3> -->
      <class-decl name='BEInt&lt;unsigned int, 3&gt;' size-in-bits='24' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='532' column='1' id='type-id-756'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- uint8_t OT::BEInt<unsigned int, 3>::v[3] -->
          <var-decl name='v' type-id='type-id-733' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='579' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::BEInt<unsigned int, 4> -->
      <class-decl name='BEInt&lt;unsigned int, 4&gt;' is-struct='yes' visibility='default' id='type-id-927'/>
      <!-- struct OT::CmapSubtable -->
      <class-decl name='CmapSubtable' size-in-bits='2096' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='393' column='1' id='type-id-758'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::CmapSubtableFormat0 format0; OT::CmapSubtableFormat4 format4; OT::CmapSubtableFormat6 format6; OT::CmapSubtableFormat10 format10; OT::CmapSubtableFormat12 format12; OT::CmapSubtableFormat13 format13; OT::CmapSubtableFormat14 format14;} -->
          <union-decl name='__anonymous_union__' size-in-bits='2096' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='437' column='1' id='type-id-928'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='438' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CmapSubtableFormat0 format0 -->
              <var-decl name='format0' type-id='type-id-762' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='439' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CmapSubtableFormat4 format4 -->
              <var-decl name='format4' type-id='type-id-768' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='440' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CmapSubtableFormat6 format6 -->
              <var-decl name='format6' type-id='type-id-929' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='441' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CmapSubtableFormat10 format10 -->
              <var-decl name='format10' type-id='type-id-930' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='442' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CmapSubtableFormat12 format12 -->
              <var-decl name='format12' type-id='type-id-931' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='443' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CmapSubtableFormat13 format13 -->
              <var-decl name='format13' type-id='type-id-932' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='444' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CmapSubtableFormat14 format14 -->
              <var-decl name='format14' type-id='type-id-765' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='445' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::CmapSubtableFormat0 format0; OT::CmapSubtableFormat4 format4; OT::CmapSubtableFormat6 format6; OT::CmapSubtableFormat10 format10; OT::CmapSubtableFormat12 format12; OT::CmapSubtableFormat13 format13; OT::CmapSubtableFormat14 format14;} OT::CmapSubtable::u -->
          <var-decl name='u' type-id='type-id-928' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='446' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtable::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='448' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableFormat0 -->
      <class-decl name='CmapSubtableFormat0' size-in-bits='2096' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='44' column='1' id='type-id-762'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CmapSubtableFormat0::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='60' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::CmapSubtableFormat0::lengthZ -->
          <var-decl name='lengthZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='61' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::CmapSubtableFormat0::languageZ -->
          <var-decl name='languageZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='62' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::BYTE OT::CmapSubtableFormat0::glyphIdArray[256] -->
          <var-decl name='glyphIdArray' type-id='type-id-712' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='63' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableFormat0::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='66' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableFormat0::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='66' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableFormat10 -->
      <class-decl name='CmapSubtableFormat10' size-in-bits='176' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='231' column='1' id='type-id-930'>
        <!-- struct OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-782'/>
      </class-decl>
      <!-- struct OT::CmapSubtableFormat12 -->
      <class-decl name='CmapSubtableFormat12' size-in-bits='224' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='262' column='1' id='type-id-931'>
        <!-- struct OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-773'/>
      </class-decl>
      <!-- struct OT::CmapSubtableFormat13 -->
      <class-decl name='CmapSubtableFormat13' size-in-bits='224' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='269' column='1' id='type-id-932'>
        <!-- struct OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-776'/>
      </class-decl>
      <!-- struct OT::CmapSubtableFormat14 -->
      <class-decl name='CmapSubtableFormat14' size-in-bits='168' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='368' column='1' id='type-id-765'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CmapSubtableFormat14::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='383' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::ULONG OT::CmapSubtableFormat14::lengthZ -->
          <var-decl name='lengthZ' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='384' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > OT::CmapSubtableFormat14::record -->
          <var-decl name='record' type-id='type-id-885' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='386' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableFormat14::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='389' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableFormat4 -->
      <class-decl name='CmapSubtableFormat4' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='70' column='1' id='type-id-768'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='150' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::length -->
          <var-decl name='length' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='151' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::languageZ -->
          <var-decl name='languageZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='153' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::segCountX2 -->
          <var-decl name='segCountX2' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='154' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::searchRangeZ -->
          <var-decl name='searchRangeZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='155' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::entrySelectorZ -->
          <var-decl name='entrySelectorZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='156' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::rangeShiftZ -->
          <var-decl name='rangeShiftZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='157' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='112'>
          <!-- OT::USHORT OT::CmapSubtableFormat4::values[1] -->
          <var-decl name='values' type-id='type-id-722' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='159' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableFormat4::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='171' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableFormat6 -->
      <class-decl name='CmapSubtableFormat6' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='230' column='1' id='type-id-929'>
        <!-- struct OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-779'/>
      </class-decl>
      <!-- struct OT::CmapSubtableLongGroup -->
      <class-decl name='CmapSubtableLongGroup' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='175' column='1' id='type-id-714'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- OT::ULONG OT::CmapSubtableLongGroup::startCharCode -->
          <var-decl name='startCharCode' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='192' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='32'>
          <!-- OT::ULONG OT::CmapSubtableLongGroup::endCharCode -->
          <var-decl name='endCharCode' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='193' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- OT::ULONG OT::CmapSubtableLongGroup::glyphID -->
          <var-decl name='glyphID' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='194' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableLongGroup::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='197' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableLongGroup::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='197' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12> -->
      <class-decl name='CmapSubtableLongSegmented&lt;OT::CmapSubtableFormat12&gt;' size-in-bits='224' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='235' column='1' id='type-id-773'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='251' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::reservedZ -->
          <var-decl name='reservedZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='252' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ULONG OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::lengthZ -->
          <var-decl name='lengthZ' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='253' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::ULONG OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::languageZ -->
          <var-decl name='languageZ' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='254' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::groups -->
          <var-decl name='groups' type-id='type-id-873' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='256' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='258' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13> -->
      <class-decl name='CmapSubtableLongSegmented&lt;OT::CmapSubtableFormat13&gt;' size-in-bits='224' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='235' column='1' id='type-id-776'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='251' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::reservedZ -->
          <var-decl name='reservedZ' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='252' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ULONG OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::lengthZ -->
          <var-decl name='lengthZ' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='253' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::ULONG OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::languageZ -->
          <var-decl name='languageZ' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='254' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::groups -->
          <var-decl name='groups' type-id='type-id-873' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='256' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='258' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='CmapSubtableTrimmed&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='202' column='1' id='type-id-779'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >::formatReserved -->
          <var-decl name='formatReserved' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='219' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::IntType<short unsigned int, 2u> OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >::lengthZ -->
          <var-decl name='lengthZ' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='220' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::IntType<short unsigned int, 2u> OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >::languageZ -->
          <var-decl name='languageZ' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='221' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::IntType<short unsigned int, 2u> OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >::startCharCode -->
          <var-decl name='startCharCode' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='222' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >::glyphIdArray -->
          <var-decl name='glyphIdArray' type-id='type-id-741' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='224' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableTrimmed<OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='227' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> > -->
      <class-decl name='CmapSubtableTrimmed&lt;OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='176' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='202' column='1' id='type-id-782'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::IntType<unsigned int, 4u> OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >::formatReserved -->
          <var-decl name='formatReserved' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='219' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::IntType<unsigned int, 4u> OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >::lengthZ -->
          <var-decl name='lengthZ' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='220' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::IntType<unsigned int, 4u> OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >::languageZ -->
          <var-decl name='languageZ' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='221' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::IntType<unsigned int, 4u> OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >::startCharCode -->
          <var-decl name='startCharCode' type-id='type-id-271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='222' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='128'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<unsigned int, 4u> > OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >::glyphIdArray -->
          <var-decl name='glyphIdArray' type-id='type-id-743' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='224' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='227' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::EncodingRecord -->
      <class-decl name='EncodingRecord' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='453' column='1' id='type-id-716'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::EncodingRecord::platformID -->
          <var-decl name='platformID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='470' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::EncodingRecord::encodingID -->
          <var-decl name='encodingID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='471' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> > OT::EncodingRecord::subtable -->
          <var-decl name='subtable' type-id='type-id-792' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='473' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::EncodingRecord::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='475' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::EncodingRecord::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='475' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::FixedVersion -->
      <class-decl name='FixedVersion' is-struct='yes' visibility='default' id='type-id-933'/>
      <!-- struct OT::IntType<short int, 2u> -->
      <class-decl name='IntType&lt;short int, 2u&gt;' is-struct='yes' visibility='default' id='type-id-934'/>
      <!-- struct OT::IntType<short unsigned int, 2u> -->
      <class-decl name='IntType&lt;short unsigned int, 2u&gt;' is-struct='yes' visibility='default' id='type-id-935'/>
      <!-- struct OT::IntType<unsigned int, 3u> -->
      <class-decl name='IntType&lt;unsigned int, 3u&gt;' size-in-bits='24' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='613' column='1' id='type-id-790'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::BEInt<unsigned int, 3> OT::IntType<unsigned int, 3u>::v -->
          <var-decl name='v' type-id='type-id-756' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='626' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<unsigned int, 3u>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::IntType<unsigned int, 3u>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='628' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::IntType<unsigned int, 4u> -->
      <class-decl name='IntType&lt;unsigned int, 4u&gt;' is-struct='yes' visibility='default' id='type-id-936'/>
      <!-- struct OT::LongMetric -->
      <class-decl name='LongMetric' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='46' column='1' id='type-id-719'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::LongMetric::advance -->
          <var-decl name='advance' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='47' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::SHORT OT::LongMetric::lsb -->
          <var-decl name='lsb' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='48' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LongMetric::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='50' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LongMetric::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='50' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='OffsetTo&lt;OT::CmapSubtable, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-792'>
        <!-- struct OT::Offset<OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-343'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='OffsetTo&lt;OT::SortedArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-794'>
        <!-- struct OT::Offset<OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-343'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='OffsetTo&lt;OT::SortedArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-796'>
        <!-- struct OT::Offset<OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-343'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Sanitizer<OT::_hea> -->
      <class-decl name='Sanitizer&lt;OT::_hea&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-937'/>
      <!-- struct OT::Sanitizer<OT::_mtx> -->
      <class-decl name='Sanitizer&lt;OT::_mtx&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-938'/>
      <!-- struct OT::Sanitizer<OT::cmap> -->
      <class-decl name='Sanitizer&lt;OT::cmap&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-939'/>
      <!-- struct OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='SortedArrayOf&lt;OT::CmapSubtableLongGroup, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-873'>
        <!-- struct OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-735'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-875' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4u> >* const' -->
            <parameter type-id='type-id-876' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::EncodingRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-940'>
        <!-- struct OT::ArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-738'/>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='SortedArrayOf&lt;OT::UVSMapping, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='72' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-798'>
        <!-- struct OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-746'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-879' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >* const' -->
            <parameter type-id='type-id-880' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='SortedArrayOf&lt;OT::UnicodeValueRange, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-800'>
        <!-- struct OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-749'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-883' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >* const' -->
            <parameter type-id='type-id-884' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='SortedArrayOf&lt;OT::VariationSelectorRecord, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='120' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-885'>
        <!-- struct OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-752'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >*' -->
            <parameter type-id='type-id-887' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >* const' -->
            <parameter type-id='type-id-888' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::UVSMapping -->
      <class-decl name='UVSMapping' size-in-bits='40' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='306' column='1' id='type-id-723'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::UINT24 OT::UVSMapping::unicodeValue -->
          <var-decl name='unicodeValue' type-id='type-id-941' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='317' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='24'>
          <!-- OT::GlyphID OT::UVSMapping::glyphID -->
          <var-decl name='glyphID' type-id='type-id-942' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='318' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::UVSMapping::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='320' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::UVSMapping::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='320' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::UnicodeValueRange -->
      <class-decl name='UnicodeValueRange' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='283' column='1' id='type-id-725'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::UINT24 OT::UnicodeValueRange::startUnicodeValue -->
          <var-decl name='startUnicodeValue' type-id='type-id-941' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='296' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='24'>
          <!-- OT::BYTE OT::UnicodeValueRange::additionalCount -->
          <var-decl name='additionalCount' type-id='type-id-711' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='297' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::UnicodeValueRange::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='300' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::UnicodeValueRange::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='300' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::VariationSelectorRecord -->
      <class-decl name='VariationSelectorRecord' size-in-bits='88' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='326' column='1' id='type-id-727'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::UINT24 OT::VariationSelectorRecord::varSelector -->
          <var-decl name='varSelector' type-id='type-id-941' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='358' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='24'>
          <!-- OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > OT::VariationSelectorRecord::defaultUVS -->
          <var-decl name='defaultUVS' type-id='type-id-796' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='360' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='56'>
          <!-- OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned int, 4u> > OT::VariationSelectorRecord::nonDefaultUVS -->
          <var-decl name='nonDefaultUVS' type-id='type-id-794' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='362' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::VariationSelectorRecord::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='364' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::VariationSelectorRecord::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='364' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::_hea -->
      <class-decl name='_hea' size-in-bits='288' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='46' column='1' id='type-id-811'>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::_hea::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='47' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::_hea::hheaTag -->
          <var-decl name='hheaTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='49' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::_hea::vheaTag -->
          <var-decl name='vheaTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='50' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::FixedVersion OT::_hea::version -->
          <var-decl name='version' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='58' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::FWORD OT::_hea::ascender -->
          <var-decl name='ascender' type-id='type-id-943' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='59' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='48'>
          <!-- OT::FWORD OT::_hea::descender -->
          <var-decl name='descender' type-id='type-id-943' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='60' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- OT::FWORD OT::_hea::lineGap -->
          <var-decl name='lineGap' type-id='type-id-943' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='61' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='80'>
          <!-- OT::UFWORD OT::_hea::advanceMax -->
          <var-decl name='advanceMax' type-id='type-id-944' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='62' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='96'>
          <!-- OT::FWORD OT::_hea::minLeadingBearing -->
          <var-decl name='minLeadingBearing' type-id='type-id-943' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='64' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='112'>
          <!-- OT::FWORD OT::_hea::minTrailingBearing -->
          <var-decl name='minTrailingBearing' type-id='type-id-943' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='66' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- OT::FWORD OT::_hea::maxExtent -->
          <var-decl name='maxExtent' type-id='type-id-943' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='69' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='144'>
          <!-- OT::SHORT OT::_hea::caretSlopeRise -->
          <var-decl name='caretSlopeRise' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='71' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- OT::SHORT OT::_hea::caretSlopeRun -->
          <var-decl name='caretSlopeRun' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='74' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='176'>
          <!-- OT::SHORT OT::_hea::caretOffset -->
          <var-decl name='caretOffset' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='75' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- OT::SHORT OT::_hea::reserved1 -->
          <var-decl name='reserved1' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='80' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='208'>
          <!-- OT::SHORT OT::_hea::reserved2 -->
          <var-decl name='reserved2' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='81' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='224'>
          <!-- OT::SHORT OT::_hea::reserved3 -->
          <var-decl name='reserved3' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='82' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='240'>
          <!-- OT::SHORT OT::_hea::reserved4 -->
          <var-decl name='reserved4' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='83' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- OT::SHORT OT::_hea::metricDataFormat -->
          <var-decl name='metricDataFormat' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='84' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='272'>
          <!-- OT::USHORT OT::_hea::numberOfLongMetrics -->
          <var-decl name='numberOfLongMetrics' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='85' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::_hea::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='88' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::_hea::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hhea-table.hh' line='88' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::_mtx -->
      <class-decl name='_mtx' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='54' column='1' id='type-id-814'>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::_mtx::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='55' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::_mtx::hmtxTag -->
          <var-decl name='hmtxTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='57' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::_mtx::vmtxTag -->
          <var-decl name='vmtxTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='58' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::LongMetric OT::_mtx::longMetric[1] -->
          <var-decl name='longMetric' type-id='type-id-720' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='68' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::SHORT OT::_mtx::leadingBearingX[1] -->
          <var-decl name='leadingBearingX' type-id='type-id-721' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='76' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::_mtx::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-hmtx-table.hh' line='90' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::cmap -->
      <class-decl name='cmap' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='479' column='1' id='type-id-817'>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::cmap::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='480' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::cmap::version -->
          <var-decl name='version' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='506' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::SortedArrayOf<OT::EncodingRecord, OT::IntType<short unsigned int, 2u> > OT::cmap::encodingRecord -->
          <var-decl name='encodingRecord' type-id='type-id-940' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='508' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::cmap::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-cmap-table.hh' line='510' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::hb_sanitize_context_t -->
      <class-decl name='hb_sanitize_context_t' is-struct='yes' visibility='default' id='type-id-945'/>
      <!-- struct OT::hb_serialize_context_t -->
      <class-decl name='hb_serialize_context_t' is-struct='yes' visibility='default' id='type-id-946'/>
      <!-- typedef uint8_t OT::BYTE -->
      <typedef-decl name='BYTE' type-id='type-id-138' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='631' column='1' id='type-id-711'/>
      <!-- typedef OT::SHORT OT::FWORD -->
      <typedef-decl name='FWORD' type-id='type-id-613' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='639' column='1' id='type-id-943'/>
      <!-- typedef OT::USHORT OT::GlyphID -->
      <typedef-decl name='GlyphID' type-id='type-id-410' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='672' column='1' id='type-id-942'/>
      <!-- typedef OT::USHORT OT::UFWORD -->
      <typedef-decl name='UFWORD' type-id='type-id-410' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='642' column='1' id='type-id-944'/>
      <!-- typedef OT::IntType<unsigned int, 3u> OT::UINT24 -->
      <typedef-decl name='UINT24' type-id='type-id-790' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='636' column='1' id='type-id-941'/>
      <!-- struct OT::Supplier<OT::CmapSubtableLongGroup> -->
      <class-decl name='Supplier&lt;OT::CmapSubtableLongGroup&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-915'/>
      <!-- struct OT::Supplier<OT::EncodingRecord> -->
      <class-decl name='Supplier&lt;OT::EncodingRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-917'/>
      <!-- struct OT::Supplier<OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='Supplier&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='487' column='1' id='type-id-802'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- unsigned int OT::Supplier<OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='511' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- const OT::IntType<short unsigned int, 2u>* OT::Supplier<OT::IntType<short unsigned int, 2u> >::head -->
          <var-decl name='head' type-id='type-id-335' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='512' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void OT::Supplier<OT::IntType<short unsigned int, 2u> >::Supplier(const OT::IntType<short unsigned int, 2u>*, unsigned int) -->
          <function-decl name='Supplier' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::Supplier<OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-947' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short unsigned int, 2u>*' -->
            <parameter type-id='type-id-335'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::Supplier<OT::IntType<short unsigned int, 2u> >::Supplier(const OT::Supplier<OT::IntType<short unsigned int, 2u> >&) -->
          <function-decl name='Supplier' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='508' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::Supplier<OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-947' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Supplier<OT::IntType<short unsigned int, 2u> >&' -->
            <parameter type-id='type-id-948'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::Supplier<OT::IntType<short unsigned int, 2u> >::Supplier(const OT::IntType<short unsigned int, 2u>*, unsigned int) -->
          <function-decl name='Supplier' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::Supplier<OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-949' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::IntType<short unsigned int, 2u>*' -->
            <parameter type-id='type-id-335' name='array' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='len_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::Supplier<OT::UVSMapping> -->
      <class-decl name='Supplier&lt;OT::UVSMapping&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-919'/>
      <!-- struct OT::Supplier<OT::UnicodeValueRange> -->
      <class-decl name='Supplier&lt;OT::UnicodeValueRange&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-921'/>
      <!-- struct OT::Supplier<OT::VariationSelectorRecord> -->
      <class-decl name='Supplier&lt;OT::VariationSelectorRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-923'/>
    </namespace-decl>
    <!-- void hb_ot_font_set_funcs(hb_font_t*) -->
    <function-decl name='hb_ot_font_set_funcs' mangled-name='hb_ot_font_set_funcs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='338' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_font_set_funcs'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-font.cc' line='338' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-layout.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- OT::EntryExitRecord[1] -->
    <array-type-def dimensions='1' type-id='type-id-950' size-in-bits='32' id='type-id-951'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::Index[1] -->
    <array-type-def dimensions='1' type-id='type-id-952' size-in-bits='16' id='type-id-953'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::IntType<unsigned int, 3u>[1] -->
    <array-type-def dimensions='1' type-id='type-id-790' size-in-bits='24' id='type-id-954'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::LookupRecord[1] -->
    <array-type-def dimensions='1' type-id='type-id-955' size-in-bits='32' id='type-id-956'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::MarkRecord[1] -->
    <array-type-def dimensions='1' type-id='type-id-957' size-in-bits='32' id='type-id-958'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::Offset<OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-959' size-in-bits='16' id='type-id-960'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-961' size-in-bits='16' id='type-id-962'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-963' size-in-bits='16' id='type-id-964'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-965' size-in-bits='16' id='type-id-966'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-967' size-in-bits='16' id='type-id-968'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-969' size-in-bits='16' id='type-id-970'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-971' size-in-bits='16' id='type-id-972'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-973' size-in-bits='16' id='type-id-974'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-975' size-in-bits='32' id='type-id-976'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-977' size-in-bits='16' id='type-id-978'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-979' size-in-bits='16' id='type-id-980'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-981' size-in-bits='16' id='type-id-982'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-983' size-in-bits='16' id='type-id-984'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-985' size-in-bits='16' id='type-id-986'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-987' size-in-bits='16' id='type-id-988'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-989' size-in-bits='16' id='type-id-990'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-991' size-in-bits='16' id='type-id-992'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-993' size-in-bits='16' id='type-id-994'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-995' size-in-bits='16' id='type-id-996'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-997' size-in-bits='16' id='type-id-998'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-999' size-in-bits='16' id='type-id-1000'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >[1] -->
    <array-type-def dimensions='1' type-id='type-id-1001' size-in-bits='16' id='type-id-1002'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::RangeRecord[1] -->
    <array-type-def dimensions='1' type-id='type-id-1003' size-in-bits='48' id='type-id-1004'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::Record<OT::Feature>[1] -->
    <array-type-def dimensions='1' type-id='type-id-1005' size-in-bits='48' id='type-id-1006'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::Record<OT::LangSys>[1] -->
    <array-type-def dimensions='1' type-id='type-id-1007' size-in-bits='48' id='type-id-1008'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::Record<OT::Script>[1] -->
    <array-type-def dimensions='1' type-id='type-id-1009' size-in-bits='48' id='type-id-1010'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- OT::Value[1] -->
    <array-type-def dimensions='1' type-id='type-id-1011' size-in-bits='16' id='type-id-1012'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' lower-bound='0' upper-bound='0' type-id='type-id-4' id='type-id-186'/>
    </array-type-def>
    <!-- bool[2] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='16' id='type-id-1013'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- enum hb_ot_layout_glyph_class_t -->
    <enum-decl name='hb_ot_layout_glyph_class_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.h' line='54' column='1' id='type-id-1014'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_OT_LAYOUT_GLYPH_CLASS_UNCLASSIFIED' value='0'/>
      <enumerator name='HB_OT_LAYOUT_GLYPH_CLASS_BASE_GLYPH' value='1'/>
      <enumerator name='HB_OT_LAYOUT_GLYPH_CLASS_LIGATURE' value='2'/>
      <enumerator name='HB_OT_LAYOUT_GLYPH_CLASS_MARK' value='3'/>
      <enumerator name='HB_OT_LAYOUT_GLYPH_CLASS_COMPONENT' value='4'/>
    </enum-decl>
    <!-- hb_ot_map_t::feature_map_t[8] -->
    <array-type-def dimensions='1' type-id='type-id-1015' size-in-bits='2304' id='type-id-1016'>
      <!-- <anonymous range>[8] -->
      <subrange length='8' lower-bound='0' upper-bound='7' type-id='type-id-4' id='type-id-70'/>
    </array-type-def>
    <!-- hb_ot_map_t::lookup_map_t[32] -->
    <array-type-def dimensions='1' type-id='type-id-1017' size-in-bits='2048' id='type-id-1018'>
      <!-- <anonymous range>[32] -->
      <subrange length='32' lower-bound='0' upper-bound='31' type-id='type-id-4' id='type-id-1019'/>
    </array-type-def>
    <!-- hb_ot_map_t::stage_map_t[4] -->
    <array-type-def dimensions='1' type-id='type-id-1020' size-in-bits='512' id='type-id-1021'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' lower-bound='0' upper-bound='3' type-id='type-id-4' id='type-id-86'/>
    </array-type-def>
    <!-- hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>[2] -->
    <array-type-def dimensions='1' type-id='type-id-1022' size-in-bits='4352' id='type-id-1023'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>[2] -->
    <array-type-def dimensions='1' type-id='type-id-1024' size-in-bits='1280' id='type-id-1025'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- hb_tag_t[2] -->
    <array-type-def dimensions='1' type-id='type-id-189' size-in-bits='64' id='type-id-1026'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- struct GPOSProxy -->
    <class-decl name='GPOSProxy' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='818' column='1' id='type-id-1027'>
      <member-type access='public'>
        <!-- typedef OT::PosLookup GPOSProxy::Lookup -->
        <typedef-decl name='Lookup' type-id='type-id-1029' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='821' column='1' id='type-id-1028'/>
      </member-type>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int GPOSProxy::table_index -->
        <var-decl name='table_index' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='819' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const bool GPOSProxy::inplace -->
        <var-decl name='inplace' type-id='type-id-1030' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='820' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const OT::GPOS& GPOSProxy::table -->
        <var-decl name='table' type-id='type-id-1031' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='827' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const hb_ot_layout_lookup_accelerator_t* GPOSProxy::accels -->
        <var-decl name='accels' type-id='type-id-1032' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='828' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- GPOSProxy::GPOSProxy(hb_face_t*) -->
        <function-decl name='GPOSProxy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='823' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GPOSProxy*' -->
          <parameter type-id='type-id-1033' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- GPOSProxy::GPOSProxy(hb_face_t*) -->
        <function-decl name='GPOSProxy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='823' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GPOSProxy* const' -->
          <parameter type-id='type-id-1034' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='823' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct GSUBProxy -->
    <class-decl name='GSUBProxy' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='804' column='1' id='type-id-1035'>
      <member-type access='public'>
        <!-- typedef OT::SubstLookup GSUBProxy::Lookup -->
        <typedef-decl name='Lookup' type-id='type-id-1037' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='807' column='1' id='type-id-1036'/>
      </member-type>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int GSUBProxy::table_index -->
        <var-decl name='table_index' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='805' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const bool GSUBProxy::inplace -->
        <var-decl name='inplace' type-id='type-id-1030' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='806' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const OT::GSUB& GSUBProxy::table -->
        <var-decl name='table' type-id='type-id-1038' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='813' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const hb_ot_layout_lookup_accelerator_t* GSUBProxy::accels -->
        <var-decl name='accels' type-id='type-id-1032' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='814' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- GSUBProxy::GSUBProxy(hb_face_t*) -->
        <function-decl name='GSUBProxy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='809' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GSUBProxy*' -->
          <parameter type-id='type-id-1039' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- GSUBProxy::GSUBProxy(hb_face_t*) -->
        <function-decl name='GSUBProxy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='809' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GSUBProxy* const' -->
          <parameter type-id='type-id-1040' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='809' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct _hb_void_t -->
    <class-decl name='_hb_void_t' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='258' column='1' id='type-id-1041'/>
    <!-- struct hb_auto_trace_t<0, const OT::Coverage&> -->
    <class-decl name='hb_auto_trace_t&lt;0, const OT::Coverage&amp;&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='749' column='1' id='type-id-1042'>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, const OT::Coverage&>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, const OT::Coverage&>*' -->
          <parameter type-id='type-id-1043' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, const OT::Coverage&>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, const OT::Coverage&>* const' -->
          <parameter type-id='type-id-1044' name='this' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67' name='plevel_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='what' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='798' column='1'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='799' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='800' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='message' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='801' column='1'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, const OT::Coverage&>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, const OT::Coverage&>*' -->
          <parameter type-id='type-id-1043' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, const OT::Coverage&>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, const OT::Coverage&>* const' -->
          <parameter type-id='type-id-1044' name='this' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67' name='plevel_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='what' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='798' column='1'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='799' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='800' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='message' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='801' column='1'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_auto_trace_t<0, const _hb_void_t&> -->
    <class-decl name='hb_auto_trace_t&lt;0, const _hb_void_t&amp;&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='749' column='1' id='type-id-1045'>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, const _hb_void_t&>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, const _hb_void_t&>*' -->
          <parameter type-id='type-id-1046' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_auto_trace_t<0, const _hb_void_t&>::hb_auto_trace_t(unsigned int*, const char*, void*, const char*, const char*, ...) -->
        <function-decl name='hb_auto_trace_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_auto_trace_t<0, const _hb_void_t&>* const' -->
          <parameter type-id='type-id-1047' name='this' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int*' -->
          <parameter type-id='type-id-67' name='plevel_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='797' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='what' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='798' column='1'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-19' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='799' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='800' column='1'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-17' name='message' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='801' column='1'/>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_ot_layout_lookup_accelerator_t -->
    <class-decl name='hb_ot_layout_lookup_accelerator_t' size-in-bits='192' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='121' column='1' id='type-id-1048'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_set_digest_t hb_ot_layout_lookup_accelerator_t::digest -->
        <var-decl name='digest' type-id='type-id-1049' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='134' column='1'/>
      </data-member>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::fini<OT::SubstLookup>(const OT::SubstLookup&) -->
        <function-decl name='fini&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t*' -->
          <parameter type-id='type-id-1050' is-artificial='yes'/>
          <!-- parameter of type 'const OT::SubstLookup&' -->
          <parameter type-id='type-id-1051'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::fini<OT::PosLookup>(const OT::PosLookup&) -->
        <function-decl name='fini&lt;OT::PosLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t*' -->
          <parameter type-id='type-id-1050' is-artificial='yes'/>
          <!-- parameter of type 'const OT::PosLookup&' -->
          <parameter type-id='type-id-1052'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::init<OT::SubstLookup>(const OT::SubstLookup&) -->
        <function-decl name='init&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t*' -->
          <parameter type-id='type-id-1050' is-artificial='yes'/>
          <!-- parameter of type 'const OT::SubstLookup&' -->
          <parameter type-id='type-id-1051'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::init<OT::PosLookup>(const OT::PosLookup&) -->
        <function-decl name='init&lt;OT::PosLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t*' -->
          <parameter type-id='type-id-1050' is-artificial='yes'/>
          <!-- parameter of type 'const OT::PosLookup&' -->
          <parameter type-id='type-id-1052'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::fini<OT::SubstLookup>(const OT::SubstLookup&) -->
        <function-decl name='fini&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t* const' -->
          <parameter type-id='type-id-1053' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const OT::SubstLookup&' -->
          <parameter type-id='type-id-1051' name='lookup' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::fini<OT::PosLookup>(const OT::PosLookup&) -->
        <function-decl name='fini&lt;OT::PosLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t* const' -->
          <parameter type-id='type-id-1053' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const OT::PosLookup&' -->
          <parameter type-id='type-id-1052' name='lookup' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::init<OT::SubstLookup>(const OT::SubstLookup&) -->
        <function-decl name='init&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t* const' -->
          <parameter type-id='type-id-1053' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const OT::SubstLookup&' -->
          <parameter type-id='type-id-1051' name='lookup' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::init<OT::PosLookup>(const OT::PosLookup&) -->
        <function-decl name='init&lt;OT::PosLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t* const' -->
          <parameter type-id='type-id-1053' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const OT::PosLookup&' -->
          <parameter type-id='type-id-1052' name='lookup' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::fini<OT::SubstLookup*>(OT::SubstLookup* const&) -->
        <function-decl name='fini&lt;OT::SubstLookup*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t*' -->
          <parameter type-id='type-id-1050' is-artificial='yes'/>
          <!-- parameter of type 'OT::SubstLookup* const&' -->
          <parameter type-id='type-id-1054'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::init<OT::SubstLookup>(const OT::SubstLookup&) -->
        <function-decl name='init&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t*' -->
          <parameter type-id='type-id-1050' is-artificial='yes'/>
          <!-- parameter of type 'const OT::SubstLookup&' -->
          <parameter type-id='type-id-1051'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::fini<OT::SubstLookup*>(OT::SubstLookup* const&) -->
        <function-decl name='fini&lt;OT::SubstLookup*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t* const' -->
          <parameter type-id='type-id-1053' name='this' is-artificial='yes'/>
          <!-- parameter of type 'OT::SubstLookup* const&' -->
          <parameter type-id='type-id-1054' name='lookup' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='130' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_layout_lookup_accelerator_t::init<OT::SubstLookup>(const OT::SubstLookup&) -->
        <function-decl name='init&lt;OT::SubstLookup&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_layout_lookup_accelerator_t* const' -->
          <parameter type-id='type-id-1053' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const OT::SubstLookup&' -->
          <parameter type-id='type-id-1051' name='lookup' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-private.hh' line='123' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_ot_map_t -->
    <class-decl name='hb_ot_map_t' size-in-bits='8192' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='40' column='1' id='type-id-1055'>
      <member-type access='public'>
        <!-- struct hb_ot_map_t::feature_map_t -->
        <class-decl name='feature_map_t' size-in-bits='288' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='45' column='1' id='type-id-1015'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_tag_t hb_ot_map_t::feature_map_t::tag -->
            <var-decl name='tag' type-id='type-id-189' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='46' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='32'>
            <!-- unsigned int hb_ot_map_t::feature_map_t::index[2] -->
            <var-decl name='index' type-id='type-id-97' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='47' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='96'>
            <!-- unsigned int hb_ot_map_t::feature_map_t::stage[2] -->
            <var-decl name='stage' type-id='type-id-97' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='48' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='160'>
            <!-- unsigned int hb_ot_map_t::feature_map_t::shift -->
            <var-decl name='shift' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='49' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- hb_mask_t hb_ot_map_t::feature_map_t::mask -->
            <var-decl name='mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='50' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='224'>
            <!-- hb_mask_t hb_ot_map_t::feature_map_t::_1_mask -->
            <var-decl name='_1_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='51' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='256'>
            <!-- unsigned int hb_ot_map_t::feature_map_t::needs_fallback -->
            <var-decl name='needs_fallback' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='52' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='257'>
            <!-- unsigned int hb_ot_map_t::feature_map_t::auto_zwj -->
            <var-decl name='auto_zwj' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='53' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <member-type access='public'>
        <!-- struct hb_ot_map_t::lookup_map_t -->
        <class-decl name='lookup_map_t' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='59' column='1' id='type-id-1017'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- unsigned short int hb_ot_map_t::lookup_map_t::index -->
            <var-decl name='index' type-id='type-id-135' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='60' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='16'>
            <!-- unsigned short int hb_ot_map_t::lookup_map_t::auto_zwj -->
            <var-decl name='auto_zwj' type-id='type-id-135' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='61' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='32'>
            <!-- hb_mask_t hb_ot_map_t::lookup_map_t::mask -->
            <var-decl name='mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='62' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <member-type access='public'>
        <!-- struct hb_ot_map_t::stage_map_t -->
        <class-decl name='stage_map_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='70' column='1' id='type-id-1020'>
          <member-type access='public'>
            <!-- typedef void (*)(const hb_ot_shape_plan_t*, hb_font_t*, hb_buffer_t*) hb_ot_map_t::stage_map_t::pause_func_t -->
            <typedef-decl name='pause_func_t' type-id='type-id-1057' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='68' column='1' id='type-id-1056'/>
          </member-type>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- unsigned int hb_ot_map_t::stage_map_t::last_lookup -->
            <var-decl name='last_lookup' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='71' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- hb_ot_map_t::stage_map_t::pause_func_t hb_ot_map_t::stage_map_t::pause_func -->
            <var-decl name='pause_func' type-id='type-id-1056' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='72' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_tag_t hb_ot_map_t::chosen_script[2] -->
        <var-decl name='chosen_script' type-id='type-id-1026' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='137' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- bool hb_ot_map_t::found_script[2] -->
        <var-decl name='found_script' type-id='type-id-1013' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='138' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- hb_mask_t hb_ot_map_t::global_mask -->
        <var-decl name='global_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='148' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u> hb_ot_map_t::features -->
        <var-decl name='features' type-id='type-id-1058' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='150' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2560'>
        <!-- hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u> hb_ot_map_t::lookups[2] -->
        <var-decl name='lookups' type-id='type-id-1023' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='151' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='6912'>
        <!-- hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u> hb_ot_map_t::stages[2] -->
        <var-decl name='stages' type-id='type-id-1025' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='152' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_map_t::apply<GSUBProxy>(const GSUBProxy&, const hb_ot_shape_plan_t*, hb_font_t*, hb_buffer_t*) -->
        <function-decl name='apply&lt;GSUBProxy&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='902' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_ot_map_t*' -->
          <parameter type-id='type-id-1060' is-artificial='yes'/>
          <!-- parameter of type 'const GSUBProxy&' -->
          <parameter type-id='type-id-1061'/>
          <!-- parameter of type 'const hb_ot_shape_plan_t*' -->
          <parameter type-id='type-id-1062'/>
          <!-- parameter of type 'hb_font_t*' -->
          <parameter type-id='type-id-158'/>
          <!-- parameter of type 'hb_buffer_t*' -->
          <parameter type-id='type-id-155'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_map_t::apply<GPOSProxy>(const GPOSProxy&, const hb_ot_shape_plan_t*, hb_font_t*, hb_buffer_t*) -->
        <function-decl name='apply&lt;GPOSProxy&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='902' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_ot_map_t*' -->
          <parameter type-id='type-id-1060' is-artificial='yes'/>
          <!-- parameter of type 'const GPOSProxy&' -->
          <parameter type-id='type-id-1063'/>
          <!-- parameter of type 'const hb_ot_shape_plan_t*' -->
          <parameter type-id='type-id-1062'/>
          <!-- parameter of type 'hb_font_t*' -->
          <parameter type-id='type-id-158'/>
          <!-- parameter of type 'hb_buffer_t*' -->
          <parameter type-id='type-id-155'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_map_t::apply<GSUBProxy>(const GSUBProxy&, const hb_ot_shape_plan_t*, hb_font_t*, hb_buffer_t*) -->
        <function-decl name='apply&lt;GSUBProxy&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='902' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_ot_map_t* const' -->
          <parameter type-id='type-id-1064' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const GSUBProxy&' -->
          <parameter type-id='type-id-1061' name='proxy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='902' column='1'/>
          <!-- parameter of type 'const hb_ot_shape_plan_t*' -->
          <parameter type-id='type-id-1062' name='plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='903' column='1'/>
          <!-- parameter of type 'hb_font_t*' -->
          <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='904' column='1'/>
          <!-- parameter of type 'hb_buffer_t*' -->
          <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='905' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void hb_ot_map_t::apply<GPOSProxy>(const GPOSProxy&, const hb_ot_shape_plan_t*, hb_font_t*, hb_buffer_t*) -->
        <function-decl name='apply&lt;GPOSProxy&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='902' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_ot_map_t* const' -->
          <parameter type-id='type-id-1064' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const GPOSProxy&' -->
          <parameter type-id='type-id-1063' name='proxy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='902' column='1'/>
          <!-- parameter of type 'const hb_ot_shape_plan_t*' -->
          <parameter type-id='type-id-1062' name='plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='903' column='1'/>
          <!-- parameter of type 'hb_font_t*' -->
          <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='904' column='1'/>
          <!-- parameter of type 'hb_buffer_t*' -->
          <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='905' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t* const' -->
          <parameter type-id='type-id-1065' name='this' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_t::hb_ot_map_t() -->
        <function-decl name='hb_ot_map_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_t*' -->
          <parameter type-id='type-id-1059' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u> -->
    <class-decl name='hb_prealloced_array_t&lt;hb_ot_map_t::feature_map_t, 8u&gt;' size-in-bits='2432' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='329' column='1' id='type-id-1058'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::array -->
        <var-decl name='array' type-id='type-id-1066' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_ot_map_t::feature_map_t hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::static_array[8] -->
        <var-decl name='static_array' type-id='type-id-1016' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='333' column='1'/>
      </data-member>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>*' -->
          <parameter type-id='type-id-1067' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* const' -->
          <parameter type-id='type-id-1070' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>*' -->
          <parameter type-id='type-id-1067' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* const' -->
          <parameter type-id='type-id-1070' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>*' -->
          <parameter type-id='type-id-1067' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* const' -->
          <parameter type-id='type-id-1070' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>*' -->
          <parameter type-id='type-id-1067' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- const hb_ot_map_t::feature_map_t* hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>::bsearch<hb_tag_t>(hb_tag_t*) -->
        <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* const' -->
          <parameter type-id='type-id-1070' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_tag_t*' -->
          <parameter type-id='type-id-1068' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='424' column='1'/>
          <!-- const hb_ot_map_t::feature_map_t* -->
          <return type-id='type-id-1069'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u> -->
    <class-decl name='hb_prealloced_array_t&lt;hb_ot_map_t::lookup_map_t, 32u&gt;' size-in-bits='2176' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='329' column='1' id='type-id-1022'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>::allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_ot_map_t::lookup_map_t* hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>::array -->
        <var-decl name='array' type-id='type-id-1071' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_ot_map_t::lookup_map_t hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>::static_array[32] -->
        <var-decl name='static_array' type-id='type-id-1018' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='333' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u> -->
    <class-decl name='hb_prealloced_array_t&lt;hb_ot_map_t::stage_map_t, 4u&gt;' size-in-bits='640' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='329' column='1' id='type-id-1024'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>::allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_ot_map_t::stage_map_t* hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>::array -->
        <var-decl name='array' type-id='type-id-1072' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_ot_map_t::stage_map_t hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>::static_array[4] -->
        <var-decl name='static_array' type-id='type-id-1021' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='333' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > -->
    <class-decl name='hb_set_digest_combiner_t&lt;hb_set_digest_lowest_bits_t&lt;long unsigned int, 0u&gt;, hb_set_digest_lowest_bits_t&lt;long unsigned int, 9u&gt; &gt;' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='92' column='1' id='type-id-1073'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- hb_set_digest_lowest_bits_t<long unsigned int, 0u> hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> >::head -->
        <var-decl name='head' type-id='type-id-1074' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='115' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- hb_set_digest_lowest_bits_t<long unsigned int, 9u> hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> >::tail -->
        <var-decl name='tail' type-id='type-id-1075' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='116' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > > -->
    <class-decl name='hb_set_digest_combiner_t&lt;hb_set_digest_lowest_bits_t&lt;long unsigned int, 4u&gt;, hb_set_digest_combiner_t&lt;hb_set_digest_lowest_bits_t&lt;long unsigned int, 0u&gt;, hb_set_digest_lowest_bits_t&lt;long unsigned int, 9u&gt; &gt; &gt;' size-in-bits='192' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='92' column='1' id='type-id-1076'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- hb_set_digest_lowest_bits_t<long unsigned int, 4u> hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > >::head -->
        <var-decl name='head' type-id='type-id-1077' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='115' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > >::tail -->
        <var-decl name='tail' type-id='type-id-1073' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='116' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_set_digest_lowest_bits_t<long unsigned int, 0u> -->
    <class-decl name='hb_set_digest_lowest_bits_t&lt;long unsigned int, 0u&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='44' column='1' id='type-id-1074'>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 0u>::mask_bytes -->
        <var-decl name='mask_bytes' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='47' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 0u>::mask_bits -->
        <var-decl name='mask_bits' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='48' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 0u>::num_bits -->
        <var-decl name='num_bits' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='55' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- unsigned long int hb_set_digest_lowest_bits_t<long unsigned int, 0u>::mask -->
        <var-decl name='mask' type-id='type-id-4' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='87' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_set_digest_lowest_bits_t<long unsigned int, 4u> -->
    <class-decl name='hb_set_digest_lowest_bits_t&lt;long unsigned int, 4u&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='44' column='1' id='type-id-1077'>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 4u>::mask_bytes -->
        <var-decl name='mask_bytes' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='47' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 4u>::mask_bits -->
        <var-decl name='mask_bits' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='48' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 4u>::num_bits -->
        <var-decl name='num_bits' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='55' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- unsigned long int hb_set_digest_lowest_bits_t<long unsigned int, 4u>::mask -->
        <var-decl name='mask' type-id='type-id-4' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='87' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_set_digest_lowest_bits_t<long unsigned int, 9u> -->
    <class-decl name='hb_set_digest_lowest_bits_t&lt;long unsigned int, 9u&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='44' column='1' id='type-id-1075'>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 9u>::mask_bytes -->
        <var-decl name='mask_bytes' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='47' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 9u>::mask_bits -->
        <var-decl name='mask_bits' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='48' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_digest_lowest_bits_t<long unsigned int, 9u>::num_bits -->
        <var-decl name='num_bits' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='55' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- unsigned long int hb_set_digest_lowest_bits_t<long unsigned int, 9u>::mask -->
        <var-decl name='mask' type-id='type-id-4' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='87' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > > hb_set_digest_t -->
    <typedef-decl name='hb_set_digest_t' type-id='type-id-1076' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='135' column='1' id='type-id-1049'/>
    <!-- typedef const _hb_void_t& hb_void_t -->
    <typedef-decl name='hb_void_t' type-id='type-id-1078' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='259' column='1' id='type-id-1079'/>
    <!-- void*[3] -->
    <array-type-def dimensions='1' type-id='type-id-19' id='type-id-1080'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' lower-bound='0' upper-bound='2' type-id='type-id-4' id='type-id-734'/>
    </array-type-def>
    <!-- GPOSProxy* -->
    <pointer-type-def type-id='type-id-1027' size-in-bits='64' id='type-id-1033'/>
    <!-- GPOSProxy* const -->
    <qualified-type-def type-id='type-id-1033' const='yes' id='type-id-1034'/>
    <!-- GSUBProxy* -->
    <pointer-type-def type-id='type-id-1035' size-in-bits='64' id='type-id-1039'/>
    <!-- GSUBProxy* const -->
    <qualified-type-def type-id='type-id-1039' const='yes' id='type-id-1040'/>
    <!-- OT::AlternateSubst* -->
    <pointer-type-def type-id='type-id-1081' size-in-bits='64' id='type-id-1082'/>
    <!-- OT::AlternateSubst* const -->
    <qualified-type-def type-id='type-id-1082' const='yes' id='type-id-1083'/>
    <!-- OT::AlternateSubstFormat1* -->
    <pointer-type-def type-id='type-id-1084' size-in-bits='64' id='type-id-1085'/>
    <!-- OT::AlternateSubstFormat1* const -->
    <qualified-type-def type-id='type-id-1085' const='yes' id='type-id-1086'/>
    <!-- OT::Anchor& -->
    <reference-type-def kind='lvalue' type-id='type-id-1087' size-in-bits='64' id='type-id-1088'/>
    <!-- OT::Anchor* -->
    <pointer-type-def type-id='type-id-1087' size-in-bits='64' id='type-id-1089'/>
    <!-- OT::Anchor* const -->
    <qualified-type-def type-id='type-id-1089' const='yes' id='type-id-1090'/>
    <!-- OT::AnchorFormat1* -->
    <pointer-type-def type-id='type-id-1091' size-in-bits='64' id='type-id-1092'/>
    <!-- OT::AnchorFormat1* const -->
    <qualified-type-def type-id='type-id-1092' const='yes' id='type-id-1093'/>
    <!-- OT::AnchorFormat2* -->
    <pointer-type-def type-id='type-id-1094' size-in-bits='64' id='type-id-1095'/>
    <!-- OT::AnchorFormat2* const -->
    <qualified-type-def type-id='type-id-1095' const='yes' id='type-id-1096'/>
    <!-- OT::AnchorFormat3* -->
    <pointer-type-def type-id='type-id-1097' size-in-bits='64' id='type-id-1098'/>
    <!-- OT::AnchorFormat3* const -->
    <qualified-type-def type-id='type-id-1098' const='yes' id='type-id-1099'/>
    <!-- OT::AnchorMatrix& -->
    <reference-type-def kind='lvalue' type-id='type-id-1100' size-in-bits='64' id='type-id-1101'/>
    <!-- OT::AnchorMatrix* -->
    <pointer-type-def type-id='type-id-1100' size-in-bits='64' id='type-id-1102'/>
    <!-- OT::AnchorMatrix* const -->
    <qualified-type-def type-id='type-id-1102' const='yes' id='type-id-1103'/>
    <!-- OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1104' size-in-bits='64' id='type-id-1105'/>
    <!-- OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1105' const='yes' id='type-id-1106'/>
    <!-- OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1107' size-in-bits='64' id='type-id-1108'/>
    <!-- OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1108' const='yes' id='type-id-1109'/>
    <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-741' size-in-bits='64' id='type-id-599'/>
    <!-- OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1110' size-in-bits='64' id='type-id-1111'/>
    <!-- OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1111' const='yes' id='type-id-1112'/>
    <!-- OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1113' size-in-bits='64' id='type-id-1114'/>
    <!-- OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1114' const='yes' id='type-id-1115'/>
    <!-- OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1116' size-in-bits='64' id='type-id-1117'/>
    <!-- OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1117' const='yes' id='type-id-1118'/>
    <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1119' size-in-bits='64' id='type-id-583'/>
    <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-583' const='yes' id='type-id-1120'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1121' size-in-bits='64' id='type-id-1122'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1122' const='yes' id='type-id-1123'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1124' size-in-bits='64' id='type-id-1125'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1125' const='yes' id='type-id-1126'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1127' size-in-bits='64' id='type-id-1128'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1128' const='yes' id='type-id-1129'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1130' size-in-bits='64' id='type-id-1131'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1131' const='yes' id='type-id-1132'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1133' size-in-bits='64' id='type-id-1134'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1134' const='yes' id='type-id-1135'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1136' size-in-bits='64' id='type-id-1137'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1137' const='yes' id='type-id-1138'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1139' size-in-bits='64' id='type-id-1140'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1140' const='yes' id='type-id-1141'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1142' size-in-bits='64' id='type-id-1143'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1143' const='yes' id='type-id-1144'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1145' size-in-bits='64' id='type-id-604'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-604' const='yes' id='type-id-1146'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1147' size-in-bits='64' id='type-id-602'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-602' const='yes' id='type-id-1148'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1149' size-in-bits='64' id='type-id-1150'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1150' const='yes' id='type-id-1151'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1152' size-in-bits='64' id='type-id-1153'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1153' const='yes' id='type-id-1154'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1155' size-in-bits='64' id='type-id-1156'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1156' const='yes' id='type-id-1157'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1158' size-in-bits='64' id='type-id-1159'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1159' const='yes' id='type-id-1160'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1161' size-in-bits='64' id='type-id-1162'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1162' const='yes' id='type-id-1163'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1164' size-in-bits='64' id='type-id-1165'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1165' const='yes' id='type-id-1166'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1167' size-in-bits='64' id='type-id-1168'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1168' const='yes' id='type-id-1169'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1170' size-in-bits='64' id='type-id-1171'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1171' const='yes' id='type-id-1172'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1173' size-in-bits='64' id='type-id-1174'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1174' const='yes' id='type-id-1175'/>
    <!-- OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1176' size-in-bits='64' id='type-id-1177'/>
    <!-- OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1177' const='yes' id='type-id-1178'/>
    <!-- OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1179' size-in-bits='64' id='type-id-1180'/>
    <!-- OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1180' const='yes' id='type-id-1181'/>
    <!-- OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1182' size-in-bits='64' id='type-id-1183'/>
    <!-- OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1183' const='yes' id='type-id-1184'/>
    <!-- OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1185' size-in-bits='64' id='type-id-1186'/>
    <!-- OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1186' const='yes' id='type-id-1187'/>
    <!-- OT::AttachList& -->
    <reference-type-def kind='lvalue' type-id='type-id-1188' size-in-bits='64' id='type-id-1189'/>
    <!-- OT::AttachList* -->
    <pointer-type-def type-id='type-id-1188' size-in-bits='64' id='type-id-1190'/>
    <!-- OT::AttachList* const -->
    <qualified-type-def type-id='type-id-1190' const='yes' id='type-id-1191'/>
    <!-- OT::CaretValue& -->
    <reference-type-def kind='lvalue' type-id='type-id-1192' size-in-bits='64' id='type-id-1193'/>
    <!-- OT::CaretValue* -->
    <pointer-type-def type-id='type-id-1192' size-in-bits='64' id='type-id-1194'/>
    <!-- OT::CaretValue* const -->
    <qualified-type-def type-id='type-id-1194' const='yes' id='type-id-1195'/>
    <!-- OT::CaretValueFormat1* -->
    <pointer-type-def type-id='type-id-1196' size-in-bits='64' id='type-id-1197'/>
    <!-- OT::CaretValueFormat1* const -->
    <qualified-type-def type-id='type-id-1197' const='yes' id='type-id-1198'/>
    <!-- OT::CaretValueFormat2* -->
    <pointer-type-def type-id='type-id-1199' size-in-bits='64' id='type-id-1200'/>
    <!-- OT::CaretValueFormat2* const -->
    <qualified-type-def type-id='type-id-1200' const='yes' id='type-id-1201'/>
    <!-- OT::CaretValueFormat3* -->
    <pointer-type-def type-id='type-id-1202' size-in-bits='64' id='type-id-1203'/>
    <!-- OT::CaretValueFormat3* const -->
    <qualified-type-def type-id='type-id-1203' const='yes' id='type-id-1204'/>
    <!-- OT::ChainContext* -->
    <pointer-type-def type-id='type-id-1205' size-in-bits='64' id='type-id-1206'/>
    <!-- OT::ChainContext* const -->
    <qualified-type-def type-id='type-id-1206' const='yes' id='type-id-1207'/>
    <!-- OT::ChainContextApplyLookupContext& -->
    <reference-type-def kind='lvalue' type-id='type-id-1208' size-in-bits='64' id='type-id-1209'/>
    <!-- OT::ChainContextClosureLookupContext& -->
    <reference-type-def kind='lvalue' type-id='type-id-1210' size-in-bits='64' id='type-id-1211'/>
    <!-- OT::ChainContextCollectGlyphsLookupContext& -->
    <reference-type-def kind='lvalue' type-id='type-id-1212' size-in-bits='64' id='type-id-1213'/>
    <!-- OT::ChainContextFormat1* -->
    <pointer-type-def type-id='type-id-1214' size-in-bits='64' id='type-id-1215'/>
    <!-- OT::ChainContextFormat1* const -->
    <qualified-type-def type-id='type-id-1215' const='yes' id='type-id-1216'/>
    <!-- OT::ChainContextFormat2* -->
    <pointer-type-def type-id='type-id-1217' size-in-bits='64' id='type-id-1218'/>
    <!-- OT::ChainContextFormat2* const -->
    <qualified-type-def type-id='type-id-1218' const='yes' id='type-id-1219'/>
    <!-- OT::ChainContextFormat3* -->
    <pointer-type-def type-id='type-id-1220' size-in-bits='64' id='type-id-1221'/>
    <!-- OT::ChainContextFormat3* const -->
    <qualified-type-def type-id='type-id-1221' const='yes' id='type-id-1222'/>
    <!-- OT::ChainRule& -->
    <reference-type-def kind='lvalue' type-id='type-id-1223' size-in-bits='64' id='type-id-1224'/>
    <!-- OT::ChainRule* -->
    <pointer-type-def type-id='type-id-1223' size-in-bits='64' id='type-id-1225'/>
    <!-- OT::ChainRule* const -->
    <qualified-type-def type-id='type-id-1225' const='yes' id='type-id-1226'/>
    <!-- OT::ChainRuleSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-1227' size-in-bits='64' id='type-id-1228'/>
    <!-- OT::ChainRuleSet* -->
    <pointer-type-def type-id='type-id-1227' size-in-bits='64' id='type-id-1229'/>
    <!-- OT::ChainRuleSet* const -->
    <qualified-type-def type-id='type-id-1229' const='yes' id='type-id-1230'/>
    <!-- OT::ClassDef& -->
    <reference-type-def kind='lvalue' type-id='type-id-1231' size-in-bits='64' id='type-id-1232'/>
    <!-- OT::ClassDef* -->
    <pointer-type-def type-id='type-id-1231' size-in-bits='64' id='type-id-1233'/>
    <!-- OT::ClassDef* const -->
    <qualified-type-def type-id='type-id-1233' const='yes' id='type-id-1234'/>
    <!-- OT::ClassDefFormat1* -->
    <pointer-type-def type-id='type-id-1235' size-in-bits='64' id='type-id-1236'/>
    <!-- OT::ClassDefFormat1* const -->
    <qualified-type-def type-id='type-id-1236' const='yes' id='type-id-1237'/>
    <!-- OT::ClassDefFormat2* -->
    <pointer-type-def type-id='type-id-1238' size-in-bits='64' id='type-id-1239'/>
    <!-- OT::ClassDefFormat2* const -->
    <qualified-type-def type-id='type-id-1239' const='yes' id='type-id-1240'/>
    <!-- OT::Context* -->
    <pointer-type-def type-id='type-id-1241' size-in-bits='64' id='type-id-1242'/>
    <!-- OT::Context* const -->
    <qualified-type-def type-id='type-id-1242' const='yes' id='type-id-1243'/>
    <!-- OT::ContextApplyLookupContext& -->
    <reference-type-def kind='lvalue' type-id='type-id-1244' size-in-bits='64' id='type-id-1245'/>
    <!-- OT::ContextClosureLookupContext& -->
    <reference-type-def kind='lvalue' type-id='type-id-1246' size-in-bits='64' id='type-id-1247'/>
    <!-- OT::ContextCollectGlyphsLookupContext& -->
    <reference-type-def kind='lvalue' type-id='type-id-1248' size-in-bits='64' id='type-id-1249'/>
    <!-- OT::ContextFormat1* -->
    <pointer-type-def type-id='type-id-1250' size-in-bits='64' id='type-id-1251'/>
    <!-- OT::ContextFormat1* const -->
    <qualified-type-def type-id='type-id-1251' const='yes' id='type-id-1252'/>
    <!-- OT::ContextFormat2* -->
    <pointer-type-def type-id='type-id-1253' size-in-bits='64' id='type-id-1254'/>
    <!-- OT::ContextFormat2* const -->
    <qualified-type-def type-id='type-id-1254' const='yes' id='type-id-1255'/>
    <!-- OT::ContextFormat3* -->
    <pointer-type-def type-id='type-id-1256' size-in-bits='64' id='type-id-1257'/>
    <!-- OT::ContextFormat3* const -->
    <qualified-type-def type-id='type-id-1257' const='yes' id='type-id-1258'/>
    <!-- OT::Coverage& -->
    <reference-type-def kind='lvalue' type-id='type-id-1259' size-in-bits='64' id='type-id-595'/>
    <!-- OT::Coverage* -->
    <pointer-type-def type-id='type-id-1259' size-in-bits='64' id='type-id-577'/>
    <!-- OT::Coverage* const -->
    <qualified-type-def type-id='type-id-577' const='yes' id='type-id-1260'/>
    <!-- OT::Coverage::Iter* -->
    <pointer-type-def type-id='type-id-1261' size-in-bits='64' id='type-id-1262'/>
    <!-- OT::Coverage::Iter* const -->
    <qualified-type-def type-id='type-id-1262' const='yes' id='type-id-1263'/>
    <!-- OT::CoverageFormat1* -->
    <pointer-type-def type-id='type-id-1264' size-in-bits='64' id='type-id-587'/>
    <!-- OT::CoverageFormat1* const -->
    <qualified-type-def type-id='type-id-587' const='yes' id='type-id-1265'/>
    <!-- OT::CoverageFormat1::Iter* -->
    <pointer-type-def type-id='type-id-1266' size-in-bits='64' id='type-id-1267'/>
    <!-- OT::CoverageFormat1::Iter* const -->
    <qualified-type-def type-id='type-id-1267' const='yes' id='type-id-1268'/>
    <!-- OT::CoverageFormat2* -->
    <pointer-type-def type-id='type-id-1269' size-in-bits='64' id='type-id-591'/>
    <!-- OT::CoverageFormat2* const -->
    <qualified-type-def type-id='type-id-591' const='yes' id='type-id-1270'/>
    <!-- OT::CoverageFormat2::Iter* -->
    <pointer-type-def type-id='type-id-1271' size-in-bits='64' id='type-id-1272'/>
    <!-- OT::CoverageFormat2::Iter* const -->
    <qualified-type-def type-id='type-id-1272' const='yes' id='type-id-1273'/>
    <!-- OT::CursivePos* -->
    <pointer-type-def type-id='type-id-1274' size-in-bits='64' id='type-id-1275'/>
    <!-- OT::CursivePos* const -->
    <qualified-type-def type-id='type-id-1275' const='yes' id='type-id-1276'/>
    <!-- OT::CursivePosFormat1* -->
    <pointer-type-def type-id='type-id-1277' size-in-bits='64' id='type-id-1278'/>
    <!-- OT::CursivePosFormat1* const -->
    <qualified-type-def type-id='type-id-1278' const='yes' id='type-id-1279'/>
    <!-- OT::Device& -->
    <reference-type-def kind='lvalue' type-id='type-id-1280' size-in-bits='64' id='type-id-1281'/>
    <!-- OT::Device* -->
    <pointer-type-def type-id='type-id-1280' size-in-bits='64' id='type-id-1282'/>
    <!-- OT::Device* const -->
    <qualified-type-def type-id='type-id-1282' const='yes' id='type-id-1283'/>
    <!-- OT::EntryExitRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-950' size-in-bits='64' id='type-id-1284'/>
    <!-- OT::EntryExitRecord* -->
    <pointer-type-def type-id='type-id-950' size-in-bits='64' id='type-id-1285'/>
    <!-- OT::EntryExitRecord* const -->
    <qualified-type-def type-id='type-id-1285' const='yes' id='type-id-1286'/>
    <!-- OT::Extension<OT::ExtensionPos>* -->
    <pointer-type-def type-id='type-id-1287' size-in-bits='64' id='type-id-1288'/>
    <!-- OT::Extension<OT::ExtensionPos>* const -->
    <qualified-type-def type-id='type-id-1288' const='yes' id='type-id-1289'/>
    <!-- OT::Extension<OT::ExtensionSubst>* -->
    <pointer-type-def type-id='type-id-1290' size-in-bits='64' id='type-id-1291'/>
    <!-- OT::Extension<OT::ExtensionSubst>* const -->
    <qualified-type-def type-id='type-id-1291' const='yes' id='type-id-1292'/>
    <!-- OT::ExtensionFormat1* -->
    <pointer-type-def type-id='type-id-1293' size-in-bits='64' id='type-id-1294'/>
    <!-- OT::ExtensionFormat1* const -->
    <qualified-type-def type-id='type-id-1294' const='yes' id='type-id-1295'/>
    <!-- OT::Feature& -->
    <reference-type-def kind='lvalue' type-id='type-id-1296' size-in-bits='64' id='type-id-1297'/>
    <!-- OT::Feature* -->
    <pointer-type-def type-id='type-id-1296' size-in-bits='64' id='type-id-1298'/>
    <!-- OT::Feature* const -->
    <qualified-type-def type-id='type-id-1298' const='yes' id='type-id-1299'/>
    <!-- OT::FeatureParams& -->
    <reference-type-def kind='lvalue' type-id='type-id-1300' size-in-bits='64' id='type-id-1301'/>
    <!-- OT::FeatureParams* -->
    <pointer-type-def type-id='type-id-1300' size-in-bits='64' id='type-id-1302'/>
    <!-- OT::FeatureParams* const -->
    <qualified-type-def type-id='type-id-1302' const='yes' id='type-id-1303'/>
    <!-- OT::FeatureParamsCharacterVariants* -->
    <pointer-type-def type-id='type-id-1304' size-in-bits='64' id='type-id-1305'/>
    <!-- OT::FeatureParamsCharacterVariants* const -->
    <qualified-type-def type-id='type-id-1305' const='yes' id='type-id-1306'/>
    <!-- OT::FeatureParamsSize* -->
    <pointer-type-def type-id='type-id-1307' size-in-bits='64' id='type-id-1308'/>
    <!-- OT::FeatureParamsSize* const -->
    <qualified-type-def type-id='type-id-1308' const='yes' id='type-id-1309'/>
    <!-- OT::FeatureParamsStylisticSet* -->
    <pointer-type-def type-id='type-id-1310' size-in-bits='64' id='type-id-1311'/>
    <!-- OT::FeatureParamsStylisticSet* const -->
    <qualified-type-def type-id='type-id-1311' const='yes' id='type-id-1312'/>
    <!-- OT::GDEF* -->
    <pointer-type-def type-id='type-id-1313' size-in-bits='64' id='type-id-1314'/>
    <!-- OT::GDEF* const -->
    <qualified-type-def type-id='type-id-1314' const='yes' id='type-id-1315'/>
    <!-- OT::GPOS* -->
    <pointer-type-def type-id='type-id-1316' size-in-bits='64' id='type-id-1317'/>
    <!-- OT::GPOS* const -->
    <qualified-type-def type-id='type-id-1317' const='yes' id='type-id-1318'/>
    <!-- OT::GSUB* -->
    <pointer-type-def type-id='type-id-1319' size-in-bits='64' id='type-id-1320'/>
    <!-- OT::GSUB* const -->
    <qualified-type-def type-id='type-id-1320' const='yes' id='type-id-1321'/>
    <!-- OT::GSUBGPOS* -->
    <pointer-type-def type-id='type-id-1322' size-in-bits='64' id='type-id-1323'/>
    <!-- OT::GSUBGPOS* const -->
    <qualified-type-def type-id='type-id-1323' const='yes' id='type-id-1324'/>
    <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1325' size-in-bits='64' id='type-id-606'/>
    <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-606' const='yes' id='type-id-1326'/>
    <!-- OT::Index& -->
    <reference-type-def kind='lvalue' type-id='type-id-952' size-in-bits='64' id='type-id-1327'/>
    <!-- OT::IntType<short int, 2u>* const -->
    <qualified-type-def type-id='type-id-268' const='yes' id='type-id-1328'/>
    <!-- OT::IntType<unsigned int, 3u>& -->
    <reference-type-def kind='lvalue' type-id='type-id-790' size-in-bits='64' id='type-id-1329'/>
    <!-- OT::LangSys& -->
    <reference-type-def kind='lvalue' type-id='type-id-1330' size-in-bits='64' id='type-id-1331'/>
    <!-- OT::LangSys* -->
    <pointer-type-def type-id='type-id-1330' size-in-bits='64' id='type-id-1332'/>
    <!-- OT::LangSys* const -->
    <qualified-type-def type-id='type-id-1332' const='yes' id='type-id-1333'/>
    <!-- OT::LigCaretList& -->
    <reference-type-def kind='lvalue' type-id='type-id-1334' size-in-bits='64' id='type-id-1335'/>
    <!-- OT::LigCaretList* -->
    <pointer-type-def type-id='type-id-1334' size-in-bits='64' id='type-id-1336'/>
    <!-- OT::LigCaretList* const -->
    <qualified-type-def type-id='type-id-1336' const='yes' id='type-id-1337'/>
    <!-- OT::LigGlyph& -->
    <reference-type-def kind='lvalue' type-id='type-id-1338' size-in-bits='64' id='type-id-1339'/>
    <!-- OT::LigGlyph* -->
    <pointer-type-def type-id='type-id-1338' size-in-bits='64' id='type-id-1340'/>
    <!-- OT::LigGlyph* const -->
    <qualified-type-def type-id='type-id-1340' const='yes' id='type-id-1341'/>
    <!-- OT::Ligature& -->
    <reference-type-def kind='lvalue' type-id='type-id-1342' size-in-bits='64' id='type-id-608'/>
    <!-- OT::Ligature* -->
    <pointer-type-def type-id='type-id-1342' size-in-bits='64' id='type-id-578'/>
    <!-- OT::Ligature* const -->
    <qualified-type-def type-id='type-id-578' const='yes' id='type-id-1343'/>
    <!-- OT::LigatureSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-1344' size-in-bits='64' id='type-id-609'/>
    <!-- OT::LigatureSet* -->
    <pointer-type-def type-id='type-id-1344' size-in-bits='64' id='type-id-579'/>
    <!-- OT::LigatureSet* const -->
    <qualified-type-def type-id='type-id-579' const='yes' id='type-id-1345'/>
    <!-- OT::LigatureSubst* -->
    <pointer-type-def type-id='type-id-1346' size-in-bits='64' id='type-id-1347'/>
    <!-- OT::LigatureSubst* const -->
    <qualified-type-def type-id='type-id-1347' const='yes' id='type-id-1348'/>
    <!-- OT::LigatureSubstFormat1* -->
    <pointer-type-def type-id='type-id-1349' size-in-bits='64' id='type-id-601'/>
    <!-- OT::LigatureSubstFormat1* const -->
    <qualified-type-def type-id='type-id-601' const='yes' id='type-id-1350'/>
    <!-- OT::Lookup& -->
    <reference-type-def kind='lvalue' type-id='type-id-1351' size-in-bits='64' id='type-id-585'/>
    <!-- OT::Lookup* -->
    <pointer-type-def type-id='type-id-1351' size-in-bits='64' id='type-id-582'/>
    <!-- OT::Lookup* const -->
    <qualified-type-def type-id='type-id-582' const='yes' id='type-id-1352'/>
    <!-- OT::LookupRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-955' size-in-bits='64' id='type-id-1353'/>
    <!-- OT::LookupRecord* -->
    <pointer-type-def type-id='type-id-955' size-in-bits='64' id='type-id-1354'/>
    <!-- OT::MarkArray& -->
    <reference-type-def kind='lvalue' type-id='type-id-1355' size-in-bits='64' id='type-id-1356'/>
    <!-- OT::MarkArray* -->
    <pointer-type-def type-id='type-id-1355' size-in-bits='64' id='type-id-1357'/>
    <!-- OT::MarkArray* const -->
    <qualified-type-def type-id='type-id-1357' const='yes' id='type-id-1358'/>
    <!-- OT::MarkBasePos* -->
    <pointer-type-def type-id='type-id-1359' size-in-bits='64' id='type-id-1360'/>
    <!-- OT::MarkBasePos* const -->
    <qualified-type-def type-id='type-id-1360' const='yes' id='type-id-1361'/>
    <!-- OT::MarkBasePosFormat1* -->
    <pointer-type-def type-id='type-id-1362' size-in-bits='64' id='type-id-1363'/>
    <!-- OT::MarkBasePosFormat1* const -->
    <qualified-type-def type-id='type-id-1363' const='yes' id='type-id-1364'/>
    <!-- OT::MarkGlyphSets& -->
    <reference-type-def kind='lvalue' type-id='type-id-1365' size-in-bits='64' id='type-id-1366'/>
    <!-- OT::MarkGlyphSets* -->
    <pointer-type-def type-id='type-id-1365' size-in-bits='64' id='type-id-1367'/>
    <!-- OT::MarkGlyphSets* const -->
    <qualified-type-def type-id='type-id-1367' const='yes' id='type-id-1368'/>
    <!-- OT::MarkGlyphSetsFormat1* -->
    <pointer-type-def type-id='type-id-1369' size-in-bits='64' id='type-id-1370'/>
    <!-- OT::MarkGlyphSetsFormat1* const -->
    <qualified-type-def type-id='type-id-1370' const='yes' id='type-id-1371'/>
    <!-- OT::MarkLigPos* -->
    <pointer-type-def type-id='type-id-1372' size-in-bits='64' id='type-id-1373'/>
    <!-- OT::MarkLigPos* const -->
    <qualified-type-def type-id='type-id-1373' const='yes' id='type-id-1374'/>
    <!-- OT::MarkLigPosFormat1* -->
    <pointer-type-def type-id='type-id-1375' size-in-bits='64' id='type-id-1376'/>
    <!-- OT::MarkLigPosFormat1* const -->
    <qualified-type-def type-id='type-id-1376' const='yes' id='type-id-1377'/>
    <!-- OT::MarkMarkPos* -->
    <pointer-type-def type-id='type-id-1378' size-in-bits='64' id='type-id-1379'/>
    <!-- OT::MarkMarkPos* const -->
    <qualified-type-def type-id='type-id-1379' const='yes' id='type-id-1380'/>
    <!-- OT::MarkMarkPosFormat1* -->
    <pointer-type-def type-id='type-id-1381' size-in-bits='64' id='type-id-1382'/>
    <!-- OT::MarkMarkPosFormat1* const -->
    <qualified-type-def type-id='type-id-1382' const='yes' id='type-id-1383'/>
    <!-- OT::MarkRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-957' size-in-bits='64' id='type-id-1384'/>
    <!-- OT::MarkRecord* -->
    <pointer-type-def type-id='type-id-957' size-in-bits='64' id='type-id-1385'/>
    <!-- OT::MarkRecord* const -->
    <qualified-type-def type-id='type-id-1385' const='yes' id='type-id-1386'/>
    <!-- OT::MultipleSubst* -->
    <pointer-type-def type-id='type-id-1387' size-in-bits='64' id='type-id-1388'/>
    <!-- OT::MultipleSubst* const -->
    <qualified-type-def type-id='type-id-1388' const='yes' id='type-id-1389'/>
    <!-- OT::MultipleSubstFormat1* -->
    <pointer-type-def type-id='type-id-1390' size-in-bits='64' id='type-id-1391'/>
    <!-- OT::MultipleSubstFormat1* const -->
    <qualified-type-def type-id='type-id-1391' const='yes' id='type-id-1392'/>
    <!-- OT::Offset<OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-959' size-in-bits='64' id='type-id-1393'/>
    <!-- OT::OffsetListOf<OT::AnchorMatrix>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1394' size-in-bits='64' id='type-id-1395'/>
    <!-- OT::OffsetListOf<OT::AnchorMatrix>* -->
    <pointer-type-def type-id='type-id-1394' size-in-bits='64' id='type-id-1396'/>
    <!-- OT::OffsetListOf<OT::AnchorMatrix>* const -->
    <qualified-type-def type-id='type-id-1396' const='yes' id='type-id-1397'/>
    <!-- OT::OffsetListOf<OT::Lookup>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1398' size-in-bits='64' id='type-id-1399'/>
    <!-- OT::OffsetListOf<OT::Lookup>* -->
    <pointer-type-def type-id='type-id-1398' size-in-bits='64' id='type-id-1400'/>
    <!-- OT::OffsetListOf<OT::Lookup>* const -->
    <qualified-type-def type-id='type-id-1400' const='yes' id='type-id-1401'/>
    <!-- OT::OffsetListOf<OT::PosLookup>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1402' size-in-bits='64' id='type-id-1403'/>
    <!-- OT::OffsetListOf<OT::PosLookup>* -->
    <pointer-type-def type-id='type-id-1402' size-in-bits='64' id='type-id-1404'/>
    <!-- OT::OffsetListOf<OT::PosLookup>* const -->
    <qualified-type-def type-id='type-id-1404' const='yes' id='type-id-1405'/>
    <!-- OT::OffsetListOf<OT::SubstLookup>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1406' size-in-bits='64' id='type-id-1407'/>
    <!-- OT::OffsetListOf<OT::SubstLookup>* -->
    <pointer-type-def type-id='type-id-1406' size-in-bits='64' id='type-id-1408'/>
    <!-- OT::OffsetListOf<OT::SubstLookup>* const -->
    <qualified-type-def type-id='type-id-1408' const='yes' id='type-id-1409'/>
    <!-- OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-961' size-in-bits='64' id='type-id-457'/>
    <!-- OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-457' const='yes' id='type-id-1410'/>
    <!-- OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-963' size-in-bits='64' id='type-id-1411'/>
    <!-- OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-963' size-in-bits='64' id='type-id-459'/>
    <!-- OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-459' const='yes' id='type-id-1412'/>
    <!-- OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-965' size-in-bits='64' id='type-id-1413'/>
    <!-- OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-965' size-in-bits='64' id='type-id-462'/>
    <!-- OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-462' const='yes' id='type-id-1414'/>
    <!-- OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1415' size-in-bits='64' id='type-id-450'/>
    <!-- OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-450' const='yes' id='type-id-1416'/>
    <!-- OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-967' size-in-bits='64' id='type-id-1417'/>
    <!-- OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-967' size-in-bits='64' id='type-id-463'/>
    <!-- OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-463' const='yes' id='type-id-1418'/>
    <!-- OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-969' size-in-bits='64' id='type-id-1419'/>
    <!-- OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-969' size-in-bits='64' id='type-id-468'/>
    <!-- OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-468' const='yes' id='type-id-1420'/>
    <!-- OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-971' size-in-bits='64' id='type-id-1421'/>
    <!-- OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-971' size-in-bits='64' id='type-id-469'/>
    <!-- OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-469' const='yes' id='type-id-1422'/>
    <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1423' size-in-bits='64' id='type-id-449'/>
    <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-449' const='yes' id='type-id-1424'/>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-973' size-in-bits='64' id='type-id-1425'/>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-973' size-in-bits='64' id='type-id-447'/>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-447' const='yes' id='type-id-1426'/>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-975' size-in-bits='64' id='type-id-1427'/>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-975' size-in-bits='64' id='type-id-465'/>
    <!-- OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-465' const='yes' id='type-id-1428'/>
    <!-- OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1429' size-in-bits='64' id='type-id-1430'/>
    <!-- OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1429' size-in-bits='64' id='type-id-448'/>
    <!-- OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-448' const='yes' id='type-id-1431'/>
    <!-- OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1432' size-in-bits='64' id='type-id-480'/>
    <!-- OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-480' const='yes' id='type-id-1433'/>
    <!-- OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1434' size-in-bits='64' id='type-id-446'/>
    <!-- OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-446' const='yes' id='type-id-1435'/>
    <!-- OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1436' size-in-bits='64' id='type-id-445'/>
    <!-- OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-445' const='yes' id='type-id-1437'/>
    <!-- OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1438' size-in-bits='64' id='type-id-451'/>
    <!-- OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-451' const='yes' id='type-id-1439'/>
    <!-- OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-977' size-in-bits='64' id='type-id-1440'/>
    <!-- OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-977' size-in-bits='64' id='type-id-464'/>
    <!-- OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-464' const='yes' id='type-id-1441'/>
    <!-- OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-979' size-in-bits='64' id='type-id-1442'/>
    <!-- OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-979' size-in-bits='64' id='type-id-471'/>
    <!-- OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-471' const='yes' id='type-id-1443'/>
    <!-- OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-981' size-in-bits='64' id='type-id-1444'/>
    <!-- OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-981' size-in-bits='64' id='type-id-472'/>
    <!-- OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-472' const='yes' id='type-id-1445'/>
    <!-- OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-983' size-in-bits='64' id='type-id-1446'/>
    <!-- OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-983' size-in-bits='64' id='type-id-476'/>
    <!-- OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-476' const='yes' id='type-id-1447'/>
    <!-- OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1448' size-in-bits='64' id='type-id-458'/>
    <!-- OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-458' const='yes' id='type-id-1449'/>
    <!-- OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-985' size-in-bits='64' id='type-id-452'/>
    <!-- OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-452' const='yes' id='type-id-1450'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1451' size-in-bits='64' id='type-id-460'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-460' const='yes' id='type-id-1452'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1453' size-in-bits='64' id='type-id-455'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-455' const='yes' id='type-id-1454'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1455' size-in-bits='64' id='type-id-461'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-461' const='yes' id='type-id-1456'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1457' size-in-bits='64' id='type-id-456'/>
    <!-- OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-456' const='yes' id='type-id-1458'/>
    <!-- OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-987' size-in-bits='64' id='type-id-1459'/>
    <!-- OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-987' size-in-bits='64' id='type-id-474'/>
    <!-- OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-474' const='yes' id='type-id-1460'/>
    <!-- OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-989' size-in-bits='64' id='type-id-1461'/>
    <!-- OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-989' size-in-bits='64' id='type-id-478'/>
    <!-- OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-478' const='yes' id='type-id-1462'/>
    <!-- OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-991' size-in-bits='64' id='type-id-1463'/>
    <!-- OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-991' size-in-bits='64' id='type-id-475'/>
    <!-- OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-475' const='yes' id='type-id-1464'/>
    <!-- OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1465' size-in-bits='64' id='type-id-454'/>
    <!-- OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-454' const='yes' id='type-id-1466'/>
    <!-- OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1467' size-in-bits='64' id='type-id-453'/>
    <!-- OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-453' const='yes' id='type-id-1468'/>
    <!-- OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-993' size-in-bits='64' id='type-id-1469'/>
    <!-- OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-993' size-in-bits='64' id='type-id-466'/>
    <!-- OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-466' const='yes' id='type-id-1470'/>
    <!-- OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-995' size-in-bits='64' id='type-id-1471'/>
    <!-- OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-995' size-in-bits='64' id='type-id-467'/>
    <!-- OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-467' const='yes' id='type-id-1472'/>
    <!-- OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1473' size-in-bits='64' id='type-id-479'/>
    <!-- OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-479' const='yes' id='type-id-1474'/>
    <!-- OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-997' size-in-bits='64' id='type-id-1475'/>
    <!-- OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-997' size-in-bits='64' id='type-id-470'/>
    <!-- OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-470' const='yes' id='type-id-1476'/>
    <!-- OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-999' size-in-bits='64' id='type-id-1477'/>
    <!-- OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-999' size-in-bits='64' id='type-id-477'/>
    <!-- OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-477' const='yes' id='type-id-1478'/>
    <!-- OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1001' size-in-bits='64' id='type-id-1479'/>
    <!-- OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1001' size-in-bits='64' id='type-id-473'/>
    <!-- OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-473' const='yes' id='type-id-1480'/>
    <!-- OT::PairPos* -->
    <pointer-type-def type-id='type-id-1481' size-in-bits='64' id='type-id-1482'/>
    <!-- OT::PairPos* const -->
    <qualified-type-def type-id='type-id-1482' const='yes' id='type-id-1483'/>
    <!-- OT::PairPosFormat1* -->
    <pointer-type-def type-id='type-id-1484' size-in-bits='64' id='type-id-1485'/>
    <!-- OT::PairPosFormat1* const -->
    <qualified-type-def type-id='type-id-1485' const='yes' id='type-id-1486'/>
    <!-- OT::PairPosFormat2* -->
    <pointer-type-def type-id='type-id-1487' size-in-bits='64' id='type-id-1488'/>
    <!-- OT::PairPosFormat2* const -->
    <qualified-type-def type-id='type-id-1488' const='yes' id='type-id-1489'/>
    <!-- OT::PairSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-1490' size-in-bits='64' id='type-id-1491'/>
    <!-- OT::PairSet* -->
    <pointer-type-def type-id='type-id-1490' size-in-bits='64' id='type-id-1492'/>
    <!-- OT::PairSet* const -->
    <qualified-type-def type-id='type-id-1492' const='yes' id='type-id-1493'/>
    <!-- OT::PairSet::sanitize_closure_t* -->
    <pointer-type-def type-id='type-id-1494' size-in-bits='64' id='type-id-1495'/>
    <!-- OT::PosLookup& -->
    <reference-type-def kind='lvalue' type-id='type-id-1029' size-in-bits='64' id='type-id-1496'/>
    <!-- OT::PosLookup* -->
    <pointer-type-def type-id='type-id-1029' size-in-bits='64' id='type-id-1497'/>
    <!-- OT::PosLookup* const -->
    <qualified-type-def type-id='type-id-1497' const='yes' id='type-id-1498'/>
    <!-- OT::PosLookupSubTable& -->
    <reference-type-def kind='lvalue' type-id='type-id-1499' size-in-bits='64' id='type-id-1500'/>
    <!-- OT::PosLookupSubTable* -->
    <pointer-type-def type-id='type-id-1499' size-in-bits='64' id='type-id-1501'/>
    <!-- OT::PosLookupSubTable* const -->
    <qualified-type-def type-id='type-id-1501' const='yes' id='type-id-1502'/>
    <!-- OT::RangeRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-1003' size-in-bits='64' id='type-id-1503'/>
    <!-- OT::RangeRecord* -->
    <pointer-type-def type-id='type-id-1003' size-in-bits='64' id='type-id-1504'/>
    <!-- OT::Record<OT::Feature>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1005' size-in-bits='64' id='type-id-1505'/>
    <!-- OT::Record<OT::Feature>* -->
    <pointer-type-def type-id='type-id-1005' size-in-bits='64' id='type-id-1506'/>
    <!-- OT::Record<OT::Feature>* const -->
    <qualified-type-def type-id='type-id-1506' const='yes' id='type-id-1507'/>
    <!-- OT::Record<OT::LangSys>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1007' size-in-bits='64' id='type-id-1508'/>
    <!-- OT::Record<OT::LangSys>* -->
    <pointer-type-def type-id='type-id-1007' size-in-bits='64' id='type-id-1509'/>
    <!-- OT::Record<OT::LangSys>* const -->
    <qualified-type-def type-id='type-id-1509' const='yes' id='type-id-1510'/>
    <!-- OT::Record<OT::Script>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1009' size-in-bits='64' id='type-id-1511'/>
    <!-- OT::Record<OT::Script>* -->
    <pointer-type-def type-id='type-id-1009' size-in-bits='64' id='type-id-1512'/>
    <!-- OT::Record<OT::Script>* const -->
    <qualified-type-def type-id='type-id-1512' const='yes' id='type-id-1513'/>
    <!-- OT::RecordListOf<OT::Feature>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1514' size-in-bits='64' id='type-id-1515'/>
    <!-- OT::RecordListOf<OT::Feature>* -->
    <pointer-type-def type-id='type-id-1514' size-in-bits='64' id='type-id-1516'/>
    <!-- OT::RecordListOf<OT::Feature>* const -->
    <qualified-type-def type-id='type-id-1516' const='yes' id='type-id-1517'/>
    <!-- OT::RecordListOf<OT::Script>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1518' size-in-bits='64' id='type-id-1519'/>
    <!-- OT::RecordListOf<OT::Script>* -->
    <pointer-type-def type-id='type-id-1518' size-in-bits='64' id='type-id-1520'/>
    <!-- OT::RecordListOf<OT::Script>* const -->
    <qualified-type-def type-id='type-id-1520' const='yes' id='type-id-1521'/>
    <!-- OT::ReverseChainSingleSubst* -->
    <pointer-type-def type-id='type-id-1522' size-in-bits='64' id='type-id-1523'/>
    <!-- OT::ReverseChainSingleSubst* const -->
    <qualified-type-def type-id='type-id-1523' const='yes' id='type-id-1524'/>
    <!-- OT::ReverseChainSingleSubstFormat1* -->
    <pointer-type-def type-id='type-id-1525' size-in-bits='64' id='type-id-1526'/>
    <!-- OT::ReverseChainSingleSubstFormat1* const -->
    <qualified-type-def type-id='type-id-1526' const='yes' id='type-id-1527'/>
    <!-- OT::Rule& -->
    <reference-type-def kind='lvalue' type-id='type-id-1528' size-in-bits='64' id='type-id-1529'/>
    <!-- OT::Rule* -->
    <pointer-type-def type-id='type-id-1528' size-in-bits='64' id='type-id-1530'/>
    <!-- OT::Rule* const -->
    <qualified-type-def type-id='type-id-1530' const='yes' id='type-id-1531'/>
    <!-- OT::RuleSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-1532' size-in-bits='64' id='type-id-1533'/>
    <!-- OT::RuleSet* -->
    <pointer-type-def type-id='type-id-1532' size-in-bits='64' id='type-id-1534'/>
    <!-- OT::RuleSet* const -->
    <qualified-type-def type-id='type-id-1534' const='yes' id='type-id-1535'/>
    <!-- OT::Script& -->
    <reference-type-def kind='lvalue' type-id='type-id-1536' size-in-bits='64' id='type-id-1537'/>
    <!-- OT::Script* -->
    <pointer-type-def type-id='type-id-1536' size-in-bits='64' id='type-id-1538'/>
    <!-- OT::Script* const -->
    <qualified-type-def type-id='type-id-1538' const='yes' id='type-id-1539'/>
    <!-- OT::Sequence& -->
    <reference-type-def kind='lvalue' type-id='type-id-1540' size-in-bits='64' id='type-id-1541'/>
    <!-- OT::Sequence* -->
    <pointer-type-def type-id='type-id-1540' size-in-bits='64' id='type-id-1542'/>
    <!-- OT::Sequence* const -->
    <qualified-type-def type-id='type-id-1542' const='yes' id='type-id-1543'/>
    <!-- OT::SinglePos* -->
    <pointer-type-def type-id='type-id-1544' size-in-bits='64' id='type-id-1545'/>
    <!-- OT::SinglePos* const -->
    <qualified-type-def type-id='type-id-1545' const='yes' id='type-id-1546'/>
    <!-- OT::SinglePosFormat1* -->
    <pointer-type-def type-id='type-id-1547' size-in-bits='64' id='type-id-1548'/>
    <!-- OT::SinglePosFormat1* const -->
    <qualified-type-def type-id='type-id-1548' const='yes' id='type-id-1549'/>
    <!-- OT::SinglePosFormat2* -->
    <pointer-type-def type-id='type-id-1550' size-in-bits='64' id='type-id-1551'/>
    <!-- OT::SinglePosFormat2* const -->
    <qualified-type-def type-id='type-id-1551' const='yes' id='type-id-1552'/>
    <!-- OT::SingleSubst* -->
    <pointer-type-def type-id='type-id-1553' size-in-bits='64' id='type-id-1554'/>
    <!-- OT::SingleSubst* const -->
    <qualified-type-def type-id='type-id-1554' const='yes' id='type-id-1555'/>
    <!-- OT::SingleSubstFormat1* -->
    <pointer-type-def type-id='type-id-1556' size-in-bits='64' id='type-id-586'/>
    <!-- OT::SingleSubstFormat1* const -->
    <qualified-type-def type-id='type-id-586' const='yes' id='type-id-1557'/>
    <!-- OT::SingleSubstFormat2* -->
    <pointer-type-def type-id='type-id-1558' size-in-bits='64' id='type-id-597'/>
    <!-- OT::SingleSubstFormat2* const -->
    <qualified-type-def type-id='type-id-597' const='yes' id='type-id-1559'/>
    <!-- OT::SubstLookup& -->
    <reference-type-def kind='lvalue' type-id='type-id-1037' size-in-bits='64' id='type-id-1560'/>
    <!-- OT::SubstLookup* -->
    <pointer-type-def type-id='type-id-1037' size-in-bits='64' id='type-id-581'/>
    <!-- OT::SubstLookup* const -->
    <qualified-type-def type-id='type-id-581' const='yes' id='type-id-1561'/>
    <!-- OT::SubstLookupSubTable& -->
    <reference-type-def kind='lvalue' type-id='type-id-1562' size-in-bits='64' id='type-id-1563'/>
    <!-- OT::SubstLookupSubTable* -->
    <pointer-type-def type-id='type-id-1562' size-in-bits='64' id='type-id-580'/>
    <!-- OT::SubstLookupSubTable* const -->
    <qualified-type-def type-id='type-id-580' const='yes' id='type-id-1564'/>
    <!-- OT::Supplier<unsigned int>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1565' size-in-bits='64' id='type-id-1566'/>
    <!-- OT::Value* -->
    <pointer-type-def type-id='type-id-1011' size-in-bits='64' id='type-id-1567'/>
    <!-- OT::ValueFormat* -->
    <pointer-type-def type-id='type-id-1568' size-in-bits='64' id='type-id-1569'/>
    <!-- OT::ValueFormat* const -->
    <qualified-type-def type-id='type-id-1569' const='yes' id='type-id-1570'/>
    <!-- OT::hb_apply_context_t* -->
    <pointer-type-def type-id='type-id-1571' size-in-bits='64' id='type-id-1572'/>
    <!-- OT::hb_apply_context_t* const -->
    <qualified-type-def type-id='type-id-1572' const='yes' id='type-id-1573'/>
    <!-- OT::hb_apply_context_t::matcher_t* -->
    <pointer-type-def type-id='type-id-1574' size-in-bits='64' id='type-id-1575'/>
    <!-- OT::hb_apply_context_t::matcher_t* const -->
    <qualified-type-def type-id='type-id-1575' const='yes' id='type-id-1576'/>
    <!-- OT::hb_apply_context_t::return_t (*)(OT::hb_apply_context_t*, unsigned int) -->
    <pointer-type-def type-id='type-id-1577' size-in-bits='64' id='type-id-1578'/>
    <!-- OT::hb_apply_context_t::skipping_backward_iterator_t* -->
    <pointer-type-def type-id='type-id-1579' size-in-bits='64' id='type-id-1580'/>
    <!-- OT::hb_apply_context_t::skipping_backward_iterator_t* const -->
    <qualified-type-def type-id='type-id-1580' const='yes' id='type-id-1581'/>
    <!-- OT::hb_apply_context_t::skipping_forward_iterator_t* -->
    <pointer-type-def type-id='type-id-1582' size-in-bits='64' id='type-id-1583'/>
    <!-- OT::hb_apply_context_t::skipping_forward_iterator_t* const -->
    <qualified-type-def type-id='type-id-1583' const='yes' id='type-id-1584'/>
    <!-- OT::hb_closure_context_t* -->
    <pointer-type-def type-id='type-id-1585' size-in-bits='64' id='type-id-1586'/>
    <!-- OT::hb_closure_context_t* const -->
    <qualified-type-def type-id='type-id-1586' const='yes' id='type-id-1587'/>
    <!-- OT::hb_closure_context_t::return_t (*)(OT::hb_closure_context_t*, unsigned int) -->
    <pointer-type-def type-id='type-id-1588' size-in-bits='64' id='type-id-1589'/>
    <!-- OT::hb_collect_glyphs_context_t* -->
    <pointer-type-def type-id='type-id-1590' size-in-bits='64' id='type-id-1591'/>
    <!-- OT::hb_collect_glyphs_context_t* const -->
    <qualified-type-def type-id='type-id-1591' const='yes' id='type-id-1592'/>
    <!-- OT::hb_collect_glyphs_context_t::return_t (*)(OT::hb_collect_glyphs_context_t*, unsigned int) -->
    <pointer-type-def type-id='type-id-1593' size-in-bits='64' id='type-id-1594'/>
    <!-- OT::hb_get_coverage_context_t* -->
    <pointer-type-def type-id='type-id-1595' size-in-bits='64' id='type-id-1596'/>
    <!-- OT::hb_get_coverage_context_t* const -->
    <qualified-type-def type-id='type-id-1596' const='yes' id='type-id-1597'/>
    <!-- OT::hb_would_apply_context_t* -->
    <pointer-type-def type-id='type-id-1598' size-in-bits='64' id='type-id-1599'/>
    <!-- OT::hb_would_apply_context_t* const -->
    <qualified-type-def type-id='type-id-1599' const='yes' id='type-id-1600'/>
    <!-- bool (*)(hb_codepoint_t, const OT::USHORT&, void*) -->
    <pointer-type-def type-id='type-id-1601' size-in-bits='64' id='type-id-1602'/>
    <!-- bool (*)(hb_set_t*, const OT::USHORT&, void*) -->
    <pointer-type-def type-id='type-id-1603' size-in-bits='64' id='type-id-1604'/>
    <!-- bool* -->
    <pointer-type-def type-id='type-id-1' size-in-bits='64' id='type-id-1605'/>
    <!-- const GPOSProxy -->
    <qualified-type-def type-id='type-id-1027' const='yes' id='type-id-1606'/>
    <!-- const GPOSProxy& -->
    <reference-type-def kind='lvalue' type-id='type-id-1606' size-in-bits='64' id='type-id-1063'/>
    <!-- const GSUBProxy -->
    <qualified-type-def type-id='type-id-1035' const='yes' id='type-id-1607'/>
    <!-- const GSUBProxy& -->
    <reference-type-def kind='lvalue' type-id='type-id-1607' size-in-bits='64' id='type-id-1061'/>
    <!-- const OT::AlternateSubst -->
    <qualified-type-def type-id='type-id-1081' const='yes' id='type-id-1608'/>
    <!-- const OT::AlternateSubst* -->
    <pointer-type-def type-id='type-id-1608' size-in-bits='64' id='type-id-1609'/>
    <!-- const OT::AlternateSubst* const -->
    <qualified-type-def type-id='type-id-1609' const='yes' id='type-id-1610'/>
    <!-- const OT::AlternateSubstFormat1 -->
    <qualified-type-def type-id='type-id-1084' const='yes' id='type-id-1611'/>
    <!-- const OT::AlternateSubstFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1611' size-in-bits='64' id='type-id-1612'/>
    <!-- const OT::AlternateSubstFormat1* -->
    <pointer-type-def type-id='type-id-1611' size-in-bits='64' id='type-id-1613'/>
    <!-- const OT::AlternateSubstFormat1* const -->
    <qualified-type-def type-id='type-id-1613' const='yes' id='type-id-1614'/>
    <!-- const OT::Anchor -->
    <qualified-type-def type-id='type-id-1087' const='yes' id='type-id-1615'/>
    <!-- const OT::Anchor& -->
    <reference-type-def kind='lvalue' type-id='type-id-1615' size-in-bits='64' id='type-id-1616'/>
    <!-- const OT::Anchor* -->
    <pointer-type-def type-id='type-id-1615' size-in-bits='64' id='type-id-1617'/>
    <!-- const OT::Anchor* const -->
    <qualified-type-def type-id='type-id-1617' const='yes' id='type-id-1618'/>
    <!-- const OT::AnchorFormat1 -->
    <qualified-type-def type-id='type-id-1091' const='yes' id='type-id-1619'/>
    <!-- const OT::AnchorFormat1* -->
    <pointer-type-def type-id='type-id-1619' size-in-bits='64' id='type-id-556'/>
    <!-- const OT::AnchorFormat1* const -->
    <qualified-type-def type-id='type-id-556' const='yes' id='type-id-1620'/>
    <!-- const OT::AnchorFormat2 -->
    <qualified-type-def type-id='type-id-1094' const='yes' id='type-id-1621'/>
    <!-- const OT::AnchorFormat2* -->
    <pointer-type-def type-id='type-id-1621' size-in-bits='64' id='type-id-557'/>
    <!-- const OT::AnchorFormat2* const -->
    <qualified-type-def type-id='type-id-557' const='yes' id='type-id-1622'/>
    <!-- const OT::AnchorFormat3 -->
    <qualified-type-def type-id='type-id-1097' const='yes' id='type-id-1623'/>
    <!-- const OT::AnchorFormat3* -->
    <pointer-type-def type-id='type-id-1623' size-in-bits='64' id='type-id-558'/>
    <!-- const OT::AnchorFormat3* const -->
    <qualified-type-def type-id='type-id-558' const='yes' id='type-id-1624'/>
    <!-- const OT::AnchorMatrix -->
    <qualified-type-def type-id='type-id-1100' const='yes' id='type-id-1625'/>
    <!-- const OT::AnchorMatrix& -->
    <reference-type-def kind='lvalue' type-id='type-id-1625' size-in-bits='64' id='type-id-1626'/>
    <!-- const OT::AnchorMatrix* -->
    <pointer-type-def type-id='type-id-1625' size-in-bits='64' id='type-id-563'/>
    <!-- const OT::AnchorMatrix* const -->
    <qualified-type-def type-id='type-id-563' const='yes' id='type-id-1627'/>
    <!-- const OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1104' const='yes' id='type-id-1628'/>
    <!-- const OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1628' size-in-bits='64' id='type-id-555'/>
    <!-- const OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-555' const='yes' id='type-id-1629'/>
    <!-- const OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1107' const='yes' id='type-id-1630'/>
    <!-- const OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1630' size-in-bits='64' id='type-id-502'/>
    <!-- const OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-502' const='yes' id='type-id-1631'/>
    <!-- const OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-824' size-in-bits='64' id='type-id-1632'/>
    <!-- const OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1110' const='yes' id='type-id-1633'/>
    <!-- const OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1633' size-in-bits='64' id='type-id-513'/>
    <!-- const OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1113' const='yes' id='type-id-1634'/>
    <!-- const OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1634' size-in-bits='64' id='type-id-542'/>
    <!-- const OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1116' const='yes' id='type-id-1635'/>
    <!-- const OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1635' size-in-bits='64' id='type-id-560'/>
    <!-- const OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-560' const='yes' id='type-id-1636'/>
    <!-- const OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1119' const='yes' id='type-id-1637'/>
    <!-- const OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1637' size-in-bits='64' id='type-id-522'/>
    <!-- const OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-522' const='yes' id='type-id-1638'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1121' const='yes' id='type-id-1639'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1639' size-in-bits='64' id='type-id-566'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1124' const='yes' id='type-id-1640'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1640' size-in-bits='64' id='type-id-483'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-483' const='yes' id='type-id-1641'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1127' const='yes' id='type-id-1642'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1642' size-in-bits='64' id='type-id-487'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-487' const='yes' id='type-id-1643'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1130' const='yes' id='type-id-1644'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1644' size-in-bits='64' id='type-id-541'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-541' const='yes' id='type-id-1645'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1133' const='yes' id='type-id-1646'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1646' size-in-bits='64' id='type-id-540'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-540' const='yes' id='type-id-1647'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1136' const='yes' id='type-id-1648'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1648' size-in-bits='64' id='type-id-545'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-545' const='yes' id='type-id-1649'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1139' const='yes' id='type-id-1650'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1650' size-in-bits='64' id='type-id-498'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-498' const='yes' id='type-id-1651'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1142' const='yes' id='type-id-1652'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1652' size-in-bits='64' id='type-id-486'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-486' const='yes' id='type-id-1653'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1145' const='yes' id='type-id-1654'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1654' size-in-bits='64' id='type-id-531'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-531' const='yes' id='type-id-1655'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1147' const='yes' id='type-id-1656'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1656' size-in-bits='64' id='type-id-530'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-530' const='yes' id='type-id-1657'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1149' const='yes' id='type-id-1658'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1658' size-in-bits='64' id='type-id-521'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1152' const='yes' id='type-id-1659'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1659' size-in-bits='64' id='type-id-552'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-552' const='yes' id='type-id-1660'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1155' const='yes' id='type-id-1661'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1661' size-in-bits='64' id='type-id-550'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1158' const='yes' id='type-id-1662'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1662' size-in-bits='64' id='type-id-551'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-551' const='yes' id='type-id-1663'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1161' const='yes' id='type-id-1664'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1664' size-in-bits='64' id='type-id-536'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-536' const='yes' id='type-id-1665'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1164' const='yes' id='type-id-1666'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1666' size-in-bits='64' id='type-id-535'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-535' const='yes' id='type-id-1667'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1167' const='yes' id='type-id-1668'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1668' size-in-bits='64' id='type-id-528'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-528' const='yes' id='type-id-1669'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1170' const='yes' id='type-id-1670'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1670' size-in-bits='64' id='type-id-526'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1173' const='yes' id='type-id-1671'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1671' size-in-bits='64' id='type-id-527'/>
    <!-- const OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-527' const='yes' id='type-id-1672'/>
    <!-- const OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1176' const='yes' id='type-id-1673'/>
    <!-- const OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1673' size-in-bits='64' id='type-id-481'/>
    <!-- const OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-481' const='yes' id='type-id-1674'/>
    <!-- const OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1179' const='yes' id='type-id-1675'/>
    <!-- const OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1675' size-in-bits='64' id='type-id-510'/>
    <!-- const OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-510' const='yes' id='type-id-1676'/>
    <!-- const OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1182' const='yes' id='type-id-1677'/>
    <!-- const OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1677' size-in-bits='64' id='type-id-505'/>
    <!-- const OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-505' const='yes' id='type-id-1678'/>
    <!-- const OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1185' const='yes' id='type-id-1679'/>
    <!-- const OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1679' size-in-bits='64' id='type-id-501'/>
    <!-- const OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-501' const='yes' id='type-id-1680'/>
    <!-- const OT::AttachList -->
    <qualified-type-def type-id='type-id-1188' const='yes' id='type-id-1681'/>
    <!-- const OT::AttachList& -->
    <reference-type-def kind='lvalue' type-id='type-id-1681' size-in-bits='64' id='type-id-1682'/>
    <!-- const OT::AttachList* -->
    <pointer-type-def type-id='type-id-1681' size-in-bits='64' id='type-id-1683'/>
    <!-- const OT::AttachList* const -->
    <qualified-type-def type-id='type-id-1683' const='yes' id='type-id-1684'/>
    <!-- const OT::BEInt<short int, 2>* const -->
    <qualified-type-def type-id='type-id-314' const='yes' id='type-id-1685'/>
    <!-- const OT::CaretValue -->
    <qualified-type-def type-id='type-id-1192' const='yes' id='type-id-1686'/>
    <!-- const OT::CaretValue& -->
    <reference-type-def kind='lvalue' type-id='type-id-1686' size-in-bits='64' id='type-id-1687'/>
    <!-- const OT::CaretValue* -->
    <pointer-type-def type-id='type-id-1686' size-in-bits='64' id='type-id-1688'/>
    <!-- const OT::CaretValue* const -->
    <qualified-type-def type-id='type-id-1688' const='yes' id='type-id-1689'/>
    <!-- const OT::CaretValueFormat1 -->
    <qualified-type-def type-id='type-id-1196' const='yes' id='type-id-1690'/>
    <!-- const OT::CaretValueFormat1* -->
    <pointer-type-def type-id='type-id-1690' size-in-bits='64' id='type-id-488'/>
    <!-- const OT::CaretValueFormat1* const -->
    <qualified-type-def type-id='type-id-488' const='yes' id='type-id-1691'/>
    <!-- const OT::CaretValueFormat2 -->
    <qualified-type-def type-id='type-id-1199' const='yes' id='type-id-1692'/>
    <!-- const OT::CaretValueFormat2* -->
    <pointer-type-def type-id='type-id-1692' size-in-bits='64' id='type-id-489'/>
    <!-- const OT::CaretValueFormat2* const -->
    <qualified-type-def type-id='type-id-489' const='yes' id='type-id-1693'/>
    <!-- const OT::CaretValueFormat3 -->
    <qualified-type-def type-id='type-id-1202' const='yes' id='type-id-1694'/>
    <!-- const OT::CaretValueFormat3* -->
    <pointer-type-def type-id='type-id-1694' size-in-bits='64' id='type-id-492'/>
    <!-- const OT::CaretValueFormat3* const -->
    <qualified-type-def type-id='type-id-492' const='yes' id='type-id-1695'/>
    <!-- const OT::ChainContext -->
    <qualified-type-def type-id='type-id-1205' const='yes' id='type-id-1696'/>
    <!-- const OT::ChainContext* -->
    <pointer-type-def type-id='type-id-1696' size-in-bits='64' id='type-id-1697'/>
    <!-- const OT::ChainContext* const -->
    <qualified-type-def type-id='type-id-1697' const='yes' id='type-id-1698'/>
    <!-- const OT::ChainContextFormat1 -->
    <qualified-type-def type-id='type-id-1214' const='yes' id='type-id-1699'/>
    <!-- const OT::ChainContextFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1699' size-in-bits='64' id='type-id-1700'/>
    <!-- const OT::ChainContextFormat1* -->
    <pointer-type-def type-id='type-id-1699' size-in-bits='64' id='type-id-1701'/>
    <!-- const OT::ChainContextFormat1* const -->
    <qualified-type-def type-id='type-id-1701' const='yes' id='type-id-1702'/>
    <!-- const OT::ChainContextFormat2 -->
    <qualified-type-def type-id='type-id-1217' const='yes' id='type-id-1703'/>
    <!-- const OT::ChainContextFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-1703' size-in-bits='64' id='type-id-1704'/>
    <!-- const OT::ChainContextFormat2* -->
    <pointer-type-def type-id='type-id-1703' size-in-bits='64' id='type-id-1705'/>
    <!-- const OT::ChainContextFormat2* const -->
    <qualified-type-def type-id='type-id-1705' const='yes' id='type-id-1706'/>
    <!-- const OT::ChainContextFormat3 -->
    <qualified-type-def type-id='type-id-1220' const='yes' id='type-id-1707'/>
    <!-- const OT::ChainContextFormat3& -->
    <reference-type-def kind='lvalue' type-id='type-id-1707' size-in-bits='64' id='type-id-1708'/>
    <!-- const OT::ChainContextFormat3* -->
    <pointer-type-def type-id='type-id-1707' size-in-bits='64' id='type-id-1709'/>
    <!-- const OT::ChainContextFormat3* const -->
    <qualified-type-def type-id='type-id-1709' const='yes' id='type-id-1710'/>
    <!-- const OT::ChainRule -->
    <qualified-type-def type-id='type-id-1223' const='yes' id='type-id-1711'/>
    <!-- const OT::ChainRule& -->
    <reference-type-def kind='lvalue' type-id='type-id-1711' size-in-bits='64' id='type-id-1712'/>
    <!-- const OT::ChainRule* -->
    <pointer-type-def type-id='type-id-1711' size-in-bits='64' id='type-id-1713'/>
    <!-- const OT::ChainRule* const -->
    <qualified-type-def type-id='type-id-1713' const='yes' id='type-id-1714'/>
    <!-- const OT::ChainRuleSet -->
    <qualified-type-def type-id='type-id-1227' const='yes' id='type-id-1715'/>
    <!-- const OT::ChainRuleSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-1715' size-in-bits='64' id='type-id-1716'/>
    <!-- const OT::ChainRuleSet* -->
    <pointer-type-def type-id='type-id-1715' size-in-bits='64' id='type-id-1717'/>
    <!-- const OT::ChainRuleSet* const -->
    <qualified-type-def type-id='type-id-1717' const='yes' id='type-id-1718'/>
    <!-- const OT::ClassDef -->
    <qualified-type-def type-id='type-id-1231' const='yes' id='type-id-1719'/>
    <!-- const OT::ClassDef& -->
    <reference-type-def kind='lvalue' type-id='type-id-1719' size-in-bits='64' id='type-id-1720'/>
    <!-- const OT::ClassDef* -->
    <pointer-type-def type-id='type-id-1719' size-in-bits='64' id='type-id-1721'/>
    <!-- const OT::ClassDef* const -->
    <qualified-type-def type-id='type-id-1721' const='yes' id='type-id-1722'/>
    <!-- const OT::ClassDefFormat1 -->
    <qualified-type-def type-id='type-id-1235' const='yes' id='type-id-1723'/>
    <!-- const OT::ClassDefFormat1* -->
    <pointer-type-def type-id='type-id-1723' size-in-bits='64' id='type-id-496'/>
    <!-- const OT::ClassDefFormat1* const -->
    <qualified-type-def type-id='type-id-496' const='yes' id='type-id-1724'/>
    <!-- const OT::ClassDefFormat2 -->
    <qualified-type-def type-id='type-id-1238' const='yes' id='type-id-1725'/>
    <!-- const OT::ClassDefFormat2* -->
    <pointer-type-def type-id='type-id-1725' size-in-bits='64' id='type-id-1726'/>
    <!-- const OT::ClassDefFormat2* const -->
    <qualified-type-def type-id='type-id-1726' const='yes' id='type-id-1727'/>
    <!-- const OT::Context -->
    <qualified-type-def type-id='type-id-1241' const='yes' id='type-id-1728'/>
    <!-- const OT::Context* -->
    <pointer-type-def type-id='type-id-1728' size-in-bits='64' id='type-id-1729'/>
    <!-- const OT::Context* const -->
    <qualified-type-def type-id='type-id-1729' const='yes' id='type-id-1730'/>
    <!-- const OT::ContextFormat1 -->
    <qualified-type-def type-id='type-id-1250' const='yes' id='type-id-1731'/>
    <!-- const OT::ContextFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1731' size-in-bits='64' id='type-id-1732'/>
    <!-- const OT::ContextFormat1* -->
    <pointer-type-def type-id='type-id-1731' size-in-bits='64' id='type-id-1733'/>
    <!-- const OT::ContextFormat1* const -->
    <qualified-type-def type-id='type-id-1733' const='yes' id='type-id-1734'/>
    <!-- const OT::ContextFormat2 -->
    <qualified-type-def type-id='type-id-1253' const='yes' id='type-id-1735'/>
    <!-- const OT::ContextFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-1735' size-in-bits='64' id='type-id-1736'/>
    <!-- const OT::ContextFormat2* -->
    <pointer-type-def type-id='type-id-1735' size-in-bits='64' id='type-id-1737'/>
    <!-- const OT::ContextFormat2* const -->
    <qualified-type-def type-id='type-id-1737' const='yes' id='type-id-1738'/>
    <!-- const OT::ContextFormat3 -->
    <qualified-type-def type-id='type-id-1256' const='yes' id='type-id-1739'/>
    <!-- const OT::ContextFormat3& -->
    <reference-type-def kind='lvalue' type-id='type-id-1739' size-in-bits='64' id='type-id-1740'/>
    <!-- const OT::ContextFormat3* -->
    <pointer-type-def type-id='type-id-1739' size-in-bits='64' id='type-id-539'/>
    <!-- const OT::ContextFormat3* const -->
    <qualified-type-def type-id='type-id-539' const='yes' id='type-id-1741'/>
    <!-- const OT::Coverage -->
    <qualified-type-def type-id='type-id-1259' const='yes' id='type-id-1742'/>
    <!-- const OT::Coverage& -->
    <reference-type-def kind='lvalue' type-id='type-id-1742' size-in-bits='64' id='type-id-1743'/>
    <!-- const OT::Coverage* -->
    <pointer-type-def type-id='type-id-1742' size-in-bits='64' id='type-id-1744'/>
    <!-- const OT::Coverage* const -->
    <qualified-type-def type-id='type-id-1744' const='yes' id='type-id-1745'/>
    <!-- const OT::CoverageFormat1 -->
    <qualified-type-def type-id='type-id-1264' const='yes' id='type-id-1746'/>
    <!-- const OT::CoverageFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1746' size-in-bits='64' id='type-id-1747'/>
    <!-- const OT::CoverageFormat1* -->
    <pointer-type-def type-id='type-id-1746' size-in-bits='64' id='type-id-1748'/>
    <!-- const OT::CoverageFormat1* const -->
    <qualified-type-def type-id='type-id-1748' const='yes' id='type-id-1749'/>
    <!-- const OT::CoverageFormat2 -->
    <qualified-type-def type-id='type-id-1269' const='yes' id='type-id-1750'/>
    <!-- const OT::CoverageFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-1750' size-in-bits='64' id='type-id-1751'/>
    <!-- const OT::CoverageFormat2* -->
    <pointer-type-def type-id='type-id-1750' size-in-bits='64' id='type-id-1752'/>
    <!-- const OT::CoverageFormat2* const -->
    <qualified-type-def type-id='type-id-1752' const='yes' id='type-id-1753'/>
    <!-- const OT::CursivePos -->
    <qualified-type-def type-id='type-id-1274' const='yes' id='type-id-1754'/>
    <!-- const OT::CursivePos* -->
    <pointer-type-def type-id='type-id-1754' size-in-bits='64' id='type-id-1755'/>
    <!-- const OT::CursivePos* const -->
    <qualified-type-def type-id='type-id-1755' const='yes' id='type-id-1756'/>
    <!-- const OT::CursivePosFormat1 -->
    <qualified-type-def type-id='type-id-1277' const='yes' id='type-id-1757'/>
    <!-- const OT::CursivePosFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1757' size-in-bits='64' id='type-id-1758'/>
    <!-- const OT::CursivePosFormat1* -->
    <pointer-type-def type-id='type-id-1757' size-in-bits='64' id='type-id-1759'/>
    <!-- const OT::CursivePosFormat1* const -->
    <qualified-type-def type-id='type-id-1759' const='yes' id='type-id-1760'/>
    <!-- const OT::Device -->
    <qualified-type-def type-id='type-id-1280' const='yes' id='type-id-1761'/>
    <!-- const OT::Device& -->
    <reference-type-def kind='lvalue' type-id='type-id-1761' size-in-bits='64' id='type-id-1762'/>
    <!-- const OT::Device* -->
    <pointer-type-def type-id='type-id-1761' size-in-bits='64' id='type-id-490'/>
    <!-- const OT::Device* const -->
    <qualified-type-def type-id='type-id-490' const='yes' id='type-id-1763'/>
    <!-- const OT::EntryExitRecord -->
    <qualified-type-def type-id='type-id-950' const='yes' id='type-id-1764'/>
    <!-- const OT::EntryExitRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-1764' size-in-bits='64' id='type-id-1765'/>
    <!-- const OT::EntryExitRecord* -->
    <pointer-type-def type-id='type-id-1764' size-in-bits='64' id='type-id-1766'/>
    <!-- const OT::Extension<OT::ExtensionPos> -->
    <qualified-type-def type-id='type-id-1287' const='yes' id='type-id-1767'/>
    <!-- const OT::Extension<OT::ExtensionPos>* -->
    <pointer-type-def type-id='type-id-1767' size-in-bits='64' id='type-id-1768'/>
    <!-- const OT::Extension<OT::ExtensionPos>* const -->
    <qualified-type-def type-id='type-id-1768' const='yes' id='type-id-1769'/>
    <!-- const OT::Extension<OT::ExtensionSubst> -->
    <qualified-type-def type-id='type-id-1290' const='yes' id='type-id-1770'/>
    <!-- const OT::Extension<OT::ExtensionSubst>* -->
    <pointer-type-def type-id='type-id-1770' size-in-bits='64' id='type-id-1771'/>
    <!-- const OT::Extension<OT::ExtensionSubst>* const -->
    <qualified-type-def type-id='type-id-1771' const='yes' id='type-id-1772'/>
    <!-- const OT::ExtensionFormat1 -->
    <qualified-type-def type-id='type-id-1293' const='yes' id='type-id-1773'/>
    <!-- const OT::ExtensionFormat1* -->
    <pointer-type-def type-id='type-id-1773' size-in-bits='64' id='type-id-546'/>
    <!-- const OT::ExtensionFormat1* const -->
    <qualified-type-def type-id='type-id-546' const='yes' id='type-id-1774'/>
    <!-- const OT::ExtensionSubst -->
    <qualified-type-def type-id='type-id-1775' const='yes' id='type-id-1776'/>
    <!-- const OT::ExtensionSubst* -->
    <pointer-type-def type-id='type-id-1776' size-in-bits='64' id='type-id-1777'/>
    <!-- const OT::ExtensionSubst* const -->
    <qualified-type-def type-id='type-id-1777' const='yes' id='type-id-1778'/>
    <!-- const OT::Feature -->
    <qualified-type-def type-id='type-id-1296' const='yes' id='type-id-1779'/>
    <!-- const OT::Feature& -->
    <reference-type-def kind='lvalue' type-id='type-id-1779' size-in-bits='64' id='type-id-1780'/>
    <!-- const OT::Feature* -->
    <pointer-type-def type-id='type-id-1779' size-in-bits='64' id='type-id-516'/>
    <!-- const OT::Feature* const -->
    <qualified-type-def type-id='type-id-516' const='yes' id='type-id-1781'/>
    <!-- const OT::FeatureParams -->
    <qualified-type-def type-id='type-id-1300' const='yes' id='type-id-1782'/>
    <!-- const OT::FeatureParams& -->
    <reference-type-def kind='lvalue' type-id='type-id-1782' size-in-bits='64' id='type-id-1783'/>
    <!-- const OT::FeatureParams* -->
    <pointer-type-def type-id='type-id-1782' size-in-bits='64' id='type-id-1784'/>
    <!-- const OT::FeatureParams* const -->
    <qualified-type-def type-id='type-id-1784' const='yes' id='type-id-1785'/>
    <!-- const OT::FeatureParamsCharacterVariants -->
    <qualified-type-def type-id='type-id-1304' const='yes' id='type-id-1786'/>
    <!-- const OT::FeatureParamsCharacterVariants* -->
    <pointer-type-def type-id='type-id-1786' size-in-bits='64' id='type-id-514'/>
    <!-- const OT::FeatureParamsSize -->
    <qualified-type-def type-id='type-id-1307' const='yes' id='type-id-1787'/>
    <!-- const OT::FeatureParamsSize& -->
    <reference-type-def kind='lvalue' type-id='type-id-1787' size-in-bits='64' id='type-id-1788'/>
    <!-- const OT::FeatureParamsSize* -->
    <pointer-type-def type-id='type-id-1787' size-in-bits='64' id='type-id-511'/>
    <!-- const OT::FeatureParamsStylisticSet -->
    <qualified-type-def type-id='type-id-1310' const='yes' id='type-id-1789'/>
    <!-- const OT::FeatureParamsStylisticSet* -->
    <pointer-type-def type-id='type-id-1789' size-in-bits='64' id='type-id-512'/>
    <!-- const OT::FixedVersion* const -->
    <qualified-type-def type-id='type-id-326' const='yes' id='type-id-1790'/>
    <!-- const OT::GDEF -->
    <qualified-type-def type-id='type-id-1313' const='yes' id='type-id-1791'/>
    <!-- const OT::GDEF& -->
    <reference-type-def kind='lvalue' type-id='type-id-1791' size-in-bits='64' id='type-id-1792'/>
    <!-- const OT::GDEF* -->
    <pointer-type-def type-id='type-id-1791' size-in-bits='64' id='type-id-1793'/>
    <!-- const OT::GDEF* const -->
    <qualified-type-def type-id='type-id-1793' const='yes' id='type-id-1794'/>
    <!-- const OT::GPOS -->
    <qualified-type-def type-id='type-id-1316' const='yes' id='type-id-1795'/>
    <!-- const OT::GPOS& -->
    <reference-type-def kind='lvalue' type-id='type-id-1795' size-in-bits='64' id='type-id-1031'/>
    <!-- const OT::GPOS* -->
    <pointer-type-def type-id='type-id-1795' size-in-bits='64' id='type-id-1796'/>
    <!-- const OT::GPOS* const -->
    <qualified-type-def type-id='type-id-1796' const='yes' id='type-id-1797'/>
    <!-- const OT::GSUB -->
    <qualified-type-def type-id='type-id-1319' const='yes' id='type-id-1798'/>
    <!-- const OT::GSUB& -->
    <reference-type-def kind='lvalue' type-id='type-id-1798' size-in-bits='64' id='type-id-1038'/>
    <!-- const OT::GSUB* -->
    <pointer-type-def type-id='type-id-1798' size-in-bits='64' id='type-id-1799'/>
    <!-- const OT::GSUB* const -->
    <qualified-type-def type-id='type-id-1799' const='yes' id='type-id-1800'/>
    <!-- const OT::GSUBGPOS -->
    <qualified-type-def type-id='type-id-1322' const='yes' id='type-id-1801'/>
    <!-- const OT::GSUBGPOS* -->
    <pointer-type-def type-id='type-id-1801' size-in-bits='64' id='type-id-1802'/>
    <!-- const OT::GSUBGPOS* const -->
    <qualified-type-def type-id='type-id-1802' const='yes' id='type-id-1803'/>
    <!-- const OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1325' const='yes' id='type-id-1804'/>
    <!-- const OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1804' size-in-bits='64' id='type-id-532'/>
    <!-- const OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-532' const='yes' id='type-id-1805'/>
    <!-- const OT::Index -->
    <qualified-type-def type-id='type-id-952' const='yes' id='type-id-1806'/>
    <!-- const OT::Index& -->
    <reference-type-def kind='lvalue' type-id='type-id-1806' size-in-bits='64' id='type-id-1807'/>
    <!-- const OT::Index* -->
    <pointer-type-def type-id='type-id-1806' size-in-bits='64' id='type-id-1808'/>
    <!-- const OT::IndexArray -->
    <qualified-type-def type-id='type-id-1809' const='yes' id='type-id-1810'/>
    <!-- const OT::IndexArray* -->
    <pointer-type-def type-id='type-id-1810' size-in-bits='64' id='type-id-1811'/>
    <!-- const OT::IndexArray* const -->
    <qualified-type-def type-id='type-id-1811' const='yes' id='type-id-1812'/>
    <!-- const OT::IntType<short int, 2u>* const -->
    <qualified-type-def type-id='type-id-332' const='yes' id='type-id-1813'/>
    <!-- const OT::LangSys -->
    <qualified-type-def type-id='type-id-1330' const='yes' id='type-id-1814'/>
    <!-- const OT::LangSys& -->
    <reference-type-def kind='lvalue' type-id='type-id-1814' size-in-bits='64' id='type-id-1815'/>
    <!-- const OT::LangSys* -->
    <pointer-type-def type-id='type-id-1814' size-in-bits='64' id='type-id-503'/>
    <!-- const OT::LangSys* const -->
    <qualified-type-def type-id='type-id-503' const='yes' id='type-id-1816'/>
    <!-- const OT::LigCaretList -->
    <qualified-type-def type-id='type-id-1334' const='yes' id='type-id-1817'/>
    <!-- const OT::LigCaretList& -->
    <reference-type-def kind='lvalue' type-id='type-id-1817' size-in-bits='64' id='type-id-1818'/>
    <!-- const OT::LigCaretList* -->
    <pointer-type-def type-id='type-id-1817' size-in-bits='64' id='type-id-1819'/>
    <!-- const OT::LigCaretList* const -->
    <qualified-type-def type-id='type-id-1819' const='yes' id='type-id-1820'/>
    <!-- const OT::LigGlyph -->
    <qualified-type-def type-id='type-id-1338' const='yes' id='type-id-1821'/>
    <!-- const OT::LigGlyph& -->
    <reference-type-def kind='lvalue' type-id='type-id-1821' size-in-bits='64' id='type-id-1822'/>
    <!-- const OT::LigGlyph* -->
    <pointer-type-def type-id='type-id-1821' size-in-bits='64' id='type-id-1823'/>
    <!-- const OT::LigGlyph* const -->
    <qualified-type-def type-id='type-id-1823' const='yes' id='type-id-1824'/>
    <!-- const OT::Ligature -->
    <qualified-type-def type-id='type-id-1342' const='yes' id='type-id-1825'/>
    <!-- const OT::Ligature& -->
    <reference-type-def kind='lvalue' type-id='type-id-1825' size-in-bits='64' id='type-id-1826'/>
    <!-- const OT::Ligature* -->
    <pointer-type-def type-id='type-id-1825' size-in-bits='64' id='type-id-1827'/>
    <!-- const OT::Ligature* const -->
    <qualified-type-def type-id='type-id-1827' const='yes' id='type-id-1828'/>
    <!-- const OT::LigatureSet -->
    <qualified-type-def type-id='type-id-1344' const='yes' id='type-id-1829'/>
    <!-- const OT::LigatureSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-1829' size-in-bits='64' id='type-id-1830'/>
    <!-- const OT::LigatureSet* -->
    <pointer-type-def type-id='type-id-1829' size-in-bits='64' id='type-id-1831'/>
    <!-- const OT::LigatureSet* const -->
    <qualified-type-def type-id='type-id-1831' const='yes' id='type-id-1832'/>
    <!-- const OT::LigatureSubst -->
    <qualified-type-def type-id='type-id-1346' const='yes' id='type-id-1833'/>
    <!-- const OT::LigatureSubst* -->
    <pointer-type-def type-id='type-id-1833' size-in-bits='64' id='type-id-1834'/>
    <!-- const OT::LigatureSubst* const -->
    <qualified-type-def type-id='type-id-1834' const='yes' id='type-id-1835'/>
    <!-- const OT::LigatureSubstFormat1 -->
    <qualified-type-def type-id='type-id-1349' const='yes' id='type-id-1836'/>
    <!-- const OT::LigatureSubstFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1836' size-in-bits='64' id='type-id-1837'/>
    <!-- const OT::LigatureSubstFormat1* -->
    <pointer-type-def type-id='type-id-1836' size-in-bits='64' id='type-id-1838'/>
    <!-- const OT::LigatureSubstFormat1* const -->
    <qualified-type-def type-id='type-id-1838' const='yes' id='type-id-1839'/>
    <!-- const OT::Lookup -->
    <qualified-type-def type-id='type-id-1351' const='yes' id='type-id-1840'/>
    <!-- const OT::Lookup& -->
    <reference-type-def kind='lvalue' type-id='type-id-1840' size-in-bits='64' id='type-id-1841'/>
    <!-- const OT::Lookup* -->
    <pointer-type-def type-id='type-id-1840' size-in-bits='64' id='type-id-523'/>
    <!-- const OT::Lookup* const -->
    <qualified-type-def type-id='type-id-523' const='yes' id='type-id-1842'/>
    <!-- const OT::LookupRecord -->
    <qualified-type-def type-id='type-id-955' const='yes' id='type-id-1843'/>
    <!-- const OT::LookupRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-1843' size-in-bits='64' id='type-id-1844'/>
    <!-- const OT::LookupRecord* -->
    <pointer-type-def type-id='type-id-1843' size-in-bits='64' id='type-id-1845'/>
    <!-- const OT::MarkArray -->
    <qualified-type-def type-id='type-id-1355' const='yes' id='type-id-1846'/>
    <!-- const OT::MarkArray& -->
    <reference-type-def kind='lvalue' type-id='type-id-1846' size-in-bits='64' id='type-id-1847'/>
    <!-- const OT::MarkArray* -->
    <pointer-type-def type-id='type-id-1846' size-in-bits='64' id='type-id-1848'/>
    <!-- const OT::MarkArray* const -->
    <qualified-type-def type-id='type-id-1848' const='yes' id='type-id-1849'/>
    <!-- const OT::MarkBasePos -->
    <qualified-type-def type-id='type-id-1359' const='yes' id='type-id-1850'/>
    <!-- const OT::MarkBasePos* -->
    <pointer-type-def type-id='type-id-1850' size-in-bits='64' id='type-id-1851'/>
    <!-- const OT::MarkBasePos* const -->
    <qualified-type-def type-id='type-id-1851' const='yes' id='type-id-1852'/>
    <!-- const OT::MarkBasePosFormat1 -->
    <qualified-type-def type-id='type-id-1362' const='yes' id='type-id-1853'/>
    <!-- const OT::MarkBasePosFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1853' size-in-bits='64' id='type-id-1854'/>
    <!-- const OT::MarkBasePosFormat1* -->
    <pointer-type-def type-id='type-id-1853' size-in-bits='64' id='type-id-565'/>
    <!-- const OT::MarkBasePosFormat1* const -->
    <qualified-type-def type-id='type-id-565' const='yes' id='type-id-1855'/>
    <!-- const OT::MarkGlyphSets -->
    <qualified-type-def type-id='type-id-1365' const='yes' id='type-id-1856'/>
    <!-- const OT::MarkGlyphSets& -->
    <reference-type-def kind='lvalue' type-id='type-id-1856' size-in-bits='64' id='type-id-1857'/>
    <!-- const OT::MarkGlyphSets* -->
    <pointer-type-def type-id='type-id-1856' size-in-bits='64' id='type-id-1858'/>
    <!-- const OT::MarkGlyphSets* const -->
    <qualified-type-def type-id='type-id-1858' const='yes' id='type-id-1859'/>
    <!-- const OT::MarkGlyphSetsFormat1 -->
    <qualified-type-def type-id='type-id-1369' const='yes' id='type-id-1860'/>
    <!-- const OT::MarkGlyphSetsFormat1* -->
    <pointer-type-def type-id='type-id-1860' size-in-bits='64' id='type-id-1861'/>
    <!-- const OT::MarkGlyphSetsFormat1* const -->
    <qualified-type-def type-id='type-id-1861' const='yes' id='type-id-1862'/>
    <!-- const OT::MarkLigPos -->
    <qualified-type-def type-id='type-id-1372' const='yes' id='type-id-1863'/>
    <!-- const OT::MarkLigPos* -->
    <pointer-type-def type-id='type-id-1863' size-in-bits='64' id='type-id-1864'/>
    <!-- const OT::MarkLigPos* const -->
    <qualified-type-def type-id='type-id-1864' const='yes' id='type-id-1865'/>
    <!-- const OT::MarkLigPosFormat1 -->
    <qualified-type-def type-id='type-id-1375' const='yes' id='type-id-1866'/>
    <!-- const OT::MarkLigPosFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1866' size-in-bits='64' id='type-id-1867'/>
    <!-- const OT::MarkLigPosFormat1* -->
    <pointer-type-def type-id='type-id-1866' size-in-bits='64' id='type-id-568'/>
    <!-- const OT::MarkLigPosFormat1* const -->
    <qualified-type-def type-id='type-id-568' const='yes' id='type-id-1868'/>
    <!-- const OT::MarkMarkPos -->
    <qualified-type-def type-id='type-id-1378' const='yes' id='type-id-1869'/>
    <!-- const OT::MarkMarkPos* -->
    <pointer-type-def type-id='type-id-1869' size-in-bits='64' id='type-id-1870'/>
    <!-- const OT::MarkMarkPos* const -->
    <qualified-type-def type-id='type-id-1870' const='yes' id='type-id-1871'/>
    <!-- const OT::MarkMarkPosFormat1 -->
    <qualified-type-def type-id='type-id-1381' const='yes' id='type-id-1872'/>
    <!-- const OT::MarkMarkPosFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1872' size-in-bits='64' id='type-id-1873'/>
    <!-- const OT::MarkMarkPosFormat1* -->
    <pointer-type-def type-id='type-id-1872' size-in-bits='64' id='type-id-569'/>
    <!-- const OT::MarkMarkPosFormat1* const -->
    <qualified-type-def type-id='type-id-569' const='yes' id='type-id-1874'/>
    <!-- const OT::MarkRecord -->
    <qualified-type-def type-id='type-id-957' const='yes' id='type-id-1875'/>
    <!-- const OT::MarkRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-1875' size-in-bits='64' id='type-id-1876'/>
    <!-- const OT::MarkRecord* -->
    <pointer-type-def type-id='type-id-1875' size-in-bits='64' id='type-id-561'/>
    <!-- const OT::MultipleSubst -->
    <qualified-type-def type-id='type-id-1387' const='yes' id='type-id-1877'/>
    <!-- const OT::MultipleSubst* -->
    <pointer-type-def type-id='type-id-1877' size-in-bits='64' id='type-id-1878'/>
    <!-- const OT::MultipleSubst* const -->
    <qualified-type-def type-id='type-id-1878' const='yes' id='type-id-1879'/>
    <!-- const OT::MultipleSubstFormat1 -->
    <qualified-type-def type-id='type-id-1390' const='yes' id='type-id-1880'/>
    <!-- const OT::MultipleSubstFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1880' size-in-bits='64' id='type-id-1881'/>
    <!-- const OT::MultipleSubstFormat1* -->
    <pointer-type-def type-id='type-id-1880' size-in-bits='64' id='type-id-1882'/>
    <!-- const OT::MultipleSubstFormat1* const -->
    <qualified-type-def type-id='type-id-1882' const='yes' id='type-id-1883'/>
    <!-- const OT::Offset<OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-959' const='yes' id='type-id-1884'/>
    <!-- const OT::Offset<OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1884' size-in-bits='64' id='type-id-1885'/>
    <!-- const OT::Offset<OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1884' size-in-bits='64' id='type-id-1886'/>
    <!-- const OT::Offset<OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-1886' const='yes' id='type-id-1887'/>
    <!-- const OT::OffsetListOf<OT::AnchorMatrix> -->
    <qualified-type-def type-id='type-id-1394' const='yes' id='type-id-1888'/>
    <!-- const OT::OffsetListOf<OT::AnchorMatrix>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1888' size-in-bits='64' id='type-id-1889'/>
    <!-- const OT::OffsetListOf<OT::AnchorMatrix>* -->
    <pointer-type-def type-id='type-id-1888' size-in-bits='64' id='type-id-1890'/>
    <!-- const OT::OffsetListOf<OT::AnchorMatrix>* const -->
    <qualified-type-def type-id='type-id-1890' const='yes' id='type-id-1891'/>
    <!-- const OT::OffsetListOf<OT::Lookup> -->
    <qualified-type-def type-id='type-id-1398' const='yes' id='type-id-1892'/>
    <!-- const OT::OffsetListOf<OT::Lookup>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1892' size-in-bits='64' id='type-id-1893'/>
    <!-- const OT::OffsetListOf<OT::Lookup>* -->
    <pointer-type-def type-id='type-id-1892' size-in-bits='64' id='type-id-1894'/>
    <!-- const OT::OffsetListOf<OT::Lookup>* const -->
    <qualified-type-def type-id='type-id-1894' const='yes' id='type-id-1895'/>
    <!-- const OT::OffsetListOf<OT::PosLookup> -->
    <qualified-type-def type-id='type-id-1402' const='yes' id='type-id-1896'/>
    <!-- const OT::OffsetListOf<OT::PosLookup>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1896' size-in-bits='64' id='type-id-1897'/>
    <!-- const OT::OffsetListOf<OT::PosLookup>* -->
    <pointer-type-def type-id='type-id-1896' size-in-bits='64' id='type-id-1898'/>
    <!-- const OT::OffsetListOf<OT::SubstLookup> -->
    <qualified-type-def type-id='type-id-1406' const='yes' id='type-id-1899'/>
    <!-- const OT::OffsetListOf<OT::SubstLookup>& -->
    <reference-type-def kind='lvalue' type-id='type-id-1899' size-in-bits='64' id='type-id-1900'/>
    <!-- const OT::OffsetListOf<OT::SubstLookup>* -->
    <pointer-type-def type-id='type-id-1899' size-in-bits='64' id='type-id-1901'/>
    <!-- const OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-961' const='yes' id='type-id-1902'/>
    <!-- const OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1902' size-in-bits='64' id='type-id-559'/>
    <!-- const OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-559' const='yes' id='type-id-1903'/>
    <!-- const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-963' const='yes' id='type-id-1904'/>
    <!-- const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1904' size-in-bits='64' id='type-id-1905'/>
    <!-- const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1904' size-in-bits='64' id='type-id-564'/>
    <!-- const OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-564' const='yes' id='type-id-1906'/>
    <!-- const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-965' const='yes' id='type-id-1907'/>
    <!-- const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1907' size-in-bits='64' id='type-id-1908'/>
    <!-- const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1907' size-in-bits='64' id='type-id-484'/>
    <!-- const OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-484' const='yes' id='type-id-1909'/>
    <!-- const OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1415' const='yes' id='type-id-1910'/>
    <!-- const OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1910' size-in-bits='64' id='type-id-485'/>
    <!-- const OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-485' const='yes' id='type-id-1911'/>
    <!-- const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-967' const='yes' id='type-id-1912'/>
    <!-- const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1912' size-in-bits='64' id='type-id-1913'/>
    <!-- const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1912' size-in-bits='64' id='type-id-493'/>
    <!-- const OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-493' const='yes' id='type-id-1914'/>
    <!-- const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-969' const='yes' id='type-id-1915'/>
    <!-- const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1915' size-in-bits='64' id='type-id-1916'/>
    <!-- const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1915' size-in-bits='64' id='type-id-543'/>
    <!-- const OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-543' const='yes' id='type-id-1917'/>
    <!-- const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-971' const='yes' id='type-id-1918'/>
    <!-- const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1918' size-in-bits='64' id='type-id-1919'/>
    <!-- const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1918' size-in-bits='64' id='type-id-544'/>
    <!-- const OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-544' const='yes' id='type-id-1920'/>
    <!-- const OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1423' const='yes' id='type-id-1921'/>
    <!-- const OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1921' size-in-bits='64' id='type-id-497'/>
    <!-- const OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-497' const='yes' id='type-id-1922'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-973' const='yes' id='type-id-1923'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1923' size-in-bits='64' id='type-id-1924'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1923' size-in-bits='64' id='type-id-482'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-482' const='yes' id='type-id-1925'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > -->
    <qualified-type-def type-id='type-id-975' const='yes' id='type-id-1926'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1926' size-in-bits='64' id='type-id-1927'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >* -->
    <pointer-type-def type-id='type-id-1926' size-in-bits='64' id='type-id-499'/>
    <!-- const OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >* const -->
    <qualified-type-def type-id='type-id-499' const='yes' id='type-id-1928'/>
    <!-- const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1429' const='yes' id='type-id-1929'/>
    <!-- const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1929' size-in-bits='64' id='type-id-1930'/>
    <!-- const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1929' size-in-bits='64' id='type-id-491'/>
    <!-- const OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-491' const='yes' id='type-id-1931'/>
    <!-- const OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1432' const='yes' id='type-id-1932'/>
    <!-- const OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1932' size-in-bits='64' id='type-id-518'/>
    <!-- const OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-518' const='yes' id='type-id-1933'/>
    <!-- const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1434' const='yes' id='type-id-1934'/>
    <!-- const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1934' size-in-bits='64' id='type-id-517'/>
    <!-- const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1934' size-in-bits='64' id='type-id-515'/>
    <!-- const OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-515' const='yes' id='type-id-1935'/>
    <!-- const OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1436' const='yes' id='type-id-1936'/>
    <!-- const OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1936' size-in-bits='64' id='type-id-504'/>
    <!-- const OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-504' const='yes' id='type-id-1937'/>
    <!-- const OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1438' const='yes' id='type-id-1938'/>
    <!-- const OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1938' size-in-bits='64' id='type-id-495'/>
    <!-- const OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-495' const='yes' id='type-id-1939'/>
    <!-- const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-977' const='yes' id='type-id-1940'/>
    <!-- const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1940' size-in-bits='64' id='type-id-1941'/>
    <!-- const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1940' size-in-bits='64' id='type-id-494'/>
    <!-- const OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-494' const='yes' id='type-id-1942'/>
    <!-- const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-979' const='yes' id='type-id-1943'/>
    <!-- const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1943' size-in-bits='64' id='type-id-1944'/>
    <!-- const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1943' size-in-bits='64' id='type-id-533'/>
    <!-- const OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-533' const='yes' id='type-id-1945'/>
    <!-- const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-981' const='yes' id='type-id-1946'/>
    <!-- const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1946' size-in-bits='64' id='type-id-1947'/>
    <!-- const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1946' size-in-bits='64' id='type-id-534'/>
    <!-- const OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-534' const='yes' id='type-id-1948'/>
    <!-- const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-983' const='yes' id='type-id-1949'/>
    <!-- const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1949' size-in-bits='64' id='type-id-1950'/>
    <!-- const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1949' size-in-bits='64' id='type-id-524'/>
    <!-- const OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-524' const='yes' id='type-id-1951'/>
    <!-- const OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1448' const='yes' id='type-id-1952'/>
    <!-- const OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1952' size-in-bits='64' id='type-id-562'/>
    <!-- const OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-562' const='yes' id='type-id-1953'/>
    <!-- const OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-985' const='yes' id='type-id-1954'/>
    <!-- const OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1954' size-in-bits='64' id='type-id-500'/>
    <!-- const OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-500' const='yes' id='type-id-1955'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1451' const='yes' id='type-id-1956'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1956' size-in-bits='64' id='type-id-567'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-567' const='yes' id='type-id-1957'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1453' const='yes' id='type-id-1958'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1958' size-in-bits='64' id='type-id-525'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-525' const='yes' id='type-id-1959'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1455' const='yes' id='type-id-1960'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1960' size-in-bits='64' id='type-id-576'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1457' const='yes' id='type-id-1961'/>
    <!-- const OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1961' size-in-bits='64' id='type-id-549'/>
    <!-- const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-987' const='yes' id='type-id-1962'/>
    <!-- const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1962' size-in-bits='64' id='type-id-1963'/>
    <!-- const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1962' size-in-bits='64' id='type-id-554'/>
    <!-- const OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-554' const='yes' id='type-id-1964'/>
    <!-- const OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-989' const='yes' id='type-id-1965'/>
    <!-- const OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1965' size-in-bits='64' id='type-id-1966'/>
    <!-- const OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1965' size-in-bits='64' id='type-id-575'/>
    <!-- const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-991' const='yes' id='type-id-1967'/>
    <!-- const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1967' size-in-bits='64' id='type-id-1968'/>
    <!-- const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1967' size-in-bits='64' id='type-id-574'/>
    <!-- const OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-574' const='yes' id='type-id-1969'/>
    <!-- const OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1465' const='yes' id='type-id-1970'/>
    <!-- const OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1970' size-in-bits='64' id='type-id-520'/>
    <!-- const OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-520' const='yes' id='type-id-1971'/>
    <!-- const OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1467' const='yes' id='type-id-1972'/>
    <!-- const OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1972' size-in-bits='64' id='type-id-509'/>
    <!-- const OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-509' const='yes' id='type-id-1973'/>
    <!-- const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-993' const='yes' id='type-id-1974'/>
    <!-- const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1974' size-in-bits='64' id='type-id-1975'/>
    <!-- const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1974' size-in-bits='64' id='type-id-537'/>
    <!-- const OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-537' const='yes' id='type-id-1976'/>
    <!-- const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-995' const='yes' id='type-id-1977'/>
    <!-- const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1977' size-in-bits='64' id='type-id-1978'/>
    <!-- const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1977' size-in-bits='64' id='type-id-538'/>
    <!-- const OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-538' const='yes' id='type-id-1979'/>
    <!-- const OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1473' const='yes' id='type-id-1980'/>
    <!-- const OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1980' size-in-bits='64' id='type-id-507'/>
    <!-- const OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-507' const='yes' id='type-id-1981'/>
    <!-- const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-997' const='yes' id='type-id-1982'/>
    <!-- const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1982' size-in-bits='64' id='type-id-1983'/>
    <!-- const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1982' size-in-bits='64' id='type-id-529'/>
    <!-- const OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-529' const='yes' id='type-id-1984'/>
    <!-- const OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-999' const='yes' id='type-id-1985'/>
    <!-- const OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1985' size-in-bits='64' id='type-id-1986'/>
    <!-- const OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1985' size-in-bits='64' id='type-id-548'/>
    <!-- const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-1001' const='yes' id='type-id-1987'/>
    <!-- const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1987' size-in-bits='64' id='type-id-1988'/>
    <!-- const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-1987' size-in-bits='64' id='type-id-547'/>
    <!-- const OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-547' const='yes' id='type-id-1989'/>
    <!-- const OT::PairPos -->
    <qualified-type-def type-id='type-id-1481' const='yes' id='type-id-1990'/>
    <!-- const OT::PairPos* -->
    <pointer-type-def type-id='type-id-1990' size-in-bits='64' id='type-id-1991'/>
    <!-- const OT::PairPos* const -->
    <qualified-type-def type-id='type-id-1991' const='yes' id='type-id-1992'/>
    <!-- const OT::PairPosFormat1 -->
    <qualified-type-def type-id='type-id-1484' const='yes' id='type-id-1993'/>
    <!-- const OT::PairPosFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1993' size-in-bits='64' id='type-id-1994'/>
    <!-- const OT::PairPosFormat1* -->
    <pointer-type-def type-id='type-id-1993' size-in-bits='64' id='type-id-572'/>
    <!-- const OT::PairPosFormat1* const -->
    <qualified-type-def type-id='type-id-572' const='yes' id='type-id-1995'/>
    <!-- const OT::PairPosFormat2 -->
    <qualified-type-def type-id='type-id-1487' const='yes' id='type-id-1996'/>
    <!-- const OT::PairPosFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-1996' size-in-bits='64' id='type-id-1997'/>
    <!-- const OT::PairPosFormat2* -->
    <pointer-type-def type-id='type-id-1996' size-in-bits='64' id='type-id-573'/>
    <!-- const OT::PairPosFormat2* const -->
    <qualified-type-def type-id='type-id-573' const='yes' id='type-id-1998'/>
    <!-- const OT::PairSet -->
    <qualified-type-def type-id='type-id-1490' const='yes' id='type-id-1999'/>
    <!-- const OT::PairSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-1999' size-in-bits='64' id='type-id-2000'/>
    <!-- const OT::PairSet* -->
    <pointer-type-def type-id='type-id-1999' size-in-bits='64' id='type-id-553'/>
    <!-- const OT::PairSet* const -->
    <qualified-type-def type-id='type-id-553' const='yes' id='type-id-2001'/>
    <!-- const OT::PairSet::sanitize_closure_t -->
    <qualified-type-def type-id='type-id-1494' const='yes' id='type-id-2002'/>
    <!-- const OT::PairSet::sanitize_closure_t* -->
    <pointer-type-def type-id='type-id-2002' size-in-bits='64' id='type-id-2003'/>
    <!-- const OT::PosLookup -->
    <qualified-type-def type-id='type-id-1029' const='yes' id='type-id-2004'/>
    <!-- const OT::PosLookup& -->
    <reference-type-def kind='lvalue' type-id='type-id-2004' size-in-bits='64' id='type-id-1052'/>
    <!-- const OT::PosLookup* -->
    <pointer-type-def type-id='type-id-2004' size-in-bits='64' id='type-id-2005'/>
    <!-- const OT::PosLookup* const -->
    <qualified-type-def type-id='type-id-2005' const='yes' id='type-id-2006'/>
    <!-- const OT::PosLookupSubTable -->
    <qualified-type-def type-id='type-id-1499' const='yes' id='type-id-2007'/>
    <!-- const OT::PosLookupSubTable& -->
    <reference-type-def kind='lvalue' type-id='type-id-2007' size-in-bits='64' id='type-id-2008'/>
    <!-- const OT::PosLookupSubTable* -->
    <pointer-type-def type-id='type-id-2007' size-in-bits='64' id='type-id-2009'/>
    <!-- const OT::PosLookupSubTable* const -->
    <qualified-type-def type-id='type-id-2009' const='yes' id='type-id-2010'/>
    <!-- const OT::RangeRecord -->
    <qualified-type-def type-id='type-id-1003' const='yes' id='type-id-2011'/>
    <!-- const OT::RangeRecord& -->
    <reference-type-def kind='lvalue' type-id='type-id-2011' size-in-bits='64' id='type-id-2012'/>
    <!-- const OT::RangeRecord* -->
    <pointer-type-def type-id='type-id-2011' size-in-bits='64' id='type-id-2013'/>
    <!-- const OT::RangeRecord* const -->
    <qualified-type-def type-id='type-id-2013' const='yes' id='type-id-2014'/>
    <!-- const OT::Record<OT::Feature> -->
    <qualified-type-def type-id='type-id-1005' const='yes' id='type-id-2015'/>
    <!-- const OT::Record<OT::Feature>& -->
    <reference-type-def kind='lvalue' type-id='type-id-2015' size-in-bits='64' id='type-id-2016'/>
    <!-- const OT::Record<OT::Feature>* -->
    <pointer-type-def type-id='type-id-2015' size-in-bits='64' id='type-id-519'/>
    <!-- const OT::Record<OT::LangSys> -->
    <qualified-type-def type-id='type-id-1007' const='yes' id='type-id-2017'/>
    <!-- const OT::Record<OT::LangSys>& -->
    <reference-type-def kind='lvalue' type-id='type-id-2017' size-in-bits='64' id='type-id-2018'/>
    <!-- const OT::Record<OT::LangSys>* -->
    <pointer-type-def type-id='type-id-2017' size-in-bits='64' id='type-id-506'/>
    <!-- const OT::Record<OT::LangSys>* const -->
    <qualified-type-def type-id='type-id-506' const='yes' id='type-id-2019'/>
    <!-- const OT::Record<OT::Script> -->
    <qualified-type-def type-id='type-id-1009' const='yes' id='type-id-2020'/>
    <!-- const OT::Record<OT::Script>& -->
    <reference-type-def kind='lvalue' type-id='type-id-2020' size-in-bits='64' id='type-id-2021'/>
    <!-- const OT::Record<OT::Script>* -->
    <pointer-type-def type-id='type-id-2020' size-in-bits='64' id='type-id-508'/>
    <!-- const OT::Record<OT::Script>* const -->
    <qualified-type-def type-id='type-id-508' const='yes' id='type-id-2022'/>
    <!-- const OT::RecordArrayOf<OT::Feature> -->
    <qualified-type-def type-id='type-id-2023' const='yes' id='type-id-2024'/>
    <!-- const OT::RecordArrayOf<OT::Feature>* -->
    <pointer-type-def type-id='type-id-2024' size-in-bits='64' id='type-id-2025'/>
    <!-- const OT::RecordArrayOf<OT::Feature>* const -->
    <qualified-type-def type-id='type-id-2025' const='yes' id='type-id-2026'/>
    <!-- const OT::RecordArrayOf<OT::LangSys> -->
    <qualified-type-def type-id='type-id-2027' const='yes' id='type-id-2028'/>
    <!-- const OT::RecordArrayOf<OT::LangSys>* -->
    <pointer-type-def type-id='type-id-2028' size-in-bits='64' id='type-id-2029'/>
    <!-- const OT::RecordArrayOf<OT::LangSys>* const -->
    <qualified-type-def type-id='type-id-2029' const='yes' id='type-id-2030'/>
    <!-- const OT::RecordArrayOf<OT::Script> -->
    <qualified-type-def type-id='type-id-2031' const='yes' id='type-id-2032'/>
    <!-- const OT::RecordArrayOf<OT::Script>* -->
    <pointer-type-def type-id='type-id-2032' size-in-bits='64' id='type-id-2033'/>
    <!-- const OT::RecordArrayOf<OT::Script>* const -->
    <qualified-type-def type-id='type-id-2033' const='yes' id='type-id-2034'/>
    <!-- const OT::RecordListOf<OT::Feature> -->
    <qualified-type-def type-id='type-id-1514' const='yes' id='type-id-2035'/>
    <!-- const OT::RecordListOf<OT::Feature>& -->
    <reference-type-def kind='lvalue' type-id='type-id-2035' size-in-bits='64' id='type-id-2036'/>
    <!-- const OT::RecordListOf<OT::Feature>* -->
    <pointer-type-def type-id='type-id-2035' size-in-bits='64' id='type-id-2037'/>
    <!-- const OT::RecordListOf<OT::Feature>* const -->
    <qualified-type-def type-id='type-id-2037' const='yes' id='type-id-2038'/>
    <!-- const OT::RecordListOf<OT::Script> -->
    <qualified-type-def type-id='type-id-1518' const='yes' id='type-id-2039'/>
    <!-- const OT::RecordListOf<OT::Script>& -->
    <reference-type-def kind='lvalue' type-id='type-id-2039' size-in-bits='64' id='type-id-2040'/>
    <!-- const OT::RecordListOf<OT::Script>* -->
    <pointer-type-def type-id='type-id-2039' size-in-bits='64' id='type-id-2041'/>
    <!-- const OT::RecordListOf<OT::Script>* const -->
    <qualified-type-def type-id='type-id-2041' const='yes' id='type-id-2042'/>
    <!-- const OT::ReverseChainSingleSubst -->
    <qualified-type-def type-id='type-id-1522' const='yes' id='type-id-2043'/>
    <!-- const OT::ReverseChainSingleSubst* -->
    <pointer-type-def type-id='type-id-2043' size-in-bits='64' id='type-id-2044'/>
    <!-- const OT::ReverseChainSingleSubst* const -->
    <qualified-type-def type-id='type-id-2044' const='yes' id='type-id-2045'/>
    <!-- const OT::ReverseChainSingleSubstFormat1 -->
    <qualified-type-def type-id='type-id-1525' const='yes' id='type-id-2046'/>
    <!-- const OT::ReverseChainSingleSubstFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-2046' size-in-bits='64' id='type-id-2047'/>
    <!-- const OT::ReverseChainSingleSubstFormat1* -->
    <pointer-type-def type-id='type-id-2046' size-in-bits='64' id='type-id-2048'/>
    <!-- const OT::ReverseChainSingleSubstFormat1* const -->
    <qualified-type-def type-id='type-id-2048' const='yes' id='type-id-2049'/>
    <!-- const OT::Rule -->
    <qualified-type-def type-id='type-id-1528' const='yes' id='type-id-2050'/>
    <!-- const OT::Rule& -->
    <reference-type-def kind='lvalue' type-id='type-id-2050' size-in-bits='64' id='type-id-2051'/>
    <!-- const OT::Rule* -->
    <pointer-type-def type-id='type-id-2050' size-in-bits='64' id='type-id-2052'/>
    <!-- const OT::Rule* const -->
    <qualified-type-def type-id='type-id-2052' const='yes' id='type-id-2053'/>
    <!-- const OT::RuleSet -->
    <qualified-type-def type-id='type-id-1532' const='yes' id='type-id-2054'/>
    <!-- const OT::RuleSet& -->
    <reference-type-def kind='lvalue' type-id='type-id-2054' size-in-bits='64' id='type-id-2055'/>
    <!-- const OT::RuleSet* -->
    <pointer-type-def type-id='type-id-2054' size-in-bits='64' id='type-id-2056'/>
    <!-- const OT::RuleSet* const -->
    <qualified-type-def type-id='type-id-2056' const='yes' id='type-id-2057'/>
    <!-- const OT::SHORT -->
    <qualified-type-def type-id='type-id-613' const='yes' id='type-id-2058'/>
    <!-- const OT::SHORT& -->
    <reference-type-def kind='lvalue' type-id='type-id-2058' size-in-bits='64' id='type-id-2059'/>
    <!-- const OT::Script -->
    <qualified-type-def type-id='type-id-1536' const='yes' id='type-id-2060'/>
    <!-- const OT::Script& -->
    <reference-type-def kind='lvalue' type-id='type-id-2060' size-in-bits='64' id='type-id-2061'/>
    <!-- const OT::Script* -->
    <pointer-type-def type-id='type-id-2060' size-in-bits='64' id='type-id-2062'/>
    <!-- const OT::Script* const -->
    <qualified-type-def type-id='type-id-2062' const='yes' id='type-id-2063'/>
    <!-- const OT::Sequence -->
    <qualified-type-def type-id='type-id-1540' const='yes' id='type-id-2064'/>
    <!-- const OT::Sequence& -->
    <reference-type-def kind='lvalue' type-id='type-id-2064' size-in-bits='64' id='type-id-2065'/>
    <!-- const OT::Sequence* -->
    <pointer-type-def type-id='type-id-2064' size-in-bits='64' id='type-id-2066'/>
    <!-- const OT::Sequence* const -->
    <qualified-type-def type-id='type-id-2066' const='yes' id='type-id-2067'/>
    <!-- const OT::SinglePos -->
    <qualified-type-def type-id='type-id-1544' const='yes' id='type-id-2068'/>
    <!-- const OT::SinglePos* -->
    <pointer-type-def type-id='type-id-2068' size-in-bits='64' id='type-id-2069'/>
    <!-- const OT::SinglePos* const -->
    <qualified-type-def type-id='type-id-2069' const='yes' id='type-id-2070'/>
    <!-- const OT::SinglePosFormat1 -->
    <qualified-type-def type-id='type-id-1547' const='yes' id='type-id-2071'/>
    <!-- const OT::SinglePosFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-2071' size-in-bits='64' id='type-id-2072'/>
    <!-- const OT::SinglePosFormat1* -->
    <pointer-type-def type-id='type-id-2071' size-in-bits='64' id='type-id-570'/>
    <!-- const OT::SinglePosFormat1* const -->
    <qualified-type-def type-id='type-id-570' const='yes' id='type-id-2073'/>
    <!-- const OT::SinglePosFormat2 -->
    <qualified-type-def type-id='type-id-1550' const='yes' id='type-id-2074'/>
    <!-- const OT::SinglePosFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-2074' size-in-bits='64' id='type-id-2075'/>
    <!-- const OT::SinglePosFormat2* -->
    <pointer-type-def type-id='type-id-2074' size-in-bits='64' id='type-id-571'/>
    <!-- const OT::SinglePosFormat2* const -->
    <qualified-type-def type-id='type-id-571' const='yes' id='type-id-2076'/>
    <!-- const OT::SingleSubst -->
    <qualified-type-def type-id='type-id-1553' const='yes' id='type-id-2077'/>
    <!-- const OT::SingleSubst* -->
    <pointer-type-def type-id='type-id-2077' size-in-bits='64' id='type-id-2078'/>
    <!-- const OT::SingleSubst* const -->
    <qualified-type-def type-id='type-id-2078' const='yes' id='type-id-2079'/>
    <!-- const OT::SingleSubstFormat1 -->
    <qualified-type-def type-id='type-id-1556' const='yes' id='type-id-2080'/>
    <!-- const OT::SingleSubstFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-2080' size-in-bits='64' id='type-id-2081'/>
    <!-- const OT::SingleSubstFormat1* -->
    <pointer-type-def type-id='type-id-2080' size-in-bits='64' id='type-id-2082'/>
    <!-- const OT::SingleSubstFormat1* const -->
    <qualified-type-def type-id='type-id-2082' const='yes' id='type-id-2083'/>
    <!-- const OT::SingleSubstFormat2 -->
    <qualified-type-def type-id='type-id-1558' const='yes' id='type-id-2084'/>
    <!-- const OT::SingleSubstFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-2084' size-in-bits='64' id='type-id-2085'/>
    <!-- const OT::SingleSubstFormat2* -->
    <pointer-type-def type-id='type-id-2084' size-in-bits='64' id='type-id-2086'/>
    <!-- const OT::SingleSubstFormat2* const -->
    <qualified-type-def type-id='type-id-2086' const='yes' id='type-id-2087'/>
    <!-- const OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-2088' const='yes' id='type-id-2089'/>
    <!-- const OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-2089' size-in-bits='64' id='type-id-2090'/>
    <!-- const OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-2090' const='yes' id='type-id-2091'/>
    <!-- const OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-2092' const='yes' id='type-id-2093'/>
    <!-- const OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-2093' size-in-bits='64' id='type-id-2094'/>
    <!-- const OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-2094' const='yes' id='type-id-2095'/>
    <!-- const OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-2096' const='yes' id='type-id-2097'/>
    <!-- const OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-2097' size-in-bits='64' id='type-id-2098'/>
    <!-- const OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-2098' const='yes' id='type-id-2099'/>
    <!-- const OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-2100' const='yes' id='type-id-2101'/>
    <!-- const OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-2101' size-in-bits='64' id='type-id-2102'/>
    <!-- const OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-2102' const='yes' id='type-id-2103'/>
    <!-- const OT::SubstLookup -->
    <qualified-type-def type-id='type-id-1037' const='yes' id='type-id-2104'/>
    <!-- const OT::SubstLookup& -->
    <reference-type-def kind='lvalue' type-id='type-id-2104' size-in-bits='64' id='type-id-1051'/>
    <!-- const OT::SubstLookup* -->
    <pointer-type-def type-id='type-id-2104' size-in-bits='64' id='type-id-2105'/>
    <!-- const OT::SubstLookup* const -->
    <qualified-type-def type-id='type-id-2105' const='yes' id='type-id-2106'/>
    <!-- const OT::SubstLookupSubTable -->
    <qualified-type-def type-id='type-id-1562' const='yes' id='type-id-2107'/>
    <!-- const OT::SubstLookupSubTable& -->
    <reference-type-def kind='lvalue' type-id='type-id-2107' size-in-bits='64' id='type-id-2108'/>
    <!-- const OT::SubstLookupSubTable* -->
    <pointer-type-def type-id='type-id-2107' size-in-bits='64' id='type-id-2109'/>
    <!-- const OT::SubstLookupSubTable* const -->
    <qualified-type-def type-id='type-id-2109' const='yes' id='type-id-2110'/>
    <!-- const OT::Tag& -->
    <reference-type-def kind='lvalue' type-id='type-id-369' size-in-bits='64' id='type-id-2111'/>
    <!-- const OT::USHORT -->
    <qualified-type-def type-id='type-id-410' const='yes' id='type-id-2112'/>
    <!-- const OT::USHORT& -->
    <reference-type-def kind='lvalue' type-id='type-id-2112' size-in-bits='64' id='type-id-2113'/>
    <!-- const OT::USHORT* -->
    <pointer-type-def type-id='type-id-2112' size-in-bits='64' id='type-id-2114'/>
    <!-- const OT::Value -->
    <qualified-type-def type-id='type-id-1011' const='yes' id='type-id-2115'/>
    <!-- const OT::Value* -->
    <pointer-type-def type-id='type-id-2115' size-in-bits='64' id='type-id-2116'/>
    <!-- const OT::ValueFormat -->
    <qualified-type-def type-id='type-id-1568' const='yes' id='type-id-2117'/>
    <!-- const OT::ValueFormat* -->
    <pointer-type-def type-id='type-id-2117' size-in-bits='64' id='type-id-2118'/>
    <!-- const OT::ValueFormat* const -->
    <qualified-type-def type-id='type-id-2118' const='yes' id='type-id-2119'/>
    <!-- const OT::hb_apply_context_t -->
    <qualified-type-def type-id='type-id-1571' const='yes' id='type-id-2120'/>
    <!-- const OT::hb_apply_context_t* -->
    <pointer-type-def type-id='type-id-2120' size-in-bits='64' id='type-id-2121'/>
    <!-- const OT::hb_apply_context_t* const -->
    <qualified-type-def type-id='type-id-2121' const='yes' id='type-id-2122'/>
    <!-- const OT::hb_apply_context_t::matcher_t -->
    <qualified-type-def type-id='type-id-1574' const='yes' id='type-id-2123'/>
    <!-- const OT::hb_apply_context_t::matcher_t* -->
    <pointer-type-def type-id='type-id-2123' size-in-bits='64' id='type-id-2124'/>
    <!-- const OT::hb_apply_context_t::matcher_t* const -->
    <qualified-type-def type-id='type-id-2124' const='yes' id='type-id-2125'/>
    <!-- const OT::hb_apply_context_t::skipping_backward_iterator_t -->
    <qualified-type-def type-id='type-id-1579' const='yes' id='type-id-2126'/>
    <!-- const OT::hb_apply_context_t::skipping_backward_iterator_t* -->
    <pointer-type-def type-id='type-id-2126' size-in-bits='64' id='type-id-2127'/>
    <!-- const OT::hb_apply_context_t::skipping_backward_iterator_t* const -->
    <qualified-type-def type-id='type-id-2127' const='yes' id='type-id-2128'/>
    <!-- const OT::hb_apply_context_t::skipping_forward_iterator_t -->
    <qualified-type-def type-id='type-id-1582' const='yes' id='type-id-2129'/>
    <!-- const OT::hb_apply_context_t::skipping_forward_iterator_t* -->
    <pointer-type-def type-id='type-id-2129' size-in-bits='64' id='type-id-2130'/>
    <!-- const OT::hb_apply_context_t::skipping_forward_iterator_t* const -->
    <qualified-type-def type-id='type-id-2130' const='yes' id='type-id-2131'/>
    <!-- const OT::hb_closure_context_t -->
    <qualified-type-def type-id='type-id-1585' const='yes' id='type-id-2132'/>
    <!-- const OT::hb_closure_context_t* -->
    <pointer-type-def type-id='type-id-2132' size-in-bits='64' id='type-id-2133'/>
    <!-- const OT::hb_closure_context_t* const -->
    <qualified-type-def type-id='type-id-2133' const='yes' id='type-id-2134'/>
    <!-- const OT::hb_closure_context_t::return_t -->
    <qualified-type-def type-id='type-id-2135' const='yes' id='type-id-2136'/>
    <!-- const OT::hb_collect_glyphs_context_t -->
    <qualified-type-def type-id='type-id-1590' const='yes' id='type-id-2137'/>
    <!-- const OT::hb_collect_glyphs_context_t* -->
    <pointer-type-def type-id='type-id-2137' size-in-bits='64' id='type-id-2138'/>
    <!-- const OT::hb_collect_glyphs_context_t* const -->
    <qualified-type-def type-id='type-id-2138' const='yes' id='type-id-2139'/>
    <!-- const OT::hb_would_apply_context_t -->
    <qualified-type-def type-id='type-id-1598' const='yes' id='type-id-2140'/>
    <!-- const OT::hb_would_apply_context_t* -->
    <pointer-type-def type-id='type-id-2140' size-in-bits='64' id='type-id-2141'/>
    <!-- const OT::hb_would_apply_context_t* const -->
    <qualified-type-def type-id='type-id-2141' const='yes' id='type-id-2142'/>
    <!-- const _hb_void_t -->
    <qualified-type-def type-id='type-id-1041' const='yes' id='type-id-2143'/>
    <!-- const _hb_void_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2143' size-in-bits='64' id='type-id-1078'/>
    <!-- const bool -->
    <qualified-type-def type-id='type-id-1' const='yes' id='type-id-1030'/>
    <!-- const hb_buffer_t* const -->
    <qualified-type-def type-id='type-id-143' const='yes' id='type-id-2144'/>
    <!-- const hb_glyph_info_t* -->
    <pointer-type-def type-id='type-id-146' size-in-bits='64' id='type-id-2145'/>
    <!-- const hb_ot_layout_lookup_accelerator_t -->
    <qualified-type-def type-id='type-id-1048' const='yes' id='type-id-2146'/>
    <!-- const hb_ot_layout_lookup_accelerator_t* -->
    <pointer-type-def type-id='type-id-2146' size-in-bits='64' id='type-id-1032'/>
    <!-- const hb_ot_map_t -->
    <qualified-type-def type-id='type-id-1055' const='yes' id='type-id-2147'/>
    <!-- const hb_ot_map_t* -->
    <pointer-type-def type-id='type-id-2147' size-in-bits='64' id='type-id-1060'/>
    <!-- const hb_ot_map_t* const -->
    <qualified-type-def type-id='type-id-1060' const='yes' id='type-id-1064'/>
    <!-- const hb_ot_map_t::feature_map_t -->
    <qualified-type-def type-id='type-id-1015' const='yes' id='type-id-2148'/>
    <!-- const hb_ot_map_t::feature_map_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2148' size-in-bits='64' id='type-id-2149'/>
    <!-- const hb_ot_map_t::feature_map_t* -->
    <pointer-type-def type-id='type-id-2148' size-in-bits='64' id='type-id-1069'/>
    <!-- const hb_ot_map_t::lookup_map_t -->
    <qualified-type-def type-id='type-id-1017' const='yes' id='type-id-2150'/>
    <!-- const hb_ot_map_t::lookup_map_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2150' size-in-bits='64' id='type-id-2151'/>
    <!-- const hb_ot_map_t::lookup_map_t* -->
    <pointer-type-def type-id='type-id-2150' size-in-bits='64' id='type-id-2152'/>
    <!-- const hb_ot_map_t::lookup_map_t** -->
    <pointer-type-def type-id='type-id-2152' size-in-bits='64' id='type-id-2153'/>
    <!-- const hb_ot_map_t::stage_map_t -->
    <qualified-type-def type-id='type-id-1020' const='yes' id='type-id-2154'/>
    <!-- const hb_ot_map_t::stage_map_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2154' size-in-bits='64' id='type-id-2155'/>
    <!-- const hb_ot_shape_plan_t -->
    <qualified-type-def type-id='type-id-2156' const='yes' id='type-id-2157'/>
    <!-- const hb_ot_shape_plan_t* -->
    <pointer-type-def type-id='type-id-2157' size-in-bits='64' id='type-id-1062'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u> -->
    <qualified-type-def type-id='type-id-1058' const='yes' id='type-id-2158'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* -->
    <pointer-type-def type-id='type-id-2158' size-in-bits='64' id='type-id-1067'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u> -->
    <qualified-type-def type-id='type-id-1022' const='yes' id='type-id-2159'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>* -->
    <pointer-type-def type-id='type-id-2159' size-in-bits='64' id='type-id-2160'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>* const -->
    <qualified-type-def type-id='type-id-2160' const='yes' id='type-id-2161'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u> -->
    <qualified-type-def type-id='type-id-1024' const='yes' id='type-id-2162'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>* -->
    <pointer-type-def type-id='type-id-2162' size-in-bits='64' id='type-id-2163'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>* const -->
    <qualified-type-def type-id='type-id-2163' const='yes' id='type-id-2164'/>
    <!-- const hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > -->
    <qualified-type-def type-id='type-id-1073' const='yes' id='type-id-2165'/>
    <!-- const hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> >* -->
    <pointer-type-def type-id='type-id-2165' size-in-bits='64' id='type-id-2166'/>
    <!-- const hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> >* const -->
    <qualified-type-def type-id='type-id-2166' const='yes' id='type-id-2167'/>
    <!-- const hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > > -->
    <qualified-type-def type-id='type-id-1076' const='yes' id='type-id-2168'/>
    <!-- const hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > >* -->
    <pointer-type-def type-id='type-id-2168' size-in-bits='64' id='type-id-2169'/>
    <!-- const hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > >* const -->
    <qualified-type-def type-id='type-id-2169' const='yes' id='type-id-2170'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 0u> -->
    <qualified-type-def type-id='type-id-1074' const='yes' id='type-id-2171'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 0u>* -->
    <pointer-type-def type-id='type-id-2171' size-in-bits='64' id='type-id-2172'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 0u>* const -->
    <qualified-type-def type-id='type-id-2172' const='yes' id='type-id-2173'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 4u> -->
    <qualified-type-def type-id='type-id-1077' const='yes' id='type-id-2174'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 4u>* -->
    <pointer-type-def type-id='type-id-2174' size-in-bits='64' id='type-id-2175'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 4u>* const -->
    <qualified-type-def type-id='type-id-2175' const='yes' id='type-id-2176'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 9u> -->
    <qualified-type-def type-id='type-id-1075' const='yes' id='type-id-2177'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 9u>* -->
    <pointer-type-def type-id='type-id-2177' size-in-bits='64' id='type-id-2178'/>
    <!-- const hb_set_digest_lowest_bits_t<long unsigned int, 9u>* const -->
    <qualified-type-def type-id='type-id-2178' const='yes' id='type-id-2179'/>
    <!-- const hb_set_digest_t -->
    <qualified-type-def type-id='type-id-1049' const='yes' id='type-id-2180'/>
    <!-- const hb_set_digest_t* -->
    <pointer-type-def type-id='type-id-2180' size-in-bits='64' id='type-id-2181'/>
    <!-- const hb_tag_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-394' size-in-bits='64' id='type-id-2182'/>
    <!-- const hb_tag_t* -->
    <pointer-type-def type-id='type-id-394' size-in-bits='64' id='type-id-2183'/>
    <!-- hb_auto_trace_t<0, const OT::Coverage&>* -->
    <pointer-type-def type-id='type-id-1042' size-in-bits='64' id='type-id-1043'/>
    <!-- hb_auto_trace_t<0, const OT::Coverage&>* const -->
    <qualified-type-def type-id='type-id-1043' const='yes' id='type-id-1044'/>
    <!-- hb_auto_trace_t<0, const _hb_void_t&>* -->
    <pointer-type-def type-id='type-id-1045' size-in-bits='64' id='type-id-1046'/>
    <!-- hb_auto_trace_t<0, const _hb_void_t&>* const -->
    <qualified-type-def type-id='type-id-1046' const='yes' id='type-id-1047'/>
    <!-- hb_ot_layout_lookup_accelerator_t* -->
    <pointer-type-def type-id='type-id-1048' size-in-bits='64' id='type-id-1050'/>
    <!-- hb_ot_layout_lookup_accelerator_t* const -->
    <qualified-type-def type-id='type-id-1050' const='yes' id='type-id-1053'/>
    <!-- hb_ot_map_t* -->
    <pointer-type-def type-id='type-id-1055' size-in-bits='64' id='type-id-1059'/>
    <!-- hb_ot_map_t::feature_map_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-1015' size-in-bits='64' id='type-id-2184'/>
    <!-- hb_ot_map_t::feature_map_t* -->
    <pointer-type-def type-id='type-id-1015' size-in-bits='64' id='type-id-1066'/>
    <!-- hb_ot_map_t::lookup_map_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-1017' size-in-bits='64' id='type-id-2185'/>
    <!-- hb_ot_map_t::lookup_map_t* -->
    <pointer-type-def type-id='type-id-1017' size-in-bits='64' id='type-id-1071'/>
    <!-- hb_ot_map_t::stage_map_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-1020' size-in-bits='64' id='type-id-2186'/>
    <!-- hb_ot_map_t::stage_map_t* -->
    <pointer-type-def type-id='type-id-1020' size-in-bits='64' id='type-id-1072'/>
    <!-- hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* -->
    <pointer-type-def type-id='type-id-1058' size-in-bits='64' id='type-id-2187'/>
    <!-- hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>* -->
    <pointer-type-def type-id='type-id-1022' size-in-bits='64' id='type-id-2188'/>
    <!-- hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>* -->
    <pointer-type-def type-id='type-id-1024' size-in-bits='64' id='type-id-2189'/>
    <!-- hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> >* -->
    <pointer-type-def type-id='type-id-1073' size-in-bits='64' id='type-id-2190'/>
    <!-- hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> >* const -->
    <qualified-type-def type-id='type-id-2190' const='yes' id='type-id-2191'/>
    <!-- hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > >* -->
    <pointer-type-def type-id='type-id-1076' size-in-bits='64' id='type-id-2192'/>
    <!-- hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<long unsigned int, 0u>, hb_set_digest_lowest_bits_t<long unsigned int, 9u> > >* const -->
    <qualified-type-def type-id='type-id-2192' const='yes' id='type-id-2193'/>
    <!-- hb_set_digest_lowest_bits_t<long unsigned int, 0u>* -->
    <pointer-type-def type-id='type-id-1074' size-in-bits='64' id='type-id-2194'/>
    <!-- hb_set_digest_lowest_bits_t<long unsigned int, 0u>* const -->
    <qualified-type-def type-id='type-id-2194' const='yes' id='type-id-2195'/>
    <!-- hb_set_digest_lowest_bits_t<long unsigned int, 4u>* -->
    <pointer-type-def type-id='type-id-1077' size-in-bits='64' id='type-id-2196'/>
    <!-- hb_set_digest_lowest_bits_t<long unsigned int, 4u>* const -->
    <qualified-type-def type-id='type-id-2196' const='yes' id='type-id-2197'/>
    <!-- hb_set_digest_lowest_bits_t<long unsigned int, 9u>* -->
    <pointer-type-def type-id='type-id-1075' size-in-bits='64' id='type-id-2198'/>
    <!-- hb_set_digest_lowest_bits_t<long unsigned int, 9u>* const -->
    <qualified-type-def type-id='type-id-2198' const='yes' id='type-id-2199'/>
    <!-- hb_set_digest_t* -->
    <pointer-type-def type-id='type-id-1049' size-in-bits='64' id='type-id-2200'/>
    <!-- void (*)(const hb_ot_shape_plan_t*, hb_font_t*, hb_buffer_t*) -->
    <pointer-type-def type-id='type-id-2201' size-in-bits='64' id='type-id-1057'/>
    <!-- void (*)(hb_set_t*, const OT::USHORT&, void*) -->
    <pointer-type-def type-id='type-id-2202' size-in-bits='64' id='type-id-2203'/>
    <reference-type-def kind='lvalue' type-id='type-id-2204' size-in-bits='64' id='type-id-2205'/>
    <reference-type-def kind='lvalue' type-id='type-id-2206' size-in-bits='64' id='type-id-2207'/>
    <reference-type-def kind='lvalue' type-id='type-id-2208' size-in-bits='64' id='type-id-2209'/>
    <reference-type-def kind='lvalue' type-id='type-id-2210' size-in-bits='64' id='type-id-2211'/>
    <reference-type-def kind='lvalue' type-id='type-id-2212' size-in-bits='64' id='type-id-2213'/>
    <reference-type-def kind='lvalue' type-id='type-id-2214' size-in-bits='64' id='type-id-2215'/>
    <reference-type-def kind='lvalue' type-id='type-id-2216' size-in-bits='64' id='type-id-2217'/>
    <reference-type-def kind='lvalue' type-id='type-id-2218' size-in-bits='64' id='type-id-2219'/>
    <reference-type-def kind='lvalue' type-id='type-id-2220' size-in-bits='64' id='type-id-2221'/>
    <reference-type-def kind='lvalue' type-id='type-id-2222' size-in-bits='64' id='type-id-2223'/>
    <reference-type-def kind='lvalue' type-id='type-id-2224' size-in-bits='64' id='type-id-2225'/>
    <reference-type-def kind='lvalue' type-id='type-id-2226' size-in-bits='64' id='type-id-2227'/>
    <reference-type-def kind='lvalue' type-id='type-id-2228' size-in-bits='64' id='type-id-2229'/>
    <reference-type-def kind='lvalue' type-id='type-id-2230' size-in-bits='64' id='type-id-2231'/>
    <reference-type-def kind='lvalue' type-id='type-id-2232' size-in-bits='64' id='type-id-2233'/>
    <reference-type-def kind='lvalue' type-id='type-id-2234' size-in-bits='64' id='type-id-2235'/>
    <reference-type-def kind='lvalue' type-id='type-id-2236' size-in-bits='64' id='type-id-2237'/>
    <reference-type-def kind='lvalue' type-id='type-id-2238' size-in-bits='64' id='type-id-2239'/>
    <reference-type-def kind='lvalue' type-id='type-id-2240' size-in-bits='64' id='type-id-2241'/>
    <reference-type-def kind='lvalue' type-id='type-id-2242' size-in-bits='64' id='type-id-2243'/>
    <reference-type-def kind='lvalue' type-id='type-id-2244' size-in-bits='64' id='type-id-2245'/>
    <reference-type-def kind='lvalue' type-id='type-id-2246' size-in-bits='64' id='type-id-2247'/>
    <reference-type-def kind='lvalue' type-id='type-id-2248' size-in-bits='64' id='type-id-2249'/>
    <reference-type-def kind='lvalue' type-id='type-id-2250' size-in-bits='64' id='type-id-2251'/>
    <reference-type-def kind='lvalue' type-id='type-id-2252' size-in-bits='64' id='type-id-2253'/>
    <reference-type-def kind='lvalue' type-id='type-id-2254' size-in-bits='64' id='type-id-2255'/>
    <reference-type-def kind='lvalue' type-id='type-id-2256' size-in-bits='64' id='type-id-2257'/>
    <reference-type-def kind='lvalue' type-id='type-id-2258' size-in-bits='64' id='type-id-2259'/>
    <reference-type-def kind='lvalue' type-id='type-id-2260' size-in-bits='64' id='type-id-2261'/>
    <!-- const OT::Record<OT::Feature>::sanitize_closure_t -->
    <qualified-type-def type-id='type-id-2262' const='yes' id='type-id-2263'/>
    <!-- const OT::Record<OT::Feature>::sanitize_closure_t* -->
    <pointer-type-def type-id='type-id-2263' size-in-bits='64' id='type-id-2264'/>
    <!-- const OT::Record<OT::LangSys>::sanitize_closure_t -->
    <qualified-type-def type-id='type-id-2265' const='yes' id='type-id-2266'/>
    <!-- const OT::Record<OT::LangSys>::sanitize_closure_t* -->
    <pointer-type-def type-id='type-id-2266' size-in-bits='64' id='type-id-2267'/>
    <!-- const OT::Record<OT::Script>::sanitize_closure_t -->
    <qualified-type-def type-id='type-id-2268' const='yes' id='type-id-2269'/>
    <!-- const OT::Record<OT::Script>::sanitize_closure_t* -->
    <pointer-type-def type-id='type-id-2269' size-in-bits='64' id='type-id-2270'/>
    <!-- struct hb_ot_shape_plan_t -->
    <class-decl name='hb_ot_shape_plan_t' size-in-bits='8768' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='38' column='1' id='type-id-2156'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_segment_properties_t hb_ot_shape_plan_t::props -->
        <var-decl name='props' type-id='type-id-92' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='39' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const hb_ot_complex_shaper_t* hb_ot_shape_plan_t::shaper -->
        <var-decl name='shaper' type-id='type-id-2271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- hb_ot_map_t hb_ot_shape_plan_t::map -->
        <var-decl name='map' type-id='type-id-1055' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8512'>
        <!-- void* hb_ot_shape_plan_t::data -->
        <var-decl name='data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8576'>
        <!-- hb_mask_t hb_ot_shape_plan_t::rtlm_mask -->
        <var-decl name='rtlm_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8608'>
        <!-- hb_mask_t hb_ot_shape_plan_t::frac_mask -->
        <var-decl name='frac_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8640'>
        <!-- hb_mask_t hb_ot_shape_plan_t::numr_mask -->
        <var-decl name='numr_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8672'>
        <!-- hb_mask_t hb_ot_shape_plan_t::dnom_mask -->
        <var-decl name='dnom_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8704'>
        <!-- hb_mask_t hb_ot_shape_plan_t::kern_mask -->
        <var-decl name='kern_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='44' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8736'>
        <!-- unsigned int hb_ot_shape_plan_t::has_frac -->
        <var-decl name='has_frac' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='45' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8737'>
        <!-- unsigned int hb_ot_shape_plan_t::has_kern -->
        <var-decl name='has_kern' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='46' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8738'>
        <!-- unsigned int hb_ot_shape_plan_t::has_mark -->
        <var-decl name='has_mark' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='47' column='1'/>
      </data-member>
    </class-decl>
    <!-- namespace OT -->
    <namespace-decl name='OT'>
      <!-- struct OT::AlternateSubst -->
      <class-decl name='AlternateSubst' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='556' column='1' id='type-id-1081'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::AlternateSubstFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='593' column='1' id='type-id-2272'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='594' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::AlternateSubstFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1084' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='595' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::AlternateSubstFormat1 format1;} OT::AlternateSubst::u -->
          <var-decl name='u' type-id='type-id-2272' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='596' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst*' -->
            <parameter type-id='type-id-1609' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst*' -->
            <parameter type-id='type-id-1609' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst*' -->
            <parameter type-id='type-id-1609' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst*' -->
            <parameter type-id='type-id-1609' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst*' -->
            <parameter type-id='type-id-1609' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst* const' -->
            <parameter type-id='type-id-1610' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst* const' -->
            <parameter type-id='type-id-1610' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst* const' -->
            <parameter type-id='type-id-1610' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst* const' -->
            <parameter type-id='type-id-1610' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst* const' -->
            <parameter type-id='type-id-1610' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst*' -->
            <parameter type-id='type-id-1609' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::AlternateSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::AlternateSubst* const' -->
            <parameter type-id='type-id-1610' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='574' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::AlternateSubstFormat1 -->
      <class-decl name='AlternateSubstFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='453' column='1' id='type-id-1084'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::AlternateSubstFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='544' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::AlternateSubstFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='546' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetArrayOf<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > > OT::AlternateSubstFormat1::alternateSet -->
          <var-decl name='alternateSet' type-id='type-id-2274' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='549' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AlternateSubstFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='552' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Anchor -->
      <class-decl name='Anchor' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='307' column='1' id='type-id-1087'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::AnchorFormat1 format1; OT::AnchorFormat2 format2; OT::AnchorFormat3 format3;} -->
          <union-decl name='__anonymous_union__' size-in-bits='80' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='332' column='1' id='type-id-2275'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='333' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::AnchorFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1091' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='334' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::AnchorFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1094' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='335' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::AnchorFormat3 format3 -->
              <var-decl name='format3' type-id='type-id-1097' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='336' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::AnchorFormat1 format1; OT::AnchorFormat2 format2; OT::AnchorFormat3 format3;} OT::Anchor::u -->
          <var-decl name='u' type-id='type-id-2275' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='337' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Anchor::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='339' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::AnchorFormat1 -->
      <class-decl name='AnchorFormat1' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='220' column='1' id='type-id-1091'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::AnchorFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='234' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SHORT OT::AnchorFormat1::xCoordinate -->
          <var-decl name='xCoordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='235' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::SHORT OT::AnchorFormat1::yCoordinate -->
          <var-decl name='yCoordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='236' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AnchorFormat1::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='238' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AnchorFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='238' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::AnchorFormat2 -->
      <class-decl name='AnchorFormat2' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='242' column='1' id='type-id-1094'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::AnchorFormat2::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='263' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SHORT OT::AnchorFormat2::xCoordinate -->
          <var-decl name='xCoordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='264' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::SHORT OT::AnchorFormat2::yCoordinate -->
          <var-decl name='yCoordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='265' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::AnchorFormat2::anchorPoint -->
          <var-decl name='anchorPoint' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='266' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AnchorFormat2::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='268' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AnchorFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='268' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::AnchorFormat3 -->
      <class-decl name='AnchorFormat3' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='272' column='1' id='type-id-1097'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::AnchorFormat3::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='291' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SHORT OT::AnchorFormat3::xCoordinate -->
          <var-decl name='xCoordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='292' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::SHORT OT::AnchorFormat3::yCoordinate -->
          <var-decl name='yCoordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='293' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> > OT::AnchorFormat3::xDeviceTable -->
          <var-decl name='xDeviceTable' type-id='type-id-1429' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='295' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> > OT::AnchorFormat3::yDeviceTable -->
          <var-decl name='yDeviceTable' type-id='type-id-1429' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='299' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AnchorFormat3::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='303' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AnchorFormat3::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='303' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::AnchorMatrix -->
      <class-decl name='AnchorMatrix' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='344' column='1' id='type-id-1100'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::AnchorMatrix::rows -->
          <var-decl name='rows' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='363' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > OT::AnchorMatrix::matrixZ[1] -->
          <var-decl name='matrixZ' type-id='type-id-962' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='366' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AnchorMatrix::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='369' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::EntryExitRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1104'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::EntryExitRecord OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-951' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::Index, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1107'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::Index OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-953' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2276'/>
      <!-- struct OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::IntType&lt;unsigned int, 3u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='40' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1110'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::IntType<unsigned int, 3u> OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-954' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::LookupRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1113'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::LookupRecord OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-956' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::MarkRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1116'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::MarkRecord OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-958' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1119'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::Offset<OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-960' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1121'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-964' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-1122' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1123' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1124'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-966' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1127'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-968' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1130'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-970' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1133'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-972' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1136'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-974' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1139'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-976' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1142'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-978' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1145'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-980' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1147'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-982' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1149'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-984' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1152'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-988' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<OT::PairSet::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, OT::PairSet::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;OT::PairSet::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-1153' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'OT::PairSet::sanitize_closure_t*' -->
            <parameter type-id='type-id-1495'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<OT::PairSet::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, OT::PairSet::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;OT::PairSet::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1154' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'OT::PairSet::sanitize_closure_t*' -->
            <parameter type-id='type-id-1495' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1155'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-990' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1158'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-992' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-1159' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1160' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1161'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-994' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1164'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-996' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1167'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-998' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1170'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-1000' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1173'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-1002' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-1174' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1175' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='865' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1176'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::RangeRecord OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-1004' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::Record&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1179'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::Record<OT::Feature> OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-1006' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::Record&lt;OT::LangSys&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1182'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::Record<OT::LangSys> OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-1008' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::Record&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='793' column='1' id='type-id-1185'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='892' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::Record<OT::Script> OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-1010' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='893' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='895' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::AttachList -->
      <class-decl name='AttachList' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='48' column='1' id='type-id-1188'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::AttachList::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='81' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetArrayOf<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > > OT::AttachList::attachPoint -->
          <var-decl name='attachPoint' type-id='type-id-2274' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='84' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::AttachList::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='87' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::BEInt<short int, 2> -->
      <class-decl name='BEInt&lt;short int, 2&gt;' is-struct='yes' visibility='default' id='type-id-2277'/>
      <!-- struct OT::CaretValue -->
      <class-decl name='CaretValue' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='170' column='1' id='type-id-1192'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::CaretValueFormat1 format1; OT::CaretValueFormat2 format2; OT::CaretValueFormat3 format3;} -->
          <union-decl name='__anonymous_union__' size-in-bits='48' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='193' column='1' id='type-id-2278'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='194' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CaretValueFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1196' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='195' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CaretValueFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1199' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='196' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CaretValueFormat3 format3 -->
              <var-decl name='format3' type-id='type-id-1202' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='197' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::CaretValueFormat1 format1; OT::CaretValueFormat2 format2; OT::CaretValueFormat3 format3;} OT::CaretValue::u -->
          <var-decl name='u' type-id='type-id-2278' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='198' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CaretValue::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='200' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CaretValueFormat1 -->
      <class-decl name='CaretValueFormat1' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='95' column='1' id='type-id-1196'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CaretValueFormat1::caretValueFormat -->
          <var-decl name='caretValueFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='110' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SHORT OT::CaretValueFormat1::coordinate -->
          <var-decl name='coordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='111' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CaretValueFormat1::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='113' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CaretValueFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='113' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CaretValueFormat2 -->
      <class-decl name='CaretValueFormat2' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='117' column='1' id='type-id-1199'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CaretValueFormat2::caretValueFormat -->
          <var-decl name='caretValueFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='136' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::CaretValueFormat2::caretValuePoint -->
          <var-decl name='caretValuePoint' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='137' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CaretValueFormat2::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='139' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CaretValueFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='139' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::CaretValueFormat3 -->
      <class-decl name='CaretValueFormat3' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='143' column='1' id='type-id-1202'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CaretValueFormat3::caretValueFormat -->
          <var-decl name='caretValueFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='159' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SHORT OT::CaretValueFormat3::coordinate -->
          <var-decl name='coordinate' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='160' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> > OT::CaretValueFormat3::deviceTable -->
          <var-decl name='deviceTable' type-id='type-id-1429' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='162' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CaretValueFormat3::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='166' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CaretValueFormat3::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='166' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainContext -->
      <class-decl name='ChainContext' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2142' column='1' id='type-id-1205'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::ChainContextFormat1 format1; OT::ChainContextFormat2 format2; OT::ChainContextFormat3 format3;} -->
          <union-decl name='__anonymous_union__' size-in-bits='160' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2167' column='1' id='type-id-2279'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2168' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ChainContextFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1214' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2169' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ChainContextFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1217' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2170' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ChainContextFormat3 format3 -->
              <var-decl name='format3' type-id='type-id-1220' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2171' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::ChainContextFormat1 format1; OT::ChainContextFormat2 format2; OT::ChainContextFormat3 format3;} OT::ChainContext::u -->
          <var-decl name='u' type-id='type-id-2279' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2172' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext*' -->
            <parameter type-id='type-id-1697' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::ChainContext::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext*' -->
            <parameter type-id='type-id-1697' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ChainContext::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext*' -->
            <parameter type-id='type-id-1697' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext* const' -->
            <parameter type-id='type-id-1698' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::ChainContext::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext* const' -->
            <parameter type-id='type-id-1698' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ChainContext::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext* const' -->
            <parameter type-id='type-id-1698' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ChainContext::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext* const' -->
            <parameter type-id='type-id-1698' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ChainContext::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext*' -->
            <parameter type-id='type-id-1697' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ChainContext::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ChainContext* const' -->
            <parameter type-id='type-id-1698' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2144' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ChainContextApplyLookupContext -->
      <class-decl name='ChainContextApplyLookupContext' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1573' column='1' id='type-id-1208'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::ContextApplyFuncs OT::ChainContextApplyLookupContext::funcs -->
          <var-decl name='funcs' type-id='type-id-2280' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1574' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- void* OT::ChainContextApplyLookupContext::match_data[3] -->
          <var-decl name='match_data' type-id='type-id-1080' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1575' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainContextClosureLookupContext -->
      <class-decl name='ChainContextClosureLookupContext' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1561' column='1' id='type-id-1210'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::ContextClosureFuncs OT::ChainContextClosureLookupContext::funcs -->
          <var-decl name='funcs' type-id='type-id-2281' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1562' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- void* OT::ChainContextClosureLookupContext::intersects_data[3] -->
          <var-decl name='intersects_data' type-id='type-id-1080' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1563' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainContextCollectGlyphsLookupContext -->
      <class-decl name='ChainContextCollectGlyphsLookupContext' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1567' column='1' id='type-id-1212'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::ContextCollectGlyphsFuncs OT::ChainContextCollectGlyphsLookupContext::funcs -->
          <var-decl name='funcs' type-id='type-id-2282' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1568' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- void* OT::ChainContextCollectGlyphsLookupContext::collect_data[3] -->
          <var-decl name='collect_data' type-id='type-id-1080' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1569' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainContextFormat1 -->
      <class-decl name='ChainContextFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1812' column='1' id='type-id-1214'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ChainContextFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1883' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::ChainContextFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1885' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetArrayOf<OT::ChainRuleSet> OT::ChainContextFormat1::ruleSet -->
          <var-decl name='ruleSet' type-id='type-id-2283' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1888' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ChainContextFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1891' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainContextFormat2 -->
      <class-decl name='ChainContextFormat2' size-in-bits='112' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1895' column='1' id='type-id-1217'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ChainContextFormat2::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1995' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::ChainContextFormat2::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1997' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::ChainContextFormat2::backtrackClassDef -->
          <var-decl name='backtrackClassDef' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2000' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::ChainContextFormat2::inputClassDef -->
          <var-decl name='inputClassDef' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2004' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::ChainContextFormat2::lookaheadClassDef -->
          <var-decl name='lookaheadClassDef' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2008' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::OffsetArrayOf<OT::ChainRuleSet> OT::ChainContextFormat2::ruleSet -->
          <var-decl name='ruleSet' type-id='type-id-2283' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2012' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ChainContextFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2015' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainContextFormat3 -->
      <class-decl name='ChainContextFormat3' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2019' column='1' id='type-id-1220'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ChainContextFormat3::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2121' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetArrayOf<OT::Coverage> OT::ChainContextFormat3::backtrack -->
          <var-decl name='backtrack' type-id='type-id-2284' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2123' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::OffsetArrayOf<OT::Coverage> OT::ChainContextFormat3::inputX -->
          <var-decl name='inputX' type-id='type-id-2284' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2127' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::OffsetArrayOf<OT::Coverage> OT::ChainContextFormat3::lookaheadX -->
          <var-decl name='lookaheadX' type-id='type-id-2284' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2131' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='112'>
          <!-- OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> > OT::ChainContextFormat3::lookupX -->
          <var-decl name='lookupX' type-id='type-id-1113' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2135' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ChainContextFormat3::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2138' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainContextPos -->
      <class-decl name='ChainContextPos' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1357' column='1' id='type-id-2285'>
        <!-- struct OT::ChainContext -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1205'/>
      </class-decl>
      <!-- struct OT::ChainContextSubst -->
      <class-decl name='ChainContextSubst' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='918' column='1' id='type-id-2286'>
        <!-- struct OT::ChainContext -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1205'/>
      </class-decl>
      <!-- struct OT::ChainRule -->
      <class-decl name='ChainRule' size-in-bits='144' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1674' column='1' id='type-id-1223'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::ChainRule::backtrack -->
          <var-decl name='backtrack' type-id='type-id-741' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1742' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::ChainRule::inputX -->
          <var-decl name='inputX' type-id='type-id-1325' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1746' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::ChainRule::lookaheadX -->
          <var-decl name='lookaheadX' type-id='type-id-741' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1749' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::ArrayOf<OT::LookupRecord, OT::IntType<short unsigned int, 2u> > OT::ChainRule::lookupX -->
          <var-decl name='lookupX' type-id='type-id-1113' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1752' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ChainRule::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1755' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ChainRuleSet -->
      <class-decl name='ChainRuleSet' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1759' column='1' id='type-id-1227'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetArrayOf<OT::ChainRule> OT::ChainRuleSet::rule -->
          <var-decl name='rule' type-id='type-id-2287' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1805' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ChainRuleSet::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1808' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ClassDef -->
      <class-decl name='ClassDef' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1049' column='1' id='type-id-1231'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::ClassDefFormat1 format1; OT::ClassDefFormat2 format2;} -->
          <union-decl name='__anonymous_union__' size-in-bits='80' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1086' column='1' id='type-id-2288'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1087' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ClassDefFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1235' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1088' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ClassDefFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1238' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1089' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::ClassDefFormat1 format1; OT::ClassDefFormat2 format2;} OT::ClassDef::u -->
          <var-decl name='u' type-id='type-id-2288' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1090' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ClassDef::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1092' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ClassDefFormat1 -->
      <class-decl name='ClassDefFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='935' column='1' id='type-id-1235'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ClassDefFormat1::classFormat -->
          <var-decl name='classFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='981' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::GlyphID OT::ClassDefFormat1::startGlyph -->
          <var-decl name='startGlyph' type-id='type-id-942' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='982' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::ClassDefFormat1::classValue -->
          <var-decl name='classValue' type-id='type-id-741' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='984' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ClassDefFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='986' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- void OT::ClassDefFormat1::add_class<hb_set_t>(hb_set_t*, unsigned int) -->
          <function-decl name='add_class&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='952' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ClassDefFormat1*' -->
            <parameter type-id='type-id-496' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::ClassDefFormat1::add_class<hb_set_t>(hb_set_t*, unsigned int) -->
          <function-decl name='add_class&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='952' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ClassDefFormat1* const' -->
            <parameter type-id='type-id-1724' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='952' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='klass' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='952' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ClassDefFormat2 -->
      <class-decl name='ClassDefFormat2' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='990' column='1' id='type-id-1238'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ClassDefFormat2::classFormat -->
          <var-decl name='classFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1040' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > OT::ClassDefFormat2::rangeRecord -->
          <var-decl name='rangeRecord' type-id='type-id-2092' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1042' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ClassDefFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1045' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- void OT::ClassDefFormat2::add_class<hb_set_t>(hb_set_t*, unsigned int) -->
          <function-decl name='add_class&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1008' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ClassDefFormat2*' -->
            <parameter type-id='type-id-1726' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::ClassDefFormat2::add_class<hb_set_t>(hb_set_t*, unsigned int) -->
          <function-decl name='add_class&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1008' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ClassDefFormat2* const' -->
            <parameter type-id='type-id-1727' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1008' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='klass' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1008' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::Context -->
      <class-decl name='Context' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1524' column='1' id='type-id-1241'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::ContextFormat1 format1; OT::ContextFormat2 format2; OT::ContextFormat3 format3;} -->
          <union-decl name='__anonymous_union__' size-in-bits='96' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1549' column='1' id='type-id-2290'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1550' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ContextFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1250' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1551' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ContextFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1253' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1552' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ContextFormat3 format3 -->
              <var-decl name='format3' type-id='type-id-1256' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1553' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::ContextFormat1 format1; OT::ContextFormat2 format2; OT::ContextFormat3 format3;} OT::Context::u -->
          <var-decl name='u' type-id='type-id-2290' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1554' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::Context::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context*' -->
            <parameter type-id='type-id-1729' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::Context::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context*' -->
            <parameter type-id='type-id-1729' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Context::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context*' -->
            <parameter type-id='type-id-1729' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::Context::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context* const' -->
            <parameter type-id='type-id-1730' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::Context::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context* const' -->
            <parameter type-id='type-id-1730' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Context::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context* const' -->
            <parameter type-id='type-id-1730' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Context::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context* const' -->
            <parameter type-id='type-id-1730' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Context::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context*' -->
            <parameter type-id='type-id-1729' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Context::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Context* const' -->
            <parameter type-id='type-id-1730' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1526' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ContextApplyFuncs -->
      <class-decl name='ContextApplyFuncs' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='639' column='1' id='type-id-2280'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::match_func_t OT::ContextApplyFuncs::match -->
          <var-decl name='match' type-id='type-id-2291' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='640' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextApplyLookupContext -->
      <class-decl name='ContextApplyLookupContext' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1071' column='1' id='type-id-1244'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::ContextApplyFuncs OT::ContextApplyLookupContext::funcs -->
          <var-decl name='funcs' type-id='type-id-2280' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1072' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- void* OT::ContextApplyLookupContext::match_data -->
          <var-decl name='match_data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1073' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextClosureFuncs -->
      <class-decl name='ContextClosureFuncs' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='631' column='1' id='type-id-2281'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::intersects_func_t OT::ContextClosureFuncs::intersects -->
          <var-decl name='intersects' type-id='type-id-2292' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='632' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextClosureLookupContext -->
      <class-decl name='ContextClosureLookupContext' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1059' column='1' id='type-id-1246'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::ContextClosureFuncs OT::ContextClosureLookupContext::funcs -->
          <var-decl name='funcs' type-id='type-id-2281' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1060' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- void* OT::ContextClosureLookupContext::intersects_data -->
          <var-decl name='intersects_data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1061' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextCollectGlyphsFuncs -->
      <class-decl name='ContextCollectGlyphsFuncs' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='635' column='1' id='type-id-2282'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::collect_glyphs_func_t OT::ContextCollectGlyphsFuncs::collect -->
          <var-decl name='collect' type-id='type-id-2293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='636' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextCollectGlyphsLookupContext -->
      <class-decl name='ContextCollectGlyphsLookupContext' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1065' column='1' id='type-id-1248'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::ContextCollectGlyphsFuncs OT::ContextCollectGlyphsLookupContext::funcs -->
          <var-decl name='funcs' type-id='type-id-2282' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1066' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- void* OT::ContextCollectGlyphsLookupContext::collect_data -->
          <var-decl name='collect_data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1067' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextFormat1 -->
      <class-decl name='ContextFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1250' column='1' id='type-id-1250'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ContextFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1323' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::ContextFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1325' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetArrayOf<OT::RuleSet> OT::ContextFormat1::ruleSet -->
          <var-decl name='ruleSet' type-id='type-id-2294' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1328' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ContextFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1331' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextFormat2 -->
      <class-decl name='ContextFormat2' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1336' column='1' id='type-id-1253'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ContextFormat2::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1415' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::ContextFormat2::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1417' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::ContextFormat2::classDef -->
          <var-decl name='classDef' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1420' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::OffsetArrayOf<OT::RuleSet> OT::ContextFormat2::ruleSet -->
          <var-decl name='ruleSet' type-id='type-id-2294' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1423' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ContextFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1426' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextFormat3 -->
      <class-decl name='ContextFormat3' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1431' column='1' id='type-id-1256'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ContextFormat3::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1510' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::ContextFormat3::glyphCount -->
          <var-decl name='glyphCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1511' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::ContextFormat3::lookupCount -->
          <var-decl name='lookupCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1513' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::ContextFormat3::coverageZ[1] -->
          <var-decl name='coverageZ' type-id='type-id-974' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1515' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::LookupRecord OT::ContextFormat3::lookupRecordX[1] -->
          <var-decl name='lookupRecordX' type-id='type-id-956' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1517' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ContextFormat3::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1520' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ContextPos -->
      <class-decl name='ContextPos' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1355' column='1' id='type-id-2295'>
        <!-- struct OT::Context -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1241'/>
      </class-decl>
      <!-- struct OT::ContextSubst -->
      <class-decl name='ContextSubst' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='916' column='1' id='type-id-2296'>
        <!-- struct OT::Context -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1241'/>
      </class-decl>
      <!-- struct OT::Coverage -->
      <class-decl name='Coverage' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='807' column='1' id='type-id-1259'>
        <member-type access='public'>
          <!-- struct OT::Coverage::Iter -->
          <class-decl name='Iter' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='872' column='1' id='type-id-1261'>
            <member-type access='private'>
              <!-- union {OT::CoverageFormat1::Iter format1; OT::CoverageFormat2::Iter format2;} -->
              <union-decl name='__anonymous_union__' size-in-bits='192' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='913' column='1' id='type-id-2297'>
                <data-member access='public'>
                  <!-- OT::CoverageFormat1::Iter format1 -->
                  <var-decl name='format1' type-id='type-id-1266' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='914' column='1'/>
                </data-member>
                <data-member access='public'>
                  <!-- OT::CoverageFormat2::Iter format2 -->
                  <var-decl name='format2' type-id='type-id-1271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='915' column='1'/>
                </data-member>
              </union-decl>
            </member-type>
            <data-member access='private' layout-offset-in-bits='0'>
              <!-- unsigned int OT::Coverage::Iter::format -->
              <var-decl name='format' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='912' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='64'>
              <!-- union {OT::CoverageFormat1::Iter format1; OT::CoverageFormat2::Iter format2;} OT::Coverage::Iter::u -->
              <var-decl name='u' type-id='type-id-2297' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='916' column='1'/>
            </data-member>
            <member-function access='public' constructor='yes'>
              <!-- OT::Coverage::Iter::Iter() -->
              <function-decl name='Iter' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::Coverage::Iter*' -->
                <parameter type-id='type-id-1262' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::Coverage::Iter::Iter() -->
              <function-decl name='Iter' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='873' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::Coverage::Iter* const' -->
                <parameter type-id='type-id-1263' name='this' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::CoverageFormat1 format1; OT::CoverageFormat2 format2;} -->
          <union-decl name='__anonymous_union__' size-in-bits='80' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='920' column='1' id='type-id-2298'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='921' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CoverageFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1264' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='922' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CoverageFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='923' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::CoverageFormat1 format1; OT::CoverageFormat2 format2;} OT::Coverage::u -->
          <var-decl name='u' type-id='type-id-2298' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='924' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Coverage::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='926' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void OT::Coverage::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='864' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Coverage*' -->
            <parameter type-id='type-id-1744' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::Coverage::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='864' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Coverage* const' -->
            <parameter type-id='type-id-1745' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='864' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::Coverage::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='864' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Coverage*' -->
            <parameter type-id='type-id-2299' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::Coverage::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='864' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Coverage* const' -->
            <parameter type-id='type-id-2300' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='864' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::CoverageFormat1 -->
      <class-decl name='CoverageFormat1' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='629' column='1' id='type-id-1264'>
        <member-type access='public'>
          <!-- struct OT::CoverageFormat1::Iter -->
          <class-decl name='Iter' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='672' column='1' id='type-id-1266'>
            <data-member access='private' layout-offset-in-bits='0'>
              <!-- const OT::CoverageFormat1* OT::CoverageFormat1::Iter::c -->
              <var-decl name='c' type-id='type-id-1748' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='680' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='64'>
              <!-- unsigned int OT::CoverageFormat1::Iter::i -->
              <var-decl name='i' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='681' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CoverageFormat1::coverageFormat -->
          <var-decl name='coverageFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='686' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::CoverageFormat1::glyphArray -->
          <var-decl name='glyphArray' type-id='type-id-2088' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='688' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CoverageFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='690' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- void OT::CoverageFormat1::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat1*' -->
            <parameter type-id='type-id-1748' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat1::add_coverage<hb_set_t>(hb_set_t*) -->
          <function-decl name='add_coverage&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat1*' -->
            <parameter type-id='type-id-1748' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat1::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat1* const' -->
            <parameter type-id='type-id-1749' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat1::add_coverage<hb_set_t>(hb_set_t*) -->
          <function-decl name='add_coverage&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat1* const' -->
            <parameter type-id='type-id-1749' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat1::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat1*' -->
            <parameter type-id='type-id-2301' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat1::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat1* const' -->
            <parameter type-id='type-id-2302' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='664' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::CoverageFormat2 -->
      <class-decl name='CoverageFormat2' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='694' column='1' id='type-id-1269'>
        <member-type access='public'>
          <!-- struct OT::CoverageFormat2::Iter -->
          <class-decl name='Iter' size-in-bits='192' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='769' column='1' id='type-id-1271'>
            <data-member access='private' layout-offset-in-bits='0'>
              <!-- const OT::CoverageFormat2* OT::CoverageFormat2::Iter::c -->
              <var-decl name='c' type-id='type-id-1752' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='791' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='64'>
              <!-- unsigned int OT::CoverageFormat2::Iter::i -->
              <var-decl name='i' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='792' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='96'>
              <!-- unsigned int OT::CoverageFormat2::Iter::j -->
              <var-decl name='j' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='792' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='128'>
              <!-- unsigned int OT::CoverageFormat2::Iter::coverage -->
              <var-decl name='coverage' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='792' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CoverageFormat2::coverageFormat -->
          <var-decl name='coverageFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='797' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > OT::CoverageFormat2::rangeRecord -->
          <var-decl name='rangeRecord' type-id='type-id-2092' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='799' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CoverageFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='803' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- void OT::CoverageFormat2::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat2*' -->
            <parameter type-id='type-id-1752' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat2::add_coverage<hb_set_t>(hb_set_t*) -->
          <function-decl name='add_coverage&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat2*' -->
            <parameter type-id='type-id-1752' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat2::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat2* const' -->
            <parameter type-id='type-id-1753' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat2::add_coverage<hb_set_t>(hb_set_t*) -->
          <function-decl name='add_coverage&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat2* const' -->
            <parameter type-id='type-id-1753' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat2::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat2*' -->
            <parameter type-id='type-id-2303' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::CoverageFormat2::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CoverageFormat2* const' -->
            <parameter type-id='type-id-2304' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='761' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::CursivePos -->
      <class-decl name='CursivePos' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='988' column='1' id='type-id-1274'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::CursivePosFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='80' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1009' column='1' id='type-id-2305'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1010' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CursivePosFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1277' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1011' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::CursivePosFormat1 format1;} OT::CursivePos::u -->
          <var-decl name='u' type-id='type-id-2305' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1012' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::CursivePos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CursivePos*' -->
            <parameter type-id='type-id-1755' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::CursivePos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CursivePos*' -->
            <parameter type-id='type-id-1755' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::CursivePos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CursivePos*' -->
            <parameter type-id='type-id-1755' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::CursivePos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CursivePos* const' -->
            <parameter type-id='type-id-1756' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::CursivePos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CursivePos* const' -->
            <parameter type-id='type-id-1756' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::CursivePos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::CursivePos* const' -->
            <parameter type-id='type-id-1756' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='990' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::CursivePosFormat1 -->
      <class-decl name='CursivePosFormat1' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='875' column='1' id='type-id-1277'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::CursivePosFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='976' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::CursivePosFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='978' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ArrayOf<OT::EntryExitRecord, OT::IntType<short unsigned int, 2u> > OT::CursivePosFormat1::entryExitRecord -->
          <var-decl name='entryExitRecord' type-id='type-id-1104' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='981' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::CursivePosFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='984' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Device -->
      <class-decl name='Device' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1101' column='1' id='type-id-1280'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::Device::startSize -->
          <var-decl name='startSize' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1157' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::Device::endSize -->
          <var-decl name='endSize' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1158' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::Device::deltaFormat -->
          <var-decl name='deltaFormat' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1159' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::Device::deltaValue[1] -->
          <var-decl name='deltaValue' type-id='type-id-722' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1164' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Device::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='1166' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::EntryExitRecord -->
      <class-decl name='EntryExitRecord' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='853' column='1' id='type-id-950'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > OT::EntryExitRecord::entryAnchor -->
          <var-decl name='entryAnchor' type-id='type-id-961' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='863' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > OT::EntryExitRecord::exitAnchor -->
          <var-decl name='exitAnchor' type-id='type-id-961' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='867' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::EntryExitRecord::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='871' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::EntryExitRecord::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='871' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Extension<OT::ExtensionPos> -->
      <class-decl name='Extension&lt;OT::ExtensionPos&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2199' column='1' id='type-id-1287'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::ExtensionFormat1 format1;} OT::Extension<OT::ExtensionPos>::u -->
          <var-decl name='u' type-id='type-id-2306' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2250' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- const OT::PosLookupSubTable& OT::Extension<OT::ExtensionPos>::get_subtable<OT::PosLookupSubTable>() -->
          <function-decl name='get_subtable&lt;OT::PosLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2216' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionPos>*' -->
            <parameter type-id='type-id-1768' is-artificial='yes'/>
            <!-- const OT::PosLookupSubTable& -->
            <return type-id='type-id-2008'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Extension<OT::ExtensionPos>::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionPos>*' -->
            <parameter type-id='type-id-1768' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const OT::PosLookupSubTable& OT::Extension<OT::ExtensionPos>::get_subtable<OT::PosLookupSubTable>() -->
          <function-decl name='get_subtable&lt;OT::PosLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2216' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionPos>* const' -->
            <parameter type-id='type-id-1769' name='this' is-artificial='yes'/>
            <!-- const OT::PosLookupSubTable& -->
            <return type-id='type-id-2008'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Extension<OT::ExtensionPos>::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionPos>* const' -->
            <parameter type-id='type-id-1769' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::Extension<OT::ExtensionSubst> -->
      <class-decl name='Extension&lt;OT::ExtensionSubst&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2199' column='1' id='type-id-1290'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::ExtensionFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2247' column='1' id='type-id-2306'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2248' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ExtensionFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2249' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::ExtensionFormat1 format1;} OT::Extension<OT::ExtensionSubst>::u -->
          <var-decl name='u' type-id='type-id-2306' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2250' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- const OT::SubstLookupSubTable& OT::Extension<OT::ExtensionSubst>::get_subtable<OT::SubstLookupSubTable>() -->
          <function-decl name='get_subtable&lt;OT::SubstLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2216' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- const OT::SubstLookupSubTable& -->
            <return type-id='type-id-2108'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const OT::SubstLookupSubTable& OT::Extension<OT::ExtensionSubst>::get_subtable<OT::SubstLookupSubTable>() -->
          <function-decl name='get_subtable&lt;OT::SubstLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2216' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- const OT::SubstLookupSubTable& -->
            <return type-id='type-id-2108'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const OT::SubstLookupSubTable& OT::Extension<OT::ExtensionSubst>::get_subtable<OT::SubstLookupSubTable>() -->
          <function-decl name='get_subtable&lt;OT::SubstLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2216' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- const OT::SubstLookupSubTable& -->
            <return type-id='type-id-2108'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const OT::SubstLookupSubTable& OT::Extension<OT::ExtensionSubst>::get_subtable<OT::SubstLookupSubTable>() -->
          <function-decl name='get_subtable&lt;OT::SubstLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2216' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- const OT::SubstLookupSubTable& -->
            <return type-id='type-id-2108'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>*' -->
            <parameter type-id='type-id-1771' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const OT::SubstLookupSubTable& OT::Extension<OT::ExtensionSubst>::get_subtable<OT::SubstLookupSubTable>() -->
          <function-decl name='get_subtable&lt;OT::SubstLookupSubTable&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2216' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- const OT::SubstLookupSubTable& -->
            <return type-id='type-id-2108'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::Extension<OT::ExtensionSubst>* const' -->
            <parameter type-id='type-id-1772' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2224' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ExtensionFormat1 -->
      <class-decl name='ExtensionFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2177' column='1' id='type-id-1293'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ExtensionFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2187' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::ExtensionFormat1::extensionLookupType -->
          <var-decl name='extensionLookupType' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2188' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ULONG OT::ExtensionFormat1::extensionOffset -->
          <var-decl name='extensionOffset' type-id='type-id-371' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2191' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ExtensionFormat1::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2194' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ExtensionFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2194' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::ExtensionPos -->
      <class-decl name='ExtensionPos' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1360' column='1' id='type-id-2307'>
        <!-- struct OT::Extension<OT::ExtensionPos> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1287'/>
      </class-decl>
      <!-- struct OT::ExtensionSubst -->
      <class-decl name='ExtensionSubst' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='921' column='1' id='type-id-1775'>
        <!-- struct OT::Extension<OT::ExtensionSubst> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1290'/>
      </class-decl>
      <!-- struct OT::Feature -->
      <class-decl name='Feature' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='475' column='1' id='type-id-1296'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> > OT::Feature::featureParams -->
          <var-decl name='featureParams' type-id='type-id-1434' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='532' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::IndexArray OT::Feature::lookupIndex -->
          <var-decl name='lookupIndex' type-id='type-id-1809' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='536' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Feature::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='538' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::FeatureParams -->
      <class-decl name='FeatureParams' size-in-bits='136' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='446' column='1' id='type-id-1300'>
        <member-type access='private'>
          <!-- union {OT::FeatureParamsSize size; OT::FeatureParamsStylisticSet stylisticSet; OT::FeatureParamsCharacterVariants characterVariants;} -->
          <union-decl name='__anonymous_union__' size-in-bits='136' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='466' column='1' id='type-id-2308'>
            <data-member access='public'>
              <!-- OT::FeatureParamsSize size -->
              <var-decl name='size' type-id='type-id-1307' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='467' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::FeatureParamsStylisticSet stylisticSet -->
              <var-decl name='stylisticSet' type-id='type-id-1310' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='468' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::FeatureParamsCharacterVariants characterVariants -->
              <var-decl name='characterVariants' type-id='type-id-1304' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='469' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- union {OT::FeatureParamsSize size; OT::FeatureParamsStylisticSet stylisticSet; OT::FeatureParamsCharacterVariants characterVariants;} OT::FeatureParams::u -->
          <var-decl name='u' type-id='type-id-2308' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='470' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const unsigned int OT::FeatureParams::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='471' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const unsigned int OT::FeatureParams::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='471' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::FeatureParamsCharacterVariants -->
      <class-decl name='FeatureParamsCharacterVariants' size-in-bits='136' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='406' column='1' id='type-id-1304'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::FeatureParamsCharacterVariants::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='413' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::FeatureParamsCharacterVariants::featUILableNameID -->
          <var-decl name='featUILableNameID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='414' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::FeatureParamsCharacterVariants::featUITooltipTextNameID -->
          <var-decl name='featUITooltipTextNameID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='419' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::FeatureParamsCharacterVariants::sampleTextNameID -->
          <var-decl name='sampleTextNameID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='425' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- OT::USHORT OT::FeatureParamsCharacterVariants::numNamedParameters -->
          <var-decl name='numNamedParameters' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='429' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='80'>
          <!-- OT::USHORT OT::FeatureParamsCharacterVariants::firstParamUILabelNameID -->
          <var-decl name='firstParamUILabelNameID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='431' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='96'>
          <!-- OT::ArrayOf<OT::IntType<unsigned int, 3u>, OT::IntType<short unsigned int, 2u> > OT::FeatureParamsCharacterVariants::characters -->
          <var-decl name='characters' type-id='type-id-1110' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='437' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::FeatureParamsCharacterVariants::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='442' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::FeatureParamsSize -->
      <class-decl name='FeatureParamsSize' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='262' column='1' id='type-id-1307'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::FeatureParamsSize::designSize -->
          <var-decl name='designSize' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='332' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::FeatureParamsSize::subfamilyID -->
          <var-decl name='subfamilyID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='337' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::FeatureParamsSize::subfamilyNameID -->
          <var-decl name='subfamilyNameID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='347' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::FeatureParamsSize::rangeStart -->
          <var-decl name='rangeStart' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='361' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- OT::USHORT OT::FeatureParamsSize::rangeEnd -->
          <var-decl name='rangeEnd' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='364' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::FeatureParamsSize::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='368' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::FeatureParamsSize::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='368' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::FeatureParamsStylisticSet -->
      <class-decl name='FeatureParamsStylisticSet' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='373' column='1' id='type-id-1310'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::FeatureParamsStylisticSet::version -->
          <var-decl name='version' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='381' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::FeatureParamsStylisticSet::uiNameID -->
          <var-decl name='uiNameID' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='386' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::FeatureParamsStylisticSet::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='401' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::FeatureParamsStylisticSet::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='401' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::GDEF -->
      <class-decl name='GDEF' size-in-bits='112' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='326' column='1' id='type-id-1313'>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::GDEF::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='327' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::FixedVersion OT::GDEF::version -->
          <var-decl name='version' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='402' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::GDEF::glyphClassDef -->
          <var-decl name='glyphClassDef' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='405' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> > OT::GDEF::attachList -->
          <var-decl name='attachList' type-id='type-id-1415' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='409' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> > OT::GDEF::ligCaretList -->
          <var-decl name='ligCaretList' type-id='type-id-1438' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='413' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::GDEF::markAttachClassDef -->
          <var-decl name='markAttachClassDef' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='417' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> > OT::GDEF::markGlyphSetsDef[1] -->
          <var-decl name='markGlyphSetsDef' type-id='type-id-986' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='421' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::GDEF::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='426' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::GPOS -->
      <class-decl name='GPOS' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1517' column='1' id='type-id-1316'>
        <!-- struct OT::GSUBGPOS -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1322'/>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::GPOS::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1518' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::GPOS::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1533' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::GPOS::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1533' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::GSUB -->
      <class-decl name='GSUB' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1318' column='1' id='type-id-1319'>
        <!-- struct OT::GSUBGPOS -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1322'/>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::GSUB::tableTag -->
          <var-decl name='tableTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1319' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::GSUB::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1334' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::GSUB::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1334' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::GSUBGPOS -->
      <class-decl name='GSUBGPOS' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2259' column='1' id='type-id-1322'>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::GSUBGPOS::GSUBTag -->
          <var-decl name='GSUBTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2260' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const hb_tag_t OT::GSUBGPOS::GPOSTag -->
          <var-decl name='GPOSTag' type-id='type-id-394' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2261' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::FixedVersion OT::GSUBGPOS::version -->
          <var-decl name='version' type-id='type-id-262' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2303' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> > OT::GSUBGPOS::scriptList -->
          <var-decl name='scriptList' type-id='type-id-1467' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2306' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> > OT::GSUBGPOS::featureList -->
          <var-decl name='featureList' type-id='type-id-1465' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2308' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> > OT::GSUBGPOS::lookupList -->
          <var-decl name='lookupList' type-id='type-id-1453' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2310' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::GSUBGPOS::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2312' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::GSUBGPOS::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='2312' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='927' column='1' id='type-id-1325'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::IntType<short unsigned int, 2u> OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::len -->
          <var-decl name='len' type-id='type-id-269' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='972' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::IntType<short unsigned int, 2u> OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::array[1] -->
          <var-decl name='array' type-id='type-id-718' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='973' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='975' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Index -->
      <class-decl name='Index' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='675' column='1' id='type-id-952'>
        <!-- struct OT::IntType<short unsigned int, 2u> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-269'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Index::NOT_FOUND_INDEX -->
          <var-decl name='NOT_FOUND_INDEX' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='676' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::IndexArray -->
      <class-decl name='IndexArray' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='161' column='1' id='type-id-1809'>
        <!-- struct OT::ArrayOf<OT::Index, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1107'/>
      </class-decl>
      <!-- struct OT::IntType<unsigned int, 3u> -->
      <class-decl name='IntType&lt;unsigned int, 3u&gt;' is-struct='yes' visibility='default' id='type-id-2309'/>
      <!-- struct OT::LangSys -->
      <class-decl name='LangSys' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='183' column='1' id='type-id-1330'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::Offset<OT::IntType<short unsigned int, 2u> > OT::LangSys::lookupOrderZ -->
          <var-decl name='lookupOrderZ' type-id='type-id-959' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='207' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::LangSys::reqFeatureIndex -->
          <var-decl name='reqFeatureIndex' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='209' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::IndexArray OT::LangSys::featureIndex -->
          <var-decl name='featureIndex' type-id='type-id-1809' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='212' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LangSys::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='214' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::LigCaretList -->
      <class-decl name='LigCaretList' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='237' column='1' id='type-id-1334'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::LigCaretList::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='263' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetArrayOf<OT::LigGlyph> OT::LigCaretList::ligGlyph -->
          <var-decl name='ligGlyph' type-id='type-id-2310' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='266' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LigCaretList::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='269' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::LigGlyph -->
      <class-decl name='LigGlyph' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='204' column='1' id='type-id-1338'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetArrayOf<OT::CaretValue> OT::LigGlyph::carets -->
          <var-decl name='carets' type-id='type-id-2311' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='229' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LigGlyph::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='233' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Ligature -->
      <class-decl name='Ligature' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='601' column='1' id='type-id-1342'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::GlyphID OT::Ligature::ligGlyph -->
          <var-decl name='ligGlyph' type-id='type-id-942' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='695' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::Ligature::component -->
          <var-decl name='component' type-id='type-id-1325' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='697' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Ligature::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='701' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::LigatureSet -->
      <class-decl name='LigatureSet' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='705' column='1' id='type-id-1344'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetArrayOf<OT::Ligature> OT::LigatureSet::ligature -->
          <var-decl name='ligature' type-id='type-id-2312' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='774' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LigatureSet::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='777' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::LigatureSubst -->
      <class-decl name='LigatureSubst' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='869' column='1' id='type-id-1346'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::LigatureSubstFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='909' column='1' id='type-id-2313'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='910' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::LigatureSubstFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1349' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='911' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::LigatureSubstFormat1 format1;} OT::LigatureSubst::u -->
          <var-decl name='u' type-id='type-id-2313' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='912' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst*' -->
            <parameter type-id='type-id-1834' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst*' -->
            <parameter type-id='type-id-1834' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst*' -->
            <parameter type-id='type-id-1834' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst*' -->
            <parameter type-id='type-id-1834' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst*' -->
            <parameter type-id='type-id-1834' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst* const' -->
            <parameter type-id='type-id-1835' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst* const' -->
            <parameter type-id='type-id-1835' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst* const' -->
            <parameter type-id='type-id-1835' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst* const' -->
            <parameter type-id='type-id-1835' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst* const' -->
            <parameter type-id='type-id-1835' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst*' -->
            <parameter type-id='type-id-1834' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::LigatureSubst* const' -->
            <parameter type-id='type-id-1835' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='890' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::LigatureSubstFormat1 -->
      <class-decl name='LigatureSubstFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='781' column='1' id='type-id-1349'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::LigatureSubstFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='857' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::LigatureSubstFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='859' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetArrayOf<OT::LigatureSet> OT::LigatureSubstFormat1::ligatureSet -->
          <var-decl name='ligatureSet' type-id='type-id-2314' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='862' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LigatureSubstFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='865' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Lookup -->
      <class-decl name='Lookup' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='561' column='1' id='type-id-1351'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::Lookup::lookupType -->
          <var-decl name='lookupType' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='610' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::Lookup::lookupFlag -->
          <var-decl name='lookupFlag' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='611' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > OT::Lookup::subTable -->
          <var-decl name='subTable' type-id='type-id-1119' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='613' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- OT::USHORT OT::Lookup::markFilteringSetX[1] -->
          <var-decl name='markFilteringSetX' type-id='type-id-722' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='614' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Lookup::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='618' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::LookupRecord -->
      <class-decl name='LookupRecord' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='947' column='1' id='type-id-955'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::LookupRecord::sequenceIndex -->
          <var-decl name='sequenceIndex' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='953' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::LookupRecord::lookupListIndex -->
          <var-decl name='lookupListIndex' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='955' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LookupRecord::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='958' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::LookupRecord::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='958' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::MarkArray -->
      <class-decl name='MarkArray' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='392' column='1' id='type-id-1355'>
        <!-- struct OT::ArrayOf<OT::MarkRecord, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1116'/>
      </class-decl>
      <!-- struct OT::MarkBasePos -->
      <class-decl name='MarkBasePos' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1087' column='1' id='type-id-1359'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::MarkBasePosFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='96' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1108' column='1' id='type-id-2315'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1109' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MarkBasePosFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1362' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1110' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::MarkBasePosFormat1 format1;} OT::MarkBasePos::u -->
          <var-decl name='u' type-id='type-id-2315' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1111' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MarkBasePos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkBasePos*' -->
            <parameter type-id='type-id-1851' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MarkBasePos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkBasePos*' -->
            <parameter type-id='type-id-1851' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MarkBasePos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkBasePos*' -->
            <parameter type-id='type-id-1851' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MarkBasePos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkBasePos* const' -->
            <parameter type-id='type-id-1852' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MarkBasePos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkBasePos* const' -->
            <parameter type-id='type-id-1852' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MarkBasePos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkBasePos* const' -->
            <parameter type-id='type-id-1852' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1089' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::MarkBasePosFormat1 -->
      <class-decl name='MarkBasePosFormat1' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1022' column='1' id='type-id-1362'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::MarkBasePosFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1068' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::MarkBasePosFormat1::markCoverage -->
          <var-decl name='markCoverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1070' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::MarkBasePosFormat1::baseCoverage -->
          <var-decl name='baseCoverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1073' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::MarkBasePosFormat1::classCount -->
          <var-decl name='classCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1075' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> > OT::MarkBasePosFormat1::markArray -->
          <var-decl name='markArray' type-id='type-id-1448' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1077' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > OT::MarkBasePosFormat1::baseArray -->
          <var-decl name='baseArray' type-id='type-id-963' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1080' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkBasePosFormat1::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1083' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkBasePosFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1083' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::MarkGlyphSets -->
      <class-decl name='MarkGlyphSets' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='293' column='1' id='type-id-1365'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::MarkGlyphSetsFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='312' column='1' id='type-id-2316'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='313' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MarkGlyphSetsFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1369' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='314' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::MarkGlyphSetsFormat1 format1;} OT::MarkGlyphSets::u -->
          <var-decl name='u' type-id='type-id-2316' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='315' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkGlyphSets::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='317' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::MarkGlyphSetsFormat1 -->
      <class-decl name='MarkGlyphSetsFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='274' column='1' id='type-id-1369'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::MarkGlyphSetsFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='284' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> > OT::MarkGlyphSetsFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-1139' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='286' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkGlyphSetsFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gdef-table.hh' line='289' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::MarkLigPos -->
      <class-decl name='MarkLigPos' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1208' column='1' id='type-id-1372'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::MarkLigPosFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='96' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1229' column='1' id='type-id-2317'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1230' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MarkLigPosFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1375' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1231' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::MarkLigPosFormat1 format1;} OT::MarkLigPos::u -->
          <var-decl name='u' type-id='type-id-2317' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1232' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MarkLigPos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkLigPos*' -->
            <parameter type-id='type-id-1864' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MarkLigPos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkLigPos*' -->
            <parameter type-id='type-id-1864' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MarkLigPos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkLigPos*' -->
            <parameter type-id='type-id-1864' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MarkLigPos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkLigPos* const' -->
            <parameter type-id='type-id-1865' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MarkLigPos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkLigPos* const' -->
            <parameter type-id='type-id-1865' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MarkLigPos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkLigPos* const' -->
            <parameter type-id='type-id-1865' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1210' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::MarkLigPosFormat1 -->
      <class-decl name='MarkLigPosFormat1' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1126' column='1' id='type-id-1375'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::MarkLigPosFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1188' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::MarkLigPosFormat1::markCoverage -->
          <var-decl name='markCoverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1190' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::MarkLigPosFormat1::ligatureCoverage -->
          <var-decl name='ligatureCoverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1193' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::MarkLigPosFormat1::classCount -->
          <var-decl name='classCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1196' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> > OT::MarkLigPosFormat1::markArray -->
          <var-decl name='markArray' type-id='type-id-1448' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1198' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> > OT::MarkLigPosFormat1::ligatureArray -->
          <var-decl name='ligatureArray' type-id='type-id-1451' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1201' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkLigPosFormat1::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1204' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkLigPosFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1204' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::MarkMarkPos -->
      <class-decl name='MarkMarkPos' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1327' column='1' id='type-id-1378'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::MarkMarkPosFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='96' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1348' column='1' id='type-id-2318'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1349' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MarkMarkPosFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1381' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1350' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::MarkMarkPosFormat1 format1;} OT::MarkMarkPos::u -->
          <var-decl name='u' type-id='type-id-2318' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1351' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MarkMarkPos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkMarkPos*' -->
            <parameter type-id='type-id-1870' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MarkMarkPos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkMarkPos*' -->
            <parameter type-id='type-id-1870' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MarkMarkPos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkMarkPos*' -->
            <parameter type-id='type-id-1870' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MarkMarkPos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkMarkPos* const' -->
            <parameter type-id='type-id-1871' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MarkMarkPos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkMarkPos* const' -->
            <parameter type-id='type-id-1871' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MarkMarkPos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MarkMarkPos* const' -->
            <parameter type-id='type-id-1871' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1329' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::MarkMarkPosFormat1 -->
      <class-decl name='MarkMarkPosFormat1' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1242' column='1' id='type-id-1381'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::MarkMarkPosFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1306' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::MarkMarkPosFormat1::mark1Coverage -->
          <var-decl name='mark1Coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1308' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::MarkMarkPosFormat1::mark2Coverage -->
          <var-decl name='mark2Coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1312' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::MarkMarkPosFormat1::classCount -->
          <var-decl name='classCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1315' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> > OT::MarkMarkPosFormat1::mark1Array -->
          <var-decl name='mark1Array' type-id='type-id-1448' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1317' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > OT::MarkMarkPosFormat1::mark2Array -->
          <var-decl name='mark2Array' type-id='type-id-963' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1320' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkMarkPosFormat1::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1323' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkMarkPosFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1323' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::MarkRecord -->
      <class-decl name='MarkRecord' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='374' column='1' id='type-id-957'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::MarkRecord::klass -->
          <var-decl name='klass' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='383' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > OT::MarkRecord::markAnchor -->
          <var-decl name='markAnchor' type-id='type-id-961' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='385' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkRecord::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='388' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MarkRecord::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='388' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::MultipleSubst -->
      <class-decl name='MultipleSubst' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='405' column='1' id='type-id-1387'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::MultipleSubstFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='442' column='1' id='type-id-2319'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='443' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MultipleSubstFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1390' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='444' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::MultipleSubstFormat1 format1;} OT::MultipleSubst::u -->
          <var-decl name='u' type-id='type-id-2319' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='445' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst*' -->
            <parameter type-id='type-id-1878' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst*' -->
            <parameter type-id='type-id-1878' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst*' -->
            <parameter type-id='type-id-1878' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst*' -->
            <parameter type-id='type-id-1878' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst*' -->
            <parameter type-id='type-id-1878' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst* const' -->
            <parameter type-id='type-id-1879' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst* const' -->
            <parameter type-id='type-id-1879' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst* const' -->
            <parameter type-id='type-id-1879' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst* const' -->
            <parameter type-id='type-id-1879' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst* const' -->
            <parameter type-id='type-id-1879' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst*' -->
            <parameter type-id='type-id-1878' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::MultipleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::MultipleSubst* const' -->
            <parameter type-id='type-id-1879' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='423' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::MultipleSubstFormat1 -->
      <class-decl name='MultipleSubstFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='328' column='1' id='type-id-1390'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::MultipleSubstFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='393' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::MultipleSubstFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='395' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetArrayOf<OT::Sequence> OT::MultipleSubstFormat1::sequence -->
          <var-decl name='sequence' type-id='type-id-2320' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='398' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::MultipleSubstFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='401' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='683' column='1' id='type-id-959'>
        <!-- struct OT::IntType<short unsigned int, 2u> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-269'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Offset<OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='686' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Offset<OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='686' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::AnchorMatrix> -->
      <class-decl name='OffsetArrayOf&lt;OT::AnchorMatrix&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2321'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1121'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='OffsetArrayOf&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2274'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1124'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::CaretValue> -->
      <class-decl name='OffsetArrayOf&lt;OT::CaretValue&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2311'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1127'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::ChainRule> -->
      <class-decl name='OffsetArrayOf&lt;OT::ChainRule&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2287'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1130'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::ChainRuleSet> -->
      <class-decl name='OffsetArrayOf&lt;OT::ChainRuleSet&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2283'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1133'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::Coverage> -->
      <class-decl name='OffsetArrayOf&lt;OT::Coverage&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2284'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1136'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::LigGlyph> -->
      <class-decl name='OffsetArrayOf&lt;OT::LigGlyph&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2310'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1142'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::Ligature> -->
      <class-decl name='OffsetArrayOf&lt;OT::Ligature&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2312'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1145'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::LigatureSet> -->
      <class-decl name='OffsetArrayOf&lt;OT::LigatureSet&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2314'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1147'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::Lookup> -->
      <class-decl name='OffsetArrayOf&lt;OT::Lookup&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2322'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1149'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::PairSet> -->
      <class-decl name='OffsetArrayOf&lt;OT::PairSet&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2323'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1152'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::PosLookup> -->
      <class-decl name='OffsetArrayOf&lt;OT::PosLookup&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2324'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1155'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::Rule> -->
      <class-decl name='OffsetArrayOf&lt;OT::Rule&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2325'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1161'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::RuleSet> -->
      <class-decl name='OffsetArrayOf&lt;OT::RuleSet&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2294'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1164'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::Sequence> -->
      <class-decl name='OffsetArrayOf&lt;OT::Sequence&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2320'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1167'/>
      </class-decl>
      <!-- struct OT::OffsetArrayOf<OT::SubstLookup> -->
      <class-decl name='OffsetArrayOf&lt;OT::SubstLookup&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='900' column='1' id='type-id-2326'>
        <!-- struct OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1170'/>
      </class-decl>
      <!-- struct OT::OffsetListOf<OT::AnchorMatrix> -->
      <class-decl name='OffsetListOf&lt;OT::AnchorMatrix&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='905' column='1' id='type-id-1394'>
        <!-- struct OT::OffsetArrayOf<OT::AnchorMatrix> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2321'/>
        <member-function access='public'>
          <!-- bool OT::OffsetListOf<OT::AnchorMatrix>::sanitize<unsigned int>(OT::hb_sanitize_context_t*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='917' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetListOf<OT::AnchorMatrix>*' -->
            <parameter type-id='type-id-1396' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetListOf<OT::AnchorMatrix>::sanitize<unsigned int>(OT::hb_sanitize_context_t*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='917' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetListOf<OT::AnchorMatrix>* const' -->
            <parameter type-id='type-id-1397' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='917' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='917' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetListOf<OT::Lookup> -->
      <class-decl name='OffsetListOf&lt;OT::Lookup&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='905' column='1' id='type-id-1398'>
        <!-- struct OT::OffsetArrayOf<OT::Lookup> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2322'/>
      </class-decl>
      <!-- struct OT::OffsetListOf<OT::PosLookup> -->
      <class-decl name='OffsetListOf&lt;OT::PosLookup&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='905' column='1' id='type-id-1402'>
        <!-- struct OT::OffsetArrayOf<OT::PosLookup> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2324'/>
      </class-decl>
      <!-- struct OT::OffsetListOf<OT::SubstLookup> -->
      <class-decl name='OffsetListOf&lt;OT::SubstLookup&gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='905' column='1' id='type-id-1406'>
        <!-- struct OT::OffsetArrayOf<OT::SubstLookup> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2326'/>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Anchor, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-961'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Anchor, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-963'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-965'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::AttachList, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1415'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::AttachList, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-967'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-969'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-971'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::ClassDef, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1423'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-973'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-975'>
        <!-- struct OT::Offset<OT::IntType<unsigned int, 4u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-343'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Device, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1429'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Device, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Feature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1432'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >::sanitize<const OT::Record<OT::Feature>::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, const OT::Record<OT::Feature>::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;const OT::Record&lt;OT::Feature&gt;::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-480' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'const OT::Record<OT::Feature>::sanitize_closure_t*' -->
            <parameter type-id='type-id-2264'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >::sanitize<const OT::Record<OT::Feature>::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, const OT::Record<OT::Feature>::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;const OT::Record&lt;OT::Feature&gt;::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1433' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'const OT::Record<OT::Feature>::sanitize_closure_t*' -->
            <parameter type-id='type-id-2264' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::FeatureParams, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1434'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-446' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1435' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::FeatureParams, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1435' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::LangSys, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1436'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >::sanitize<const OT::Record<OT::LangSys>::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, const OT::Record<OT::LangSys>::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;const OT::Record&lt;OT::LangSys&gt;::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-445' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'const OT::Record<OT::LangSys>::sanitize_closure_t*' -->
            <parameter type-id='type-id-2267'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >::sanitize<const OT::Record<OT::LangSys>::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, const OT::Record<OT::LangSys>::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;const OT::Record&lt;OT::LangSys&gt;::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1437' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'const OT::Record<OT::LangSys>::sanitize_closure_t*' -->
            <parameter type-id='type-id-2267' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::LigCaretList, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1438'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LigCaretList, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-977'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-979'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-981'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-983'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::MarkArray, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1448'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::MarkArray, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::MarkGlyphSets, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-985'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::OffsetListOf&lt;OT::AnchorMatrix&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1451'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-460' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1452' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::OffsetListOf&lt;OT::Lookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1453'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::OffsetListOf&lt;OT::PosLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1455'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::OffsetListOf&lt;OT::SubstLookup&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1457'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-987'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >::sanitize<OT::PairSet::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, OT::PairSet::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;OT::PairSet::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-474' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'OT::PairSet::sanitize_closure_t*' -->
            <parameter type-id='type-id-1495'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >::sanitize<OT::PairSet::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, OT::PairSet::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;OT::PairSet::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1460' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'OT::PairSet::sanitize_closure_t*' -->
            <parameter type-id='type-id-1495' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-989'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-991'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-475' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1464' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::RecordListOf&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1465'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::RecordListOf&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1467'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-993'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-995'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Script, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1473'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >::sanitize<const OT::Record<OT::Script>::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, const OT::Record<OT::Script>::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;const OT::Record&lt;OT::Script&gt;::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-479' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'const OT::Record<OT::Script>::sanitize_closure_t*' -->
            <parameter type-id='type-id-2270'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >::sanitize<const OT::Record<OT::Script>::sanitize_closure_t*>(OT::hb_sanitize_context_t*, void*, const OT::Record<OT::Script>::sanitize_closure_t*) -->
          <function-decl name='sanitize&lt;const OT::Record&lt;OT::Script&gt;::sanitize_closure_t*&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1474' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'const OT::Record<OT::Script>::sanitize_closure_t*' -->
            <parameter type-id='type-id-2270' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-997'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-999'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='741' column='1' id='type-id-1001'>
        <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-959'/>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='778' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-473' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >::sanitize<unsigned int>(OT::hb_sanitize_context_t*, void*, unsigned int) -->
          <function-decl name='sanitize&lt;unsigned int&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-1480' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_sanitize_context_t*' -->
            <parameter type-id='type-id-296' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='type-id-19' name='base' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='765' column='1'/>
            <!-- bool -->
            <return type-id='type-id-1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::PairPos -->
      <class-decl name='PairPos' size-in-bits='144' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='821' column='1' id='type-id-1481'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::PairPosFormat1 format1; OT::PairPosFormat2 format2;} -->
          <union-decl name='__anonymous_union__' size-in-bits='144' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='844' column='1' id='type-id-2327'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='845' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::PairPosFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1484' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='846' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::PairPosFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1487' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='847' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::PairPosFormat1 format1; OT::PairPosFormat2 format2;} OT::PairPos::u -->
          <var-decl name='u' type-id='type-id-2327' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='848' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::PairPos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PairPos*' -->
            <parameter type-id='type-id-1991' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::PairPos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PairPos*' -->
            <parameter type-id='type-id-1991' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::PairPos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PairPos*' -->
            <parameter type-id='type-id-1991' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::PairPos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PairPos* const' -->
            <parameter type-id='type-id-1992' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::PairPos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PairPos* const' -->
            <parameter type-id='type-id-1992' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::PairPos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PairPos* const' -->
            <parameter type-id='type-id-1992' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='823' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::PairPosFormat1 -->
      <class-decl name='PairPosFormat1' size-in-bits='96' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='654' column='1' id='type-id-1484'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::PairPosFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='700' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::PairPosFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='702' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ValueFormat OT::PairPosFormat1::valueFormat1 -->
          <var-decl name='valueFormat1' type-id='type-id-1568' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='704' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::ValueFormat OT::PairPosFormat1::valueFormat2 -->
          <var-decl name='valueFormat2' type-id='type-id-1568' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='707' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetArrayOf<OT::PairSet> OT::PairPosFormat1::pairSet -->
          <var-decl name='pairSet' type-id='type-id-2323' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='711' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::PairPosFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='714' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::PairPosFormat2 -->
      <class-decl name='PairPosFormat2' size-in-bits='144' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='718' column='1' id='type-id-1487'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::PairPosFormat2::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='791' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::PairPosFormat2::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='793' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ValueFormat OT::PairPosFormat2::valueFormat1 -->
          <var-decl name='valueFormat1' type-id='type-id-1568' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='795' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::ValueFormat OT::PairPosFormat2::valueFormat2 -->
          <var-decl name='valueFormat2' type-id='type-id-1568' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='798' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::PairPosFormat2::classDef1 -->
          <var-decl name='classDef1' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='802' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='80'>
          <!-- OT::OffsetTo<OT::ClassDef, OT::IntType<short unsigned int, 2u> > OT::PairPosFormat2::classDef2 -->
          <var-decl name='classDef2' type-id='type-id-1423' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='806' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::USHORT OT::PairPosFormat2::class1Count -->
          <var-decl name='class1Count' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='809' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='112'>
          <!-- OT::USHORT OT::PairPosFormat2::class2Count -->
          <var-decl name='class2Count' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='811' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='128'>
          <!-- OT::ValueRecord OT::PairPosFormat2::values -->
          <var-decl name='values' type-id='type-id-2328' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='813' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::PairPosFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='817' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::PairSet -->
      <class-decl name='PairSet' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='575' column='1' id='type-id-1490'>
        <member-type access='public'>
          <!-- struct OT::PairSet::sanitize_closure_t -->
          <class-decl name='sanitize_closure_t' size-in-bits='192' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='627' column='1' id='type-id-1494'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- void* OT::PairSet::sanitize_closure_t::base -->
              <var-decl name='base' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='628' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- OT::ValueFormat* OT::PairSet::sanitize_closure_t::valueFormats -->
              <var-decl name='valueFormats' type-id='type-id-1569' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='629' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- unsigned int OT::PairSet::sanitize_closure_t::len1 -->
              <var-decl name='len1' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='630' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='160'>
              <!-- unsigned int OT::PairSet::sanitize_closure_t::stride -->
              <var-decl name='stride' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='631' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::PairSet::len -->
          <var-decl name='len' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='646' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::PairSet::arrayZ[1] -->
          <var-decl name='arrayZ' type-id='type-id-722' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='647' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::PairSet::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='650' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::PosLookup -->
      <class-decl name='PosLookup' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1444' column='1' id='type-id-1029'>
        <!-- struct OT::Lookup -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1351'/>
        <member-function access='public'>
          <!-- void OT::PosLookup::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1461' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookup*' -->
            <parameter type-id='type-id-2005' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::PosLookup::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1489' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookup*' -->
            <parameter type-id='type-id-2005' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::PosLookup::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1489' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookup*' -->
            <parameter type-id='type-id-2005' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::PosLookup::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1461' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookup* const' -->
            <parameter type-id='type-id-2006' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1461' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::PosLookup::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1489' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookup* const' -->
            <parameter type-id='type-id-2006' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1489' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::PosLookup::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1489' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookup* const' -->
            <parameter type-id='type-id-2006' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1489' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::PosLookupSubTable -->
      <class-decl name='PosLookupSubTable' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1372' column='1' id='type-id-1499'>
        <member-type access='public'>
          <!-- enum OT::PosLookupSubTable::Type -->
          <enum-decl name='Type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1375' column='1' id='type-id-2329'>
            <underlying-type type-id='type-id-7'/>
            <enumerator name='Single' value='1'/>
            <enumerator name='Pair' value='2'/>
            <enumerator name='Cursive' value='3'/>
            <enumerator name='MarkBase' value='4'/>
            <enumerator name='MarkLig' value='5'/>
            <enumerator name='MarkMark' value='6'/>
            <enumerator name='Context' value='7'/>
            <enumerator name='ChainContext' value='8'/>
            <enumerator name='Extension' value='9'/>
          </enum-decl>
        </member-type>
        <member-type access='protected'>
          <!-- union {struct {OT::USHORT sub_format;} header; OT::SinglePos single; OT::PairPos pair; OT::CursivePos cursive; OT::MarkBasePos markBase; OT::MarkLigPos markLig; OT::MarkMarkPos markMark; OT::ContextPos context; OT::ChainContextPos chainContext; OT::ExtensionPos extension;} -->
          <union-decl name='__anonymous_union__' size-in-bits='160' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1424' column='1' id='type-id-2330'>
            <data-member access='public'>
              <!-- struct {OT::USHORT sub_format;} header -->
              <var-decl name='header' type-id='type-id-2331' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1427' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::SinglePos single -->
              <var-decl name='single' type-id='type-id-1544' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1428' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::PairPos pair -->
              <var-decl name='pair' type-id='type-id-1481' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1429' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::CursivePos cursive -->
              <var-decl name='cursive' type-id='type-id-1274' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1430' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MarkBasePos markBase -->
              <var-decl name='markBase' type-id='type-id-1359' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1431' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MarkLigPos markLig -->
              <var-decl name='markLig' type-id='type-id-1372' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1432' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MarkMarkPos markMark -->
              <var-decl name='markMark' type-id='type-id-1378' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1433' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ContextPos context -->
              <var-decl name='context' type-id='type-id-2295' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1434' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ChainContextPos chainContext -->
              <var-decl name='chainContext' type-id='type-id-2285' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1435' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ExtensionPos extension -->
              <var-decl name='extension' type-id='type-id-2307' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1436' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {struct {OT::USHORT sub_format;} header; OT::SinglePos single; OT::PairPos pair; OT::CursivePos cursive; OT::MarkBasePos markBase; OT::MarkLigPos markLig; OT::MarkMarkPos markMark; OT::ContextPos context; OT::ChainContextPos chainContext; OT::ExtensionPos extension;} OT::PosLookupSubTable::u -->
          <var-decl name='u' type-id='type-id-2330' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1437' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::PosLookupSubTable::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1439' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::PosLookupSubTable::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*, unsigned int) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1388' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookupSubTable*' -->
            <parameter type-id='type-id-2009' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::PosLookupSubTable::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*, unsigned int) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1388' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::PosLookupSubTable* const' -->
            <parameter type-id='type-id-2010' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1388' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='lookup_type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='1388' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::RangeRecord -->
      <class-decl name='RangeRecord' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='132' column='1' id='type-id-1003'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::GlyphID OT::RangeRecord::start -->
          <var-decl name='start' type-id='type-id-942' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='151' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='16'>
          <!-- OT::GlyphID OT::RangeRecord::end -->
          <var-decl name='end' type-id='type-id-942' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='152' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::RangeRecord::value -->
          <var-decl name='value' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='153' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::RangeRecord::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='155' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::RangeRecord::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='155' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void OT::RangeRecord::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::RangeRecord*' -->
            <parameter type-id='type-id-2013' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::RangeRecord::add_coverage<hb_set_t>(hb_set_t*) -->
          <function-decl name='add_coverage&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::RangeRecord*' -->
            <parameter type-id='type-id-2013' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::RangeRecord::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::RangeRecord* const' -->
            <parameter type-id='type-id-2014' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::RangeRecord::add_coverage<hb_set_t>(hb_set_t*) -->
          <function-decl name='add_coverage&lt;hb_set_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::RangeRecord* const' -->
            <parameter type-id='type-id-2014' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::RangeRecord::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::RangeRecord*' -->
            <parameter type-id='type-id-2013' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::RangeRecord::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::RangeRecord* const' -->
            <parameter type-id='type-id-2014' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='147' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::Record<OT::Feature> -->
      <class-decl name='Record&lt;OT::Feature&gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='59' column='1' id='type-id-1005'>
        <member-type access='public'>
          <!-- struct OT::Record<OT::Feature>::sanitize_closure_t -->
          <class-decl name='sanitize_closure_t' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2262'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::Tag OT::Record<OT::Feature>::tag -->
          <var-decl name='tag' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='74' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::Feature, OT::IntType<short unsigned int, 2u> > OT::Record<OT::Feature>::offset -->
          <var-decl name='offset' type-id='type-id-1432' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='76' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Record<OT::Feature>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='79' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Record<OT::Feature>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='79' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Record<OT::LangSys> -->
      <class-decl name='Record&lt;OT::LangSys&gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='59' column='1' id='type-id-1007'>
        <member-type access='public'>
          <!-- struct OT::Record<OT::LangSys>::sanitize_closure_t -->
          <class-decl name='sanitize_closure_t' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2265'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::Tag OT::Record<OT::LangSys>::tag -->
          <var-decl name='tag' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='74' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> > OT::Record<OT::LangSys>::offset -->
          <var-decl name='offset' type-id='type-id-1436' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='76' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Record<OT::LangSys>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='79' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Record<OT::LangSys>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='79' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Record<OT::Script> -->
      <class-decl name='Record&lt;OT::Script&gt;' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='59' column='1' id='type-id-1009'>
        <member-type access='public'>
          <!-- struct OT::Record<OT::Script>::sanitize_closure_t -->
          <class-decl name='sanitize_closure_t' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2268'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- OT::Tag OT::Record<OT::Script>::tag -->
          <var-decl name='tag' type-id='type-id-293' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='74' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- OT::OffsetTo<OT::Script, OT::IntType<short unsigned int, 2u> > OT::Record<OT::Script>::offset -->
          <var-decl name='offset' type-id='type-id-1473' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='76' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Record<OT::Script>::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='79' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Record<OT::Script>::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='79' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::RecordArrayOf<OT::Feature> -->
      <class-decl name='RecordArrayOf&lt;OT::Feature&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='83' column='1' id='type-id-2023'>
        <!-- struct OT::SortedArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2332'/>
      </class-decl>
      <!-- struct OT::RecordArrayOf<OT::LangSys> -->
      <class-decl name='RecordArrayOf&lt;OT::LangSys&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='83' column='1' id='type-id-2027'>
        <!-- struct OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2096'/>
      </class-decl>
      <!-- struct OT::RecordArrayOf<OT::Script> -->
      <class-decl name='RecordArrayOf&lt;OT::Script&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='83' column='1' id='type-id-2031'>
        <!-- struct OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2100'/>
      </class-decl>
      <!-- struct OT::RecordListOf<OT::Feature> -->
      <class-decl name='RecordListOf&lt;OT::Feature&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='120' column='1' id='type-id-1514'>
        <!-- struct OT::RecordArrayOf<OT::Feature> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2023'/>
      </class-decl>
      <!-- struct OT::RecordListOf<OT::Script> -->
      <class-decl name='RecordListOf&lt;OT::Script&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='120' column='1' id='type-id-1518'>
        <!-- struct OT::RecordArrayOf<OT::Script> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-2031'/>
      </class-decl>
      <!-- struct OT::ReverseChainSingleSubst -->
      <class-decl name='ReverseChainSingleSubst' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1052' column='1' id='type-id-1522'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::ReverseChainSingleSubstFormat1 format1;} -->
          <union-decl name='__anonymous_union__' size-in-bits='128' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1073' column='1' id='type-id-2333'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1074' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ReverseChainSingleSubstFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1525' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1075' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::ReverseChainSingleSubstFormat1 format1;} OT::ReverseChainSingleSubst::u -->
          <var-decl name='u' type-id='type-id-2333' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1076' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst*' -->
            <parameter type-id='type-id-2044' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst*' -->
            <parameter type-id='type-id-2044' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst*' -->
            <parameter type-id='type-id-2044' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst*' -->
            <parameter type-id='type-id-2044' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst*' -->
            <parameter type-id='type-id-2044' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst* const' -->
            <parameter type-id='type-id-2045' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst* const' -->
            <parameter type-id='type-id-2045' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst* const' -->
            <parameter type-id='type-id-2045' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst* const' -->
            <parameter type-id='type-id-2045' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst* const' -->
            <parameter type-id='type-id-2045' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst*' -->
            <parameter type-id='type-id-2044' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::ReverseChainSingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::ReverseChainSingleSubst* const' -->
            <parameter type-id='type-id-2045' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1054' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::ReverseChainSingleSubstFormat1 -->
      <class-decl name='ReverseChainSingleSubstFormat1' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='929' column='1' id='type-id-1525'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::ReverseChainSingleSubstFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1032' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::ReverseChainSingleSubstFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1034' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::OffsetArrayOf<OT::Coverage> OT::ReverseChainSingleSubstFormat1::backtrack -->
          <var-decl name='backtrack' type-id='type-id-2284' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1037' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::OffsetArrayOf<OT::Coverage> OT::ReverseChainSingleSubstFormat1::lookaheadX -->
          <var-decl name='lookaheadX' type-id='type-id-2284' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1041' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='96'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::ReverseChainSingleSubstFormat1::substituteX -->
          <var-decl name='substituteX' type-id='type-id-741' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1045' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::ReverseChainSingleSubstFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1048' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Rule -->
      <class-decl name='Rule' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1135' column='1' id='type-id-1528'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::Rule::inputCount -->
          <var-decl name='inputCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1181' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::USHORT OT::Rule::lookupCount -->
          <var-decl name='lookupCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1184' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::USHORT OT::Rule::inputZ[1] -->
          <var-decl name='inputZ' type-id='type-id-722' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1185' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::LookupRecord OT::Rule::lookupRecordX[1] -->
          <var-decl name='lookupRecordX' type-id='type-id-956' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1187' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Rule::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1190' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::RuleSet -->
      <class-decl name='RuleSet' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1194' column='1' id='type-id-1532'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetArrayOf<OT::Rule> OT::RuleSet::rule -->
          <var-decl name='rule' type-id='type-id-2325' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1242' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::RuleSet::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='1245' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Sanitizer<OT::GDEF> -->
      <class-decl name='Sanitizer&lt;OT::GDEF&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-2334'/>
      <!-- struct OT::Sanitizer<OT::GPOS> -->
      <class-decl name='Sanitizer&lt;OT::GPOS&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-2335'/>
      <!-- struct OT::Sanitizer<OT::GSUB> -->
      <class-decl name='Sanitizer&lt;OT::GSUB&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='292' column='1' id='type-id-2336'/>
      <!-- struct OT::Script -->
      <class-decl name='Script' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='220' column='1' id='type-id-1536'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::OffsetTo<OT::LangSys, OT::IntType<short unsigned int, 2u> > OT::Script::defaultLangSys -->
          <var-decl name='defaultLangSys' type-id='type-id-1436' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='248' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::RecordArrayOf<OT::LangSys> OT::Script::langSys -->
          <var-decl name='langSys' type-id='type-id-2027' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='251' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Script::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-common-private.hh' line='254' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::Sequence -->
      <class-decl name='Sequence' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='253' column='1' id='type-id-1540'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::Sequence::substitute -->
          <var-decl name='substitute' type-id='type-id-741' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='322' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::Sequence::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='324' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::SinglePos -->
      <class-decl name='SinglePos' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='529' column='1' id='type-id-1544'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::SinglePosFormat1 format1; OT::SinglePosFormat2 format2;} -->
          <union-decl name='__anonymous_union__' size-in-bits='80' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='552' column='1' id='type-id-2337'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='553' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::SinglePosFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1547' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='554' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::SinglePosFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1550' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='555' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::SinglePosFormat1 format1; OT::SinglePosFormat2 format2;} OT::SinglePos::u -->
          <var-decl name='u' type-id='type-id-2337' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='556' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SinglePos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SinglePos*' -->
            <parameter type-id='type-id-2069' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::SinglePos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SinglePos*' -->
            <parameter type-id='type-id-2069' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::SinglePos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SinglePos*' -->
            <parameter type-id='type-id-2069' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SinglePos::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SinglePos* const' -->
            <parameter type-id='type-id-2070' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::SinglePos::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SinglePos* const' -->
            <parameter type-id='type-id-2070' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::SinglePos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SinglePos* const' -->
            <parameter type-id='type-id-2070' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='531' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SinglePosFormat1 -->
      <class-decl name='SinglePosFormat1' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='434' column='1' id='type-id-1547'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::SinglePosFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='466' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::SinglePosFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='468' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ValueFormat OT::SinglePosFormat1::valueFormat -->
          <var-decl name='valueFormat' type-id='type-id-1568' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='470' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::ValueRecord OT::SinglePosFormat1::values -->
          <var-decl name='values' type-id='type-id-2328' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='472' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::SinglePosFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='476' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::SinglePosFormat2 -->
      <class-decl name='SinglePosFormat2' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='480' column='1' id='type-id-1550'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::SinglePosFormat2::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='515' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::SinglePosFormat2::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='517' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ValueFormat OT::SinglePosFormat2::valueFormat -->
          <var-decl name='valueFormat' type-id='type-id-1568' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='519' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='48'>
          <!-- OT::USHORT OT::SinglePosFormat2::valueCount -->
          <var-decl name='valueCount' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='521' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- OT::ValueRecord OT::SinglePosFormat2::values -->
          <var-decl name='values' type-id='type-id-2328' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='522' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::SinglePosFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='525' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::SingleSubst -->
      <class-decl name='SingleSubst' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='194' column='1' id='type-id-1553'>
        <member-type access='protected'>
          <!-- union {OT::USHORT format; OT::SingleSubstFormat1 format1; OT::SingleSubstFormat2 format2;} -->
          <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='244' column='1' id='type-id-2338'>
            <data-member access='public'>
              <!-- OT::USHORT format -->
              <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='245' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::SingleSubstFormat1 format1 -->
              <var-decl name='format1' type-id='type-id-1556' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='246' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::SingleSubstFormat2 format2 -->
              <var-decl name='format2' type-id='type-id-1558' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='247' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {OT::USHORT format; OT::SingleSubstFormat1 format1; OT::SingleSubstFormat2 format2;} OT::SingleSubst::u -->
          <var-decl name='u' type-id='type-id-2338' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='248' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst*' -->
            <parameter type-id='type-id-2078' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::SingleSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst*' -->
            <parameter type-id='type-id-2078' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::SingleSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst*' -->
            <parameter type-id='type-id-2078' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::SingleSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst*' -->
            <parameter type-id='type-id-2078' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::SingleSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst*' -->
            <parameter type-id='type-id-2078' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst* const' -->
            <parameter type-id='type-id-2079' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::SingleSubst::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst* const' -->
            <parameter type-id='type-id-2079' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::SingleSubst::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst* const' -->
            <parameter type-id='type-id-2079' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::SingleSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst* const' -->
            <parameter type-id='type-id-2079' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::SingleSubst::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst* const' -->
            <parameter type-id='type-id-2079' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst*' -->
            <parameter type-id='type-id-2078' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SingleSubst::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SingleSubst* const' -->
            <parameter type-id='type-id-2079' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='223' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SingleSubstFormat1 -->
      <class-decl name='SingleSubstFormat1' size-in-bits='48' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='39' column='1' id='type-id-1556'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::SingleSubstFormat1::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='106' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::SingleSubstFormat1::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='108' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::SHORT OT::SingleSubstFormat1::deltaGlyphID -->
          <var-decl name='deltaGlyphID' type-id='type-id-613' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='110' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::SingleSubstFormat1::static_size -->
          <var-decl name='static_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='113' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::SingleSubstFormat1::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='113' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::SingleSubstFormat2 -->
      <class-decl name='SingleSubstFormat2' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='117' column='1' id='type-id-1558'>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- OT::USHORT OT::SingleSubstFormat2::format -->
          <var-decl name='format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='182' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='16'>
          <!-- OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > OT::SingleSubstFormat2::coverage -->
          <var-decl name='coverage' type-id='type-id-973' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='184' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='32'>
          <!-- OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > OT::SingleSubstFormat2::substitute -->
          <var-decl name='substitute' type-id='type-id-741' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='187' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::SingleSubstFormat2::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='190' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-2088'>
        <!-- struct OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-741'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-2090' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-2091' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-2090' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-2091' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-2092'>
        <!-- struct OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1176'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-2094' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-2095' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-2094' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >::bsearch<hb_codepoint_t>(const hb_codepoint_t&) -->
          <function-decl name='bsearch&lt;hb_codepoint_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-2095' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_codepoint_t&' -->
            <parameter type-id='type-id-904' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::Record&lt;OT::Feature&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-2332'>
        <!-- struct OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1179'/>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::Record&lt;OT::LangSys&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-2096'>
        <!-- struct OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1182'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_tag_t>(const hb_tag_t&) -->
          <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-2098' is-artificial='yes'/>
            <!-- parameter of type 'const hb_tag_t&' -->
            <parameter type-id='type-id-2182'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_tag_t>(const hb_tag_t&) -->
          <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-2099' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_tag_t&' -->
            <parameter type-id='type-id-2182' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::Record&lt;OT::Script&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='982' column='1' id='type-id-2100'>
        <!-- struct OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> > -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1185'/>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_tag_t>(const hb_tag_t&) -->
          <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >*' -->
            <parameter type-id='type-id-2102' is-artificial='yes'/>
            <!-- parameter of type 'const hb_tag_t&' -->
            <parameter type-id='type-id-2182'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >::bsearch<hb_tag_t>(const hb_tag_t&) -->
          <function-decl name='bsearch&lt;hb_tag_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<short unsigned int, 2u> >* const' -->
            <parameter type-id='type-id-2103' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const hb_tag_t&' -->
            <parameter type-id='type-id-2182' name='x' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='984' column='1'/>
            <!-- int -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SubstLookup -->
      <class-decl name='SubstLookup' size-in-bits='80' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1154' column='1' id='type-id-1037'>
        <!-- struct OT::Lookup -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-1351'/>
        <member-function access='public'>
          <!-- void OT::SubstLookup::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1184' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup*' -->
            <parameter type-id='type-id-2105' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::SubstLookup::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup*' -->
            <parameter type-id='type-id-2105' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::SubstLookup::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup*' -->
            <parameter type-id='type-id-2105' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::SubstLookup::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup*' -->
            <parameter type-id='type-id-2105' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::SubstLookup::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup*' -->
            <parameter type-id='type-id-2105' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::SubstLookup::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1184' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup* const' -->
            <parameter type-id='type-id-2106' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1184' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::SubstLookup::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_would_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup* const' -->
            <parameter type-id='type-id-2106' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::SubstLookup::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_collect_glyphs_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup* const' -->
            <parameter type-id='type-id-2106' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::SubstLookup::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_closure_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup* const' -->
            <parameter type-id='type-id-2106' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::SubstLookup::dispatch<OT::hb_apply_context_t>(OT::hb_apply_context_t*) -->
          <function-decl name='dispatch&lt;OT::hb_apply_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup* const' -->
            <parameter type-id='type-id-2106' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1276' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::SubstLookup::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1184' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup*' -->
            <parameter type-id='type-id-2105' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::SubstLookup::add_coverage<hb_set_digest_t>(hb_set_digest_t*) -->
          <function-decl name='add_coverage&lt;hb_set_digest_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1184' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookup* const' -->
            <parameter type-id='type-id-2106' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_set_digest_t*' -->
            <parameter type-id='type-id-2200' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1184' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::SubstLookupSubTable -->
      <class-decl name='SubstLookupSubTable' size-in-bits='160' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1086' column='1' id='type-id-1562'>
        <member-type access='public'>
          <!-- enum OT::SubstLookupSubTable::Type -->
          <enum-decl name='Type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1089' column='1' id='type-id-2339'>
            <underlying-type type-id='type-id-7'/>
            <enumerator name='Single' value='1'/>
            <enumerator name='Multiple' value='2'/>
            <enumerator name='Alternate' value='3'/>
            <enumerator name='Ligature' value='4'/>
            <enumerator name='Context' value='5'/>
            <enumerator name='ChainContext' value='6'/>
            <enumerator name='Extension' value='7'/>
            <enumerator name='ReverseChainSingle' value='8'/>
          </enum-decl>
        </member-type>
        <member-type access='protected'>
          <!-- union {struct {OT::USHORT sub_format;} header; OT::SingleSubst single; OT::MultipleSubst multiple; OT::AlternateSubst alternate; OT::LigatureSubst ligature; OT::ContextSubst context; OT::ChainContextSubst chainContext; OT::ExtensionSubst extension; OT::ReverseChainSingleSubst reverseChainContextSingle;} -->
          <union-decl name='__anonymous_union__' size-in-bits='160' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1135' column='1' id='type-id-2340'>
            <member-type access='public'>
              <!-- struct {OT::USHORT sub_format;} -->
              <class-decl name='__anonymous_struct__' size-in-bits='16' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1136' column='1' id='type-id-2331'>
                <data-member access='public' layout-offset-in-bits='0'>
                  <!-- OT::USHORT sub_format -->
                  <var-decl name='sub_format' type-id='type-id-410' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1137' column='1'/>
                </data-member>
              </class-decl>
            </member-type>
            <data-member access='public'>
              <!-- struct {OT::USHORT sub_format;} header -->
              <var-decl name='header' type-id='type-id-2331' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1138' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::SingleSubst single -->
              <var-decl name='single' type-id='type-id-1553' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1139' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::MultipleSubst multiple -->
              <var-decl name='multiple' type-id='type-id-1387' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1140' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::AlternateSubst alternate -->
              <var-decl name='alternate' type-id='type-id-1081' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1141' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::LigatureSubst ligature -->
              <var-decl name='ligature' type-id='type-id-1346' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1142' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ContextSubst context -->
              <var-decl name='context' type-id='type-id-2296' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1143' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ChainContextSubst chainContext -->
              <var-decl name='chainContext' type-id='type-id-2286' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1144' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ExtensionSubst extension -->
              <var-decl name='extension' type-id='type-id-1775' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1145' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- OT::ReverseChainSingleSubst reverseChainContextSingle -->
              <var-decl name='reverseChainContextSingle' type-id='type-id-1522' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1146' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- union {struct {OT::USHORT sub_format;} header; OT::SingleSubst single; OT::MultipleSubst multiple; OT::AlternateSubst alternate; OT::LigatureSubst ligature; OT::ContextSubst context; OT::ChainContextSubst chainContext; OT::ExtensionSubst extension; OT::ReverseChainSingleSubst reverseChainContextSingle;} OT::SubstLookupSubTable::u -->
          <var-decl name='u' type-id='type-id-2340' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1147' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::SubstLookupSubTable::min_size -->
          <var-decl name='min_size' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1149' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*, unsigned int) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookupSubTable*' -->
            <parameter type-id='type-id-2109' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*, unsigned int) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookupSubTable* const' -->
            <parameter type-id='type-id-2110' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='lookup_type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*, unsigned int) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookupSubTable* const' -->
            <parameter type-id='type-id-2110' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='lookup_type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*, unsigned int) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookupSubTable*' -->
            <parameter type-id='type-id-2109' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_get_coverage_context_t>(OT::hb_get_coverage_context_t*, unsigned int) -->
          <function-decl name='dispatch&lt;OT::hb_get_coverage_context_t&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const OT::SubstLookupSubTable* const' -->
            <parameter type-id='type-id-2110' name='this' is-artificial='yes'/>
            <!-- parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' name='c' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='lookup_type' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsub-table.hh' line='1101' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::Tag -->
      <class-decl name='Tag' is-struct='yes' visibility='default' id='type-id-2341'/>
      <!-- struct OT::ValueFormat -->
      <class-decl name='ValueFormat' size-in-bits='16' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='50' column='1' id='type-id-1568'>
        <!-- struct OT::IntType<short unsigned int, 2u> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-269'/>
        <member-type access='public'>
          <!-- enum OT::ValueFormat::Flags -->
          <enum-decl name='Flags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='51' column='1' id='type-id-2342'>
            <underlying-type type-id='type-id-7'/>
            <enumerator name='xPlacement' value='1'/>
            <enumerator name='yPlacement' value='2'/>
            <enumerator name='xAdvance' value='4'/>
            <enumerator name='yAdvance' value='8'/>
            <enumerator name='xPlaDevice' value='16'/>
            <enumerator name='yPlaDevice' value='32'/>
            <enumerator name='xAdvDevice' value='64'/>
            <enumerator name='yAdvDevice' value='128'/>
            <enumerator name='ignored' value='3840'/>
            <enumerator name='reserved' value='61440'/>
            <enumerator name='devices' value='240'/>
          </enum-decl>
        </member-type>
      </class-decl>
      <!-- struct OT::hb_apply_context_t -->
      <class-decl name='hb_apply_context_t' size-in-bits='640' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='262' column='1' id='type-id-1571'>
        <member-type access='public'>
          <!-- struct OT::hb_apply_context_t::matcher_t -->
          <class-decl name='matcher_t' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='319' column='1' id='type-id-1574'>
            <member-type access='public'>
              <!-- enum OT::hb_apply_context_t::matcher_t::may_match_t -->
              <enum-decl name='may_match_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='342' column='1' id='type-id-2343'>
                <underlying-type type-id='type-id-7'/>
                <enumerator name='MATCH_NO' value='0'/>
                <enumerator name='MATCH_YES' value='1'/>
                <enumerator name='MATCH_MAYBE' value='2'/>
              </enum-decl>
            </member-type>
            <member-type access='public'>
              <!-- enum OT::hb_apply_context_t::matcher_t::may_skip_t -->
              <enum-decl name='may_skip_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='361' column='1' id='type-id-2344'>
                <underlying-type type-id='type-id-7'/>
                <enumerator name='SKIP_NO' value='0'/>
                <enumerator name='SKIP_YES' value='1'/>
                <enumerator name='SKIP_MAYBE' value='2'/>
              </enum-decl>
            </member-type>
            <data-member access='protected' layout-offset-in-bits='0'>
              <!-- unsigned int OT::hb_apply_context_t::matcher_t::lookup_props -->
              <var-decl name='lookup_props' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='384' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='32'>
              <!-- bool OT::hb_apply_context_t::matcher_t::ignore_zwnj -->
              <var-decl name='ignore_zwnj' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='385' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='40'>
              <!-- bool OT::hb_apply_context_t::matcher_t::ignore_zwj -->
              <var-decl name='ignore_zwj' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='386' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='64'>
              <!-- hb_mask_t OT::hb_apply_context_t::matcher_t::mask -->
              <var-decl name='mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='387' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='96'>
              <!-- uint8_t OT::hb_apply_context_t::matcher_t::syllable -->
              <var-decl name='syllable' type-id='type-id-138' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='388' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='128'>
              <!-- OT::hb_apply_context_t::matcher_t::match_func_t OT::hb_apply_context_t::matcher_t::match_func -->
              <var-decl name='match_func' type-id='type-id-2291' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='389' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='192'>
              <!-- void* OT::hb_apply_context_t::matcher_t::match_data -->
              <var-decl name='match_data' type-id='type-id-19' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='390' column='1'/>
            </data-member>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::matcher_t::matcher_t() -->
              <function-decl name='matcher_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::matcher_t*' -->
                <parameter type-id='type-id-1575' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::matcher_t::matcher_t() -->
              <function-decl name='matcher_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='320' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::matcher_t* const' -->
                <parameter type-id='type-id-1576' name='this' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::matcher_t::matcher_t() -->
              <function-decl name='matcher_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::matcher_t*' -->
                <parameter type-id='type-id-1575' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::matcher_t::matcher_t() -->
              <function-decl name='matcher_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='320' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::matcher_t* const' -->
                <parameter type-id='type-id-1576' name='this' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <member-type access='public'>
          <!-- struct OT::hb_apply_context_t::skipping_backward_iterator_t -->
          <class-decl name='skipping_backward_iterator_t' size-in-bits='512' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='465' column='1' id='type-id-1579'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- unsigned int OT::hb_apply_context_t::skipping_backward_iterator_t::idx -->
              <var-decl name='idx' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='524' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='64'>
              <!-- OT::hb_apply_context_t* OT::hb_apply_context_t::skipping_backward_iterator_t::c -->
              <var-decl name='c' type-id='type-id-1572' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='526' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='128'>
              <!-- OT::hb_apply_context_t::matcher_t OT::hb_apply_context_t::skipping_backward_iterator_t::matcher -->
              <var-decl name='matcher' type-id='type-id-1574' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='527' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='384'>
              <!-- const OT::USHORT* OT::hb_apply_context_t::skipping_backward_iterator_t::match_glyph_data -->
              <var-decl name='match_glyph_data' type-id='type-id-2114' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='528' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='448'>
              <!-- unsigned int OT::hb_apply_context_t::skipping_backward_iterator_t::num_items -->
              <var-decl name='num_items' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='530' column='1'/>
            </data-member>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_backward_iterator_t::skipping_backward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_backward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_backward_iterator_t*' -->
                <parameter type-id='type-id-1580' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_backward_iterator_t::skipping_backward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_backward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_backward_iterator_t* const' -->
                <parameter type-id='type-id-1581' name='this' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572' name='c_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='466' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='start_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='467' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='num_items_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='468' column='1'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1' name='context_match' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='469' column='1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_backward_iterator_t::skipping_backward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_backward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='466' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_backward_iterator_t* const' -->
                <parameter type-id='type-id-1581' name='this' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572' name='c_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='466' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='start_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='467' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='num_items_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='468' column='1'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1' name='context_match' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='469' column='1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <member-type access='public'>
          <!-- struct OT::hb_apply_context_t::skipping_forward_iterator_t -->
          <class-decl name='skipping_forward_iterator_t' size-in-bits='512' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='394' column='1' id='type-id-1582'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- unsigned int OT::hb_apply_context_t::skipping_forward_iterator_t::idx -->
              <var-decl name='idx' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='454' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='64'>
              <!-- OT::hb_apply_context_t* OT::hb_apply_context_t::skipping_forward_iterator_t::c -->
              <var-decl name='c' type-id='type-id-1572' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='456' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='128'>
              <!-- OT::hb_apply_context_t::matcher_t OT::hb_apply_context_t::skipping_forward_iterator_t::matcher -->
              <var-decl name='matcher' type-id='type-id-1574' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='457' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='384'>
              <!-- const OT::USHORT* OT::hb_apply_context_t::skipping_forward_iterator_t::match_glyph_data -->
              <var-decl name='match_glyph_data' type-id='type-id-2114' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='458' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='448'>
              <!-- unsigned int OT::hb_apply_context_t::skipping_forward_iterator_t::num_items -->
              <var-decl name='num_items' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='460' column='1'/>
            </data-member>
            <data-member access='protected' layout-offset-in-bits='480'>
              <!-- unsigned int OT::hb_apply_context_t::skipping_forward_iterator_t::end -->
              <var-decl name='end' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='461' column='1'/>
            </data-member>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_forward_iterator_t::skipping_forward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_forward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_forward_iterator_t*' -->
                <parameter type-id='type-id-1583' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_forward_iterator_t::skipping_forward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_forward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_forward_iterator_t* const' -->
                <parameter type-id='type-id-1584' name='this' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572' name='c_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='start_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='396' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='num_items_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='397' column='1'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1' name='context_match' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='398' column='1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_forward_iterator_t::skipping_forward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_forward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_forward_iterator_t* const' -->
                <parameter type-id='type-id-1584' name='this' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572' name='c_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='start_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='396' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='num_items_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='397' column='1'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1' name='context_match' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='398' column='1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_forward_iterator_t::skipping_forward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_forward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_forward_iterator_t*' -->
                <parameter type-id='type-id-1583' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- OT::hb_apply_context_t::skipping_forward_iterator_t::skipping_forward_iterator_t(OT::hb_apply_context_t*, unsigned int, unsigned int, bool) -->
              <function-decl name='skipping_forward_iterator_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'OT::hb_apply_context_t::skipping_forward_iterator_t* const' -->
                <parameter type-id='type-id-1584' name='this' is-artificial='yes'/>
                <!-- parameter of type 'OT::hb_apply_context_t*' -->
                <parameter type-id='type-id-1572' name='c_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='395' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='start_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='396' column='1'/>
                <!-- parameter of type 'unsigned int' -->
                <parameter type-id='type-id-18' name='num_items_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='397' column='1'/>
                <!-- parameter of type 'bool' -->
                <parameter type-id='type-id-1' name='context_match' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='398' column='1'/>
                <!-- void -->
                <return type-id='type-id-27'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <member-type access='public'>
          <!-- typedef OT::hb_apply_context_t::return_t (*)(OT::hb_apply_context_t*, unsigned int) OT::hb_apply_context_t::recurse_func_t -->
          <typedef-decl name='recurse_func_t' type-id='type-id-1578' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='266' column='1' id='type-id-2345'/>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::hb_apply_context_t::max_debug_depth -->
          <var-decl name='max_debug_depth' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='264' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned int OT::hb_apply_context_t::table_index -->
          <var-decl name='table_index' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='282' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- hb_font_t* OT::hb_apply_context_t::font -->
          <var-decl name='font' type-id='type-id-158' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='283' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- hb_face_t* OT::hb_apply_context_t::face -->
          <var-decl name='face' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='284' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- hb_buffer_t* OT::hb_apply_context_t::buffer -->
          <var-decl name='buffer' type-id='type-id-155' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='285' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- hb_direction_t OT::hb_apply_context_t::direction -->
          <var-decl name='direction' type-id='type-id-75' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='286' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='288'>
          <!-- hb_mask_t OT::hb_apply_context_t::lookup_mask -->
          <var-decl name='lookup_mask' type-id='type-id-99' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='287' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- bool OT::hb_apply_context_t::auto_zwj -->
          <var-decl name='auto_zwj' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='288' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- OT::hb_apply_context_t::recurse_func_t OT::hb_apply_context_t::recurse_func -->
          <var-decl name='recurse_func' type-id='type-id-2345' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='289' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='448'>
          <!-- unsigned int OT::hb_apply_context_t::nesting_level_left -->
          <var-decl name='nesting_level_left' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='290' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='480'>
          <!-- unsigned int OT::hb_apply_context_t::lookup_props -->
          <var-decl name='lookup_props' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='291' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='512'>
          <!-- const OT::GDEF& OT::hb_apply_context_t::gdef -->
          <var-decl name='gdef' type-id='type-id-1792' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='292' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='576'>
          <!-- bool OT::hb_apply_context_t::has_glyph_classes -->
          <var-decl name='has_glyph_classes' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='293' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='608'>
          <!-- unsigned int OT::hb_apply_context_t::debug_depth -->
          <var-decl name='debug_depth' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='294' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_apply_context_t::hb_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*) -->
          <function-decl name='hb_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- parameter of type 'hb_font_t*' -->
            <parameter type-id='type-id-158'/>
            <!-- parameter of type 'hb_buffer_t*' -->
            <parameter type-id='type-id-155'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::CursivePosFormat1>(const OT::CursivePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::CursivePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CursivePosFormat1&' -->
            <parameter type-id='type-id-1758'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1&' -->
            <parameter type-id='type-id-1854'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1&' -->
            <parameter type-id='type-id-1867'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1&' -->
            <parameter type-id='type-id-1873'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SinglePosFormat1>(const OT::SinglePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1&' -->
            <parameter type-id='type-id-2072'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SinglePosFormat2>(const OT::SinglePosFormat2&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2&' -->
            <parameter type-id='type-id-2075'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::PairPosFormat1>(const OT::PairPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1&' -->
            <parameter type-id='type-id-1994'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::PairPosFormat2>(const OT::PairPosFormat2&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2&' -->
            <parameter type-id='type-id-1997'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_apply_context_t::hb_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*) -->
          <function-decl name='hb_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='table_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1'/>
            <!-- parameter of type 'hb_font_t*' -->
            <parameter type-id='type-id-158' name='font_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='298' column='1'/>
            <!-- parameter of type 'hb_buffer_t*' -->
            <parameter type-id='type-id-155' name='buffer_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='299' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::CursivePosFormat1>(const OT::CursivePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::CursivePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CursivePosFormat1&' -->
            <parameter type-id='type-id-1758' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1&' -->
            <parameter type-id='type-id-1854' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1&' -->
            <parameter type-id='type-id-1867' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1&' -->
            <parameter type-id='type-id-1873' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SinglePosFormat1>(const OT::SinglePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1&' -->
            <parameter type-id='type-id-2072' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::SinglePosFormat2>(const OT::SinglePosFormat2&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2&' -->
            <parameter type-id='type-id-2075' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::PairPosFormat1>(const OT::PairPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1&' -->
            <parameter type-id='type-id-1994' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_apply_context_t::return_t OT::hb_apply_context_t::dispatch<OT::PairPosFormat2>(const OT::PairPosFormat2&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2&' -->
            <parameter type-id='type-id-1997' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='268' column='1'/>
            <!-- typedef OT::hb_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_apply_context_t::hb_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*) -->
          <function-decl name='hb_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- parameter of type 'hb_font_t*' -->
            <parameter type-id='type-id-158'/>
            <!-- parameter of type 'hb_buffer_t*' -->
            <parameter type-id='type-id-155'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_apply_context_t::hb_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*) -->
          <function-decl name='hb_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='table_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1'/>
            <!-- parameter of type 'hb_font_t*' -->
            <parameter type-id='type-id-158' name='font_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='298' column='1'/>
            <!-- parameter of type 'hb_buffer_t*' -->
            <parameter type-id='type-id-155' name='buffer_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='299' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_apply_context_t::hb_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*) -->
          <function-decl name='hb_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t*' -->
            <parameter type-id='type-id-1572' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- parameter of type 'hb_font_t*' -->
            <parameter type-id='type-id-158'/>
            <!-- parameter of type 'hb_buffer_t*' -->
            <parameter type-id='type-id-155'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_apply_context_t::hb_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*) -->
          <function-decl name='hb_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_apply_context_t* const' -->
            <parameter type-id='type-id-1573' name='this' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='table_index_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='297' column='1'/>
            <!-- parameter of type 'hb_font_t*' -->
            <parameter type-id='type-id-158' name='font_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='298' column='1'/>
            <!-- parameter of type 'hb_buffer_t*' -->
            <parameter type-id='type-id-155' name='buffer_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='299' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::hb_closure_context_t -->
      <class-decl name='hb_closure_context_t' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='56' column='1' id='type-id-1585'>
        <member-type access='public'>
          <!-- typedef OT::hb_closure_context_t::return_t (*)(OT::hb_closure_context_t*, unsigned int) OT::hb_closure_context_t::recurse_func_t -->
          <typedef-decl name='recurse_func_t' type-id='type-id-1589' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='60' column='1' id='type-id-2346'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef hb_void_t OT::hb_closure_context_t::return_t -->
          <typedef-decl name='return_t' type-id='type-id-1079' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='59' column='1' id='type-id-2135'/>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::hb_closure_context_t::max_debug_depth -->
          <var-decl name='max_debug_depth' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='58' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- hb_face_t* OT::hb_closure_context_t::face -->
          <var-decl name='face' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='76' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- hb_set_t* OT::hb_closure_context_t::glyphs -->
          <var-decl name='glyphs' type-id='type-id-2289' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='77' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- OT::hb_closure_context_t::recurse_func_t OT::hb_closure_context_t::recurse_func -->
          <var-decl name='recurse_func' type-id='type-id-2346' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='78' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- unsigned int OT::hb_closure_context_t::nesting_level_left -->
          <var-decl name='nesting_level_left' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='79' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='224'>
          <!-- unsigned int OT::hb_closure_context_t::debug_depth -->
          <var-decl name='debug_depth' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='80' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_closure_context_t::hb_closure_context_t(hb_face_t*, hb_set_t*, unsigned int) -->
          <function-decl name='hb_closure_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_closure_context_t::return_t OT::hb_closure_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='62' column='1'/>
            <!-- typedef OT::hb_closure_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_closure_context_t::hb_closure_context_t(hb_face_t*, hb_set_t*, unsigned int) -->
          <function-decl name='hb_closure_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='82' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t* const' -->
            <parameter type-id='type-id-1587' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167' name='face_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='82' column='1'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='83' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='nesting_level_left_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='84' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_closure_context_t::hb_closure_context_t(hb_face_t*, hb_set_t*, unsigned int) -->
          <function-decl name='hb_closure_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_closure_context_t*' -->
            <parameter type-id='type-id-1586' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::hb_collect_glyphs_context_t -->
      <class-decl name='hb_collect_glyphs_context_t' size-in-bits='66944' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='144' column='1' id='type-id-1590'>
        <member-type access='public'>
          <!-- typedef OT::hb_collect_glyphs_context_t::return_t (*)(OT::hb_collect_glyphs_context_t*, unsigned int) OT::hb_collect_glyphs_context_t::recurse_func_t -->
          <typedef-decl name='recurse_func_t' type-id='type-id-1594' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='148' column='1' id='type-id-2347'/>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::hb_collect_glyphs_context_t::max_debug_depth -->
          <var-decl name='max_debug_depth' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='146' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- hb_face_t* OT::hb_collect_glyphs_context_t::face -->
          <var-decl name='face' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='193' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- hb_set_t* OT::hb_collect_glyphs_context_t::before -->
          <var-decl name='before' type-id='type-id-2289' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='194' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- hb_set_t* OT::hb_collect_glyphs_context_t::input -->
          <var-decl name='input' type-id='type-id-2289' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='195' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- hb_set_t* OT::hb_collect_glyphs_context_t::after -->
          <var-decl name='after' type-id='type-id-2289' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='196' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- hb_set_t* OT::hb_collect_glyphs_context_t::output -->
          <var-decl name='output' type-id='type-id-2289' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='197' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- OT::hb_collect_glyphs_context_t::recurse_func_t OT::hb_collect_glyphs_context_t::recurse_func -->
          <var-decl name='recurse_func' type-id='type-id-2347' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='198' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- hb_set_t OT::hb_collect_glyphs_context_t::recursed_lookups -->
          <var-decl name='recursed_lookups' type-id='type-id-2348' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='199' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='66880'>
          <!-- unsigned int OT::hb_collect_glyphs_context_t::nesting_level_left -->
          <var-decl name='nesting_level_left' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='200' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='66912'>
          <!-- unsigned int OT::hb_collect_glyphs_context_t::debug_depth -->
          <var-decl name='debug_depth' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='201' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_collect_glyphs_context_t::hb_collect_glyphs_context_t(hb_face_t*, hb_set_t*, hb_set_t*, hb_set_t*, hb_set_t*, unsigned int) -->
          <function-decl name='hb_collect_glyphs_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='203' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- OT::hb_collect_glyphs_context_t::~hb_collect_glyphs_context_t(int) -->
          <function-decl name='~hb_collect_glyphs_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='type-id-11' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SinglePosFormat1>(const OT::SinglePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1&' -->
            <parameter type-id='type-id-2072'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SinglePosFormat2>(const OT::SinglePosFormat2&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2&' -->
            <parameter type-id='type-id-2075'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::CursivePosFormat1>(const OT::CursivePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::CursivePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CursivePosFormat1&' -->
            <parameter type-id='type-id-1758'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1&' -->
            <parameter type-id='type-id-1854'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1&' -->
            <parameter type-id='type-id-1867'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1&' -->
            <parameter type-id='type-id-1873'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::PairPosFormat1>(const OT::PairPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1&' -->
            <parameter type-id='type-id-1994'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::PairPosFormat2>(const OT::PairPosFormat2&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2&' -->
            <parameter type-id='type-id-1997'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SinglePosFormat1>(const OT::SinglePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1&' -->
            <parameter type-id='type-id-2072' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::SinglePosFormat2>(const OT::SinglePosFormat2&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2&' -->
            <parameter type-id='type-id-2075' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::CursivePosFormat1>(const OT::CursivePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::CursivePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CursivePosFormat1&' -->
            <parameter type-id='type-id-1758' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1&' -->
            <parameter type-id='type-id-1854' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1&' -->
            <parameter type-id='type-id-1867' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1&' -->
            <parameter type-id='type-id-1873' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::PairPosFormat1>(const OT::PairPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1&' -->
            <parameter type-id='type-id-1994' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::PairPosFormat2>(const OT::PairPosFormat2&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2&' -->
            <parameter type-id='type-id-1997' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_collect_glyphs_context_t::return_t OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='150' column='1'/>
            <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
            <return type-id='type-id-2135'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_collect_glyphs_context_t::hb_collect_glyphs_context_t(hb_face_t*, hb_set_t*, hb_set_t*, hb_set_t*, hb_set_t*, unsigned int) -->
          <function-decl name='hb_collect_glyphs_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='203' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167' name='face_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='203' column='1'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs_before' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='204' column='1'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs_input' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='205' column='1'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs_after' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='206' column='1'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289' name='glyphs_output' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='207' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='nesting_level_left_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='208' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- OT::hb_collect_glyphs_context_t::~hb_collect_glyphs_context_t(const int) -->
          <function-decl name='~hb_collect_glyphs_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='221' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t* const' -->
            <parameter type-id='type-id-1592' name='this' is-artificial='yes'/>
            <!-- artificial parameter of type 'const int' -->
            <parameter type-id='type-id-395' name='__in_chrg' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_collect_glyphs_context_t::hb_collect_glyphs_context_t(hb_face_t*, hb_set_t*, hb_set_t*, hb_set_t*, hb_set_t*, unsigned int) -->
          <function-decl name='hb_collect_glyphs_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='203' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'hb_set_t*' -->
            <parameter type-id='type-id-2289'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- OT::hb_collect_glyphs_context_t::~hb_collect_glyphs_context_t(int) -->
          <function-decl name='~hb_collect_glyphs_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_collect_glyphs_context_t*' -->
            <parameter type-id='type-id-1591' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='type-id-11' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::hb_get_coverage_context_t -->
      <class-decl name='hb_get_coverage_context_t' size-in-bits='32' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='236' column='1' id='type-id-1595'>
        <member-type access='public'>
          <!-- typedef const OT::Coverage& OT::hb_get_coverage_context_t::return_t -->
          <typedef-decl name='return_t' type-id='type-id-1743' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='239' column='1' id='type-id-2273'/>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::hb_get_coverage_context_t::max_debug_depth -->
          <var-decl name='max_debug_depth' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='238' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned int OT::hb_get_coverage_context_t::debug_depth -->
          <var-decl name='debug_depth' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='247' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_get_coverage_context_t::hb_get_coverage_context_t() -->
          <function-decl name='hb_get_coverage_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SinglePosFormat1>(const OT::SinglePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1&' -->
            <parameter type-id='type-id-2072'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SinglePosFormat2>(const OT::SinglePosFormat2&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2&' -->
            <parameter type-id='type-id-2075'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::PairPosFormat1>(const OT::PairPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1&' -->
            <parameter type-id='type-id-1994'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::PairPosFormat2>(const OT::PairPosFormat2&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2&' -->
            <parameter type-id='type-id-1997'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::CursivePosFormat1>(const OT::CursivePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::CursivePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CursivePosFormat1&' -->
            <parameter type-id='type-id-1758'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1&' -->
            <parameter type-id='type-id-1854'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1&' -->
            <parameter type-id='type-id-1867'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1&' -->
            <parameter type-id='type-id-1873'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SinglePosFormat1>(const OT::SinglePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat1&' -->
            <parameter type-id='type-id-2072' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SinglePosFormat2>(const OT::SinglePosFormat2&) -->
          <function-decl name='dispatch&lt;OT::SinglePosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SinglePosFormat2&' -->
            <parameter type-id='type-id-2075' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::PairPosFormat1>(const OT::PairPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat1&' -->
            <parameter type-id='type-id-1994' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::PairPosFormat2>(const OT::PairPosFormat2&) -->
          <function-decl name='dispatch&lt;OT::PairPosFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::PairPosFormat2&' -->
            <parameter type-id='type-id-1997' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::CursivePosFormat1>(const OT::CursivePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::CursivePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::CursivePosFormat1&' -->
            <parameter type-id='type-id-1758' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MarkBasePosFormat1>(const OT::MarkBasePosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkBasePosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkBasePosFormat1&' -->
            <parameter type-id='type-id-1854' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MarkLigPosFormat1>(const OT::MarkLigPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkLigPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkLigPosFormat1&' -->
            <parameter type-id='type-id-1867' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MarkMarkPosFormat1>(const OT::MarkMarkPosFormat1&) -->
          <function-decl name='dispatch&lt;OT::MarkMarkPosFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MarkMarkPosFormat1&' -->
            <parameter type-id='type-id-1873' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_get_coverage_context_t::hb_get_coverage_context_t() -->
          <function-decl name='hb_get_coverage_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='244' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_get_coverage_context_t::hb_get_coverage_context_t() -->
          <function-decl name='hb_get_coverage_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t*' -->
            <parameter type-id='type-id-1596' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_get_coverage_context_t::return_t OT::hb_get_coverage_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='241' column='1'/>
            <!-- typedef OT::hb_get_coverage_context_t::return_t -->
            <return type-id='type-id-2273'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_get_coverage_context_t::hb_get_coverage_context_t() -->
          <function-decl name='hb_get_coverage_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='244' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_get_coverage_context_t* const' -->
            <parameter type-id='type-id-1597' name='this' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct OT::hb_would_apply_context_t -->
      <class-decl name='hb_would_apply_context_t' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='106' column='1' id='type-id-1598'>
        <data-member access='public' static='yes'>
          <!-- static const unsigned int OT::hb_would_apply_context_t::max_debug_depth -->
          <var-decl name='max_debug_depth' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='108' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- hb_face_t* OT::hb_would_apply_context_t::face -->
          <var-decl name='face' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='115' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- const hb_codepoint_t* OT::hb_would_apply_context_t::glyphs -->
          <var-decl name='glyphs' type-id='type-id-145' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='116' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- unsigned int OT::hb_would_apply_context_t::len -->
          <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='117' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- bool OT::hb_would_apply_context_t::zero_context -->
          <var-decl name='zero_context' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='118' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- unsigned int OT::hb_would_apply_context_t::debug_depth -->
          <var-decl name='debug_depth' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='119' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_would_apply_context_t::hb_would_apply_context_t(hb_face_t*, const hb_codepoint_t*, unsigned int, bool) -->
          <function-decl name='hb_would_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='121' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167'/>
            <!-- parameter of type 'const hb_codepoint_t*' -->
            <parameter type-id='type-id-145'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='type-id-1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::SingleSubstFormat1>(const OT::SingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat1&' -->
            <parameter type-id='type-id-2081' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::SingleSubstFormat2>(const OT::SingleSubstFormat2&) -->
          <function-decl name='dispatch&lt;OT::SingleSubstFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::SingleSubstFormat2&' -->
            <parameter type-id='type-id-2085' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::MultipleSubstFormat1>(const OT::MultipleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::MultipleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::MultipleSubstFormat1&' -->
            <parameter type-id='type-id-1881' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::AlternateSubstFormat1>(const OT::AlternateSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::AlternateSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::AlternateSubstFormat1&' -->
            <parameter type-id='type-id-1612' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>(const OT::ReverseChainSingleSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::ReverseChainSingleSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ReverseChainSingleSubstFormat1&' -->
            <parameter type-id='type-id-2047' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::LigatureSubstFormat1>(const OT::LigatureSubstFormat1&) -->
          <function-decl name='dispatch&lt;OT::LigatureSubstFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::LigatureSubstFormat1&' -->
            <parameter type-id='type-id-1837' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ContextFormat1>(const OT::ContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat1&' -->
            <parameter type-id='type-id-1732' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ContextFormat2>(const OT::ContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat2&' -->
            <parameter type-id='type-id-1736' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ContextFormat3>(const OT::ContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ContextFormat3&' -->
            <parameter type-id='type-id-1740' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat1>(const OT::ChainContextFormat1&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat1&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat1&' -->
            <parameter type-id='type-id-1700' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat2>(const OT::ChainContextFormat2&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat2&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat2&' -->
            <parameter type-id='type-id-1704' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- OT::hb_would_apply_context_t::return_t OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat3>(const OT::ChainContextFormat3&) -->
          <function-decl name='dispatch&lt;OT::ChainContextFormat3&gt;' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const OT::ChainContextFormat3&' -->
            <parameter type-id='type-id-1708' name='obj' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='111' column='1'/>
            <!-- typedef OT::hb_would_apply_context_t::return_t -->
            <return type-id='type-id-418'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_would_apply_context_t::hb_would_apply_context_t(hb_face_t*, const hb_codepoint_t*, unsigned int, bool) -->
          <function-decl name='hb_would_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='121' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t* const' -->
            <parameter type-id='type-id-1600' name='this' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167' name='face_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='121' column='1'/>
            <!-- parameter of type 'const hb_codepoint_t*' -->
            <parameter type-id='type-id-145' name='glyphs_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='122' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='len_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='123' column='1'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='type-id-1' name='zero_context_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='124' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- OT::hb_would_apply_context_t::hb_would_apply_context_t(hb_face_t*, const hb_codepoint_t*, unsigned int, bool) -->
          <function-decl name='hb_would_apply_context_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='121' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::hb_would_apply_context_t*' -->
            <parameter type-id='type-id-1599' is-artificial='yes'/>
            <!-- parameter of type 'hb_face_t*' -->
            <parameter type-id='type-id-167'/>
            <!-- parameter of type 'const hb_codepoint_t*' -->
            <parameter type-id='type-id-145'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='type-id-1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef OT::USHORT OT::Value -->
      <typedef-decl name='Value' type-id='type-id-410' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='45' column='1' id='type-id-1011'/>
      <!-- typedef Value[1] OT::ValueRecord -->
      <typedef-decl name='ValueRecord' type-id='type-id-1012' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gpos-table.hh' line='47' column='1' id='type-id-2328'/>
      <!-- typedef void (*)(hb_set_t*, const OT::USHORT&, void*) OT::collect_glyphs_func_t -->
      <typedef-decl name='collect_glyphs_func_t' type-id='type-id-2203' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='627' column='1' id='type-id-2293'/>
      <!-- typedef bool (*)(hb_set_t*, const OT::USHORT&, void*) OT::intersects_func_t -->
      <typedef-decl name='intersects_func_t' type-id='type-id-1604' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='626' column='1' id='type-id-2292'/>
      <!-- typedef bool (*)(hb_codepoint_t, const OT::USHORT&, void*) OT::match_func_t -->
      <typedef-decl name='match_func_t' type-id='type-id-1602' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout-gsubgpos-private.hh' line='628' column='1' id='type-id-2291'/>
      <!-- struct OT::Supplier<OT::EntryExitRecord> -->
      <class-decl name='Supplier&lt;OT::EntryExitRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2204'/>
      <!-- struct OT::Supplier<OT::Index> -->
      <class-decl name='Supplier&lt;OT::Index&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2206'/>
      <!-- struct OT::Supplier<OT::IntType<unsigned int, 3u> > -->
      <class-decl name='Supplier&lt;OT::IntType&lt;unsigned int, 3u&gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2208'/>
      <!-- struct OT::Supplier<OT::LookupRecord> -->
      <class-decl name='Supplier&lt;OT::LookupRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2210'/>
      <!-- struct OT::Supplier<OT::MarkRecord> -->
      <class-decl name='Supplier&lt;OT::MarkRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2212'/>
      <!-- struct OT::Supplier<OT::Offset<OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2214'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::AnchorMatrix, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2216'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::ArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::ArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2218'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::CaretValue, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::CaretValue, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2220'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::ChainRule, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::ChainRule, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2222'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::ChainRuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2224'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2226'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2228'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::LigGlyph, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::LigGlyph, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2230'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2232'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2234'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Lookup, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Lookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2236'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::PairSet, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::PairSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2238'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::PosLookup, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::PosLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2240'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::PosLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2242'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Rule, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Rule, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2244'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::RuleSet, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::RuleSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2246'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Sequence, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Sequence, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2248'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::SubstLookup, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::SubstLookup, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2250'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2252'/>
      <!-- struct OT::Supplier<OT::RangeRecord> -->
      <class-decl name='Supplier&lt;OT::RangeRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2254'/>
      <!-- struct OT::Supplier<OT::Record<OT::Feature> > -->
      <class-decl name='Supplier&lt;OT::Record&lt;OT::Feature&gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2256'/>
      <!-- struct OT::Supplier<OT::Record<OT::LangSys> > -->
      <class-decl name='Supplier&lt;OT::Record&lt;OT::LangSys&gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2258'/>
      <!-- struct OT::Supplier<OT::Record<OT::Script> > -->
      <class-decl name='Supplier&lt;OT::Record&lt;OT::Script&gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2260'/>
      <!-- struct OT::Supplier<unsigned int> -->
      <class-decl name='Supplier&lt;unsigned int&gt;' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='487' column='1' id='type-id-1565'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- unsigned int OT::Supplier<unsigned int>::len -->
          <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='511' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- const unsigned int* OT::Supplier<unsigned int>::head -->
          <var-decl name='head' type-id='type-id-2349' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='512' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void OT::Supplier<unsigned int>::Supplier(const unsigned int*, unsigned int) -->
          <function-decl name='Supplier' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::Supplier<unsigned int>*' -->
            <parameter type-id='type-id-2350' is-artificial='yes'/>
            <!-- parameter of type 'const unsigned int*' -->
            <parameter type-id='type-id-2349'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void OT::Supplier<unsigned int>::Supplier(const OT::Supplier<unsigned int>&) -->
          <function-decl name='Supplier' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='508' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::Supplier<unsigned int>*' -->
            <parameter type-id='type-id-2350' is-artificial='yes'/>
            <!-- parameter of type 'const OT::Supplier<unsigned int>&' -->
            <parameter type-id='type-id-2351'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void OT::Supplier<unsigned int>::Supplier(const unsigned int*, unsigned int) -->
          <function-decl name='Supplier' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'OT::Supplier<unsigned int>* const' -->
            <parameter type-id='type-id-2352' name='this' is-artificial='yes'/>
            <!-- parameter of type 'const unsigned int*' -->
            <parameter type-id='type-id-2349' name='array' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='type-id-18' name='len_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-open-type-private.hh' line='488' column='1'/>
            <!-- void -->
            <return type-id='type-id-27'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- hb_bool_t hb_ot_layout_has_glyph_classes(hb_face_t*) -->
    <function-decl name='hb_ot_layout_has_glyph_classes' mangled-name='hb_ot_layout_has_glyph_classes' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='126' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_has_glyph_classes'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='126' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_ot_layout_glyph_class_t hb_ot_layout_get_glyph_class(hb_face_t*, hb_codepoint_t) -->
    <function-decl name='hb_ot_layout_get_glyph_class' mangled-name='hb_ot_layout_get_glyph_class' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='132' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_get_glyph_class'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='132' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='133' column='1'/>
      <!-- enum hb_ot_layout_glyph_class_t -->
      <return type-id='type-id-1014'/>
    </function-decl>
    <!-- void hb_ot_layout_get_glyphs_in_class(hb_face_t*, hb_ot_layout_glyph_class_t, hb_set_t*) -->
    <function-decl name='hb_ot_layout_get_glyphs_in_class' mangled-name='hb_ot_layout_get_glyphs_in_class' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='139' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_get_glyphs_in_class'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='139' column='1'/>
      <!-- parameter of type 'enum hb_ot_layout_glyph_class_t' -->
      <parameter type-id='type-id-1014' name='klass' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='140' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='141' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_get_attach_points(hb_face_t*, hb_codepoint_t, unsigned int, unsigned int*, unsigned int*) -->
    <function-decl name='hb_ot_layout_get_attach_points' mangled-name='hb_ot_layout_get_attach_points' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='147' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_get_attach_points'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='147' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='148' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='149' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='point_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='150' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='point_array' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='151' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_get_ligature_carets(hb_font_t*, hb_direction_t, hb_codepoint_t, unsigned int, unsigned int*, int*) -->
    <function-decl name='hb_ot_layout_get_ligature_carets' mangled-name='hb_ot_layout_get_ligature_carets' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='157' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_get_ligature_carets'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='157' column='1'/>
      <!-- parameter of type 'enum hb_direction_t' -->
      <parameter type-id='type-id-75' name='direction' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='158' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='glyph' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='159' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='160' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='caret_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='161' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-616' name='caret_array' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='162' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_table_get_script_tags(hb_face_t*, hb_tag_t, unsigned int, unsigned int*, hb_tag_t*) -->
    <function-decl name='hb_ot_layout_table_get_script_tags' mangled-name='hb_ot_layout_table_get_script_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='185' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_table_get_script_tags'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='185' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='186' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='187' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='script_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='188' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='script_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='189' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_table_find_script(hb_face_t*, hb_tag_t, hb_tag_t, unsigned int*) -->
    <function-decl name='hb_ot_layout_table_find_script' mangled-name='hb_ot_layout_table_find_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='199' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_table_find_script'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='199' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='200' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='script_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='201' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='202' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_table_choose_script(hb_face_t*, hb_tag_t, const hb_tag_t*, unsigned int*, hb_tag_t*) -->
    <function-decl name='hb_ot_layout_table_choose_script' mangled-name='hb_ot_layout_table_choose_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='229' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_table_choose_script'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='230' column='1'/>
      <!-- parameter of type 'const hb_tag_t*' -->
      <parameter type-id='type-id-2183' name='script_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='231' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='232' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='chosen_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='233' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_table_get_feature_tags(hb_face_t*, hb_tag_t, unsigned int, unsigned int*, hb_tag_t*) -->
    <function-decl name='hb_ot_layout_table_get_feature_tags' mangled-name='hb_ot_layout_table_get_feature_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='277' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_table_get_feature_tags'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='277' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='278' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='279' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='feature_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='280' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='feature_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='281' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_script_get_language_tags(hb_face_t*, hb_tag_t, unsigned int, unsigned int, unsigned int*, hb_tag_t*) -->
    <function-decl name='hb_ot_layout_script_get_language_tags' mangled-name='hb_ot_layout_script_get_language_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='290' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_script_get_language_tags'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='290' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='291' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='292' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='293' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='language_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='294' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='language_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='295' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_script_find_language(hb_face_t*, hb_tag_t, unsigned int, hb_tag_t, unsigned int*) -->
    <function-decl name='hb_ot_layout_script_find_language' mangled-name='hb_ot_layout_script_find_language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='303' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_script_find_language'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='303' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='304' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='305' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='language_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='306' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='language_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='307' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_language_get_required_feature_index(hb_face_t*, hb_tag_t, unsigned int, unsigned int, unsigned int*) -->
    <function-decl name='hb_ot_layout_language_get_required_feature_index' mangled-name='hb_ot_layout_language_get_required_feature_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='324' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_language_get_required_feature_index'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='324' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='325' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='326' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='language_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='327' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='feature_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='328' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_language_get_required_feature(hb_face_t*, hb_tag_t, unsigned int, unsigned int, unsigned int*, hb_tag_t*) -->
    <function-decl name='hb_ot_layout_language_get_required_feature' mangled-name='hb_ot_layout_language_get_required_feature' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='339' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_language_get_required_feature'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='339' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='340' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='341' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='language_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='342' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='feature_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='343' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='feature_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='344' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_language_get_feature_indexes(hb_face_t*, hb_tag_t, unsigned int, unsigned int, unsigned int, unsigned int*, unsigned int*) -->
    <function-decl name='hb_ot_layout_language_get_feature_indexes' mangled-name='hb_ot_layout_language_get_feature_indexes' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='357' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_language_get_feature_indexes'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='357' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='358' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='359' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='language_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='360' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='361' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='feature_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='362' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='feature_indexes' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='363' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_language_get_feature_tags(hb_face_t*, hb_tag_t, unsigned int, unsigned int, unsigned int, unsigned int*, hb_tag_t*) -->
    <function-decl name='hb_ot_layout_language_get_feature_tags' mangled-name='hb_ot_layout_language_get_feature_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='372' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_language_get_feature_tags'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='372' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='373' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='374' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='language_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='375' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='376' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='feature_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='377' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='feature_tags' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='378' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_language_find_feature(hb_face_t*, hb_tag_t, unsigned int, unsigned int, hb_tag_t, unsigned int*) -->
    <function-decl name='hb_ot_layout_language_find_feature' mangled-name='hb_ot_layout_language_find_feature' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='397' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_language_find_feature'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='397' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='398' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='script_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='399' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='language_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='400' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='feature_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='401' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='feature_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='402' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_feature_get_lookups(hb_face_t*, hb_tag_t, unsigned int, unsigned int, unsigned int*, unsigned int*) -->
    <function-decl name='hb_ot_layout_feature_get_lookups' mangled-name='hb_ot_layout_feature_get_lookups' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='423' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_feature_get_lookups'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='423' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='424' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='feature_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='425' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='start_offset' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='426' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='lookup_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='427' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='lookup_indexes' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='428' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- unsigned int hb_ot_layout_table_get_lookup_count(hb_face_t*, hb_tag_t) -->
    <function-decl name='hb_ot_layout_table_get_lookup_count' mangled-name='hb_ot_layout_table_get_lookup_count' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='437' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_table_get_lookup_count'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='438' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void hb_ot_layout_collect_lookups(hb_face_t*, hb_tag_t, const hb_tag_t*, const hb_tag_t*, const hb_tag_t*, hb_set_t*) -->
    <function-decl name='hb_ot_layout_collect_lookups' mangled-name='hb_ot_layout_collect_lookups' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='594' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_collect_lookups'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='594' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='595' column='1'/>
      <!-- parameter of type 'const hb_tag_t*' -->
      <parameter type-id='type-id-2183' name='scripts' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='596' column='1'/>
      <!-- parameter of type 'const hb_tag_t*' -->
      <parameter type-id='type-id-2183' name='languages' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='597' column='1'/>
      <!-- parameter of type 'const hb_tag_t*' -->
      <parameter type-id='type-id-2183' name='features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='598' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='lookup_indexes' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='599' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_ot_layout_lookup_collect_glyphs(hb_face_t*, hb_tag_t, unsigned int, hb_set_t*, hb_set_t*, hb_set_t*, hb_set_t*) -->
    <function-decl name='hb_ot_layout_lookup_collect_glyphs' mangled-name='hb_ot_layout_lookup_collect_glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='635' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_lookup_collect_glyphs'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='635' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='636' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='lookup_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='637' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='glyphs_before' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='638' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='glyphs_input' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='639' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='glyphs_after' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='640' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='glyphs_output' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='641' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_has_substitution(hb_face_t*) -->
    <function-decl name='hb_ot_layout_has_substitution' mangled-name='hb_ot_layout_has_substitution' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='674' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_has_substitution'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='674' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_lookup_would_substitute(hb_face_t*, unsigned int, const hb_codepoint_t*, unsigned int, hb_bool_t) -->
    <function-decl name='hb_ot_layout_lookup_would_substitute' mangled-name='hb_ot_layout_lookup_would_substitute' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='680' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_lookup_would_substitute'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='680' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='lookup_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='681' column='1'/>
      <!-- parameter of type 'const hb_codepoint_t*' -->
      <parameter type-id='type-id-145' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='682' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='glyphs_length' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='683' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='zero_context' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='684' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_ot_layout_lookup_substitute_closure(hb_face_t*, unsigned int, hb_set_t*) -->
    <function-decl name='hb_ot_layout_lookup_substitute_closure' mangled-name='hb_ot_layout_lookup_substitute_closure' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='718' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_lookup_substitute_closure'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='718' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='lookup_index' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='719' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='720' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_has_positioning(hb_face_t*) -->
    <function-decl name='hb_ot_layout_has_positioning' mangled-name='hb_ot_layout_has_positioning' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='734' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_has_positioning'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='734' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_ot_layout_get_size_params(hb_face_t*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*) -->
    <function-decl name='hb_ot_layout_get_size_params' mangled-name='hb_ot_layout_get_size_params' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='752' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_layout_get_size_params'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='752' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='design_size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='753' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='subfamily_id' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='754' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='subfamily_name_id' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='755' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='range_start' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='756' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-67' name='range_end' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-layout.cc' line='757' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- OT::hb_apply_context_t::return_t (OT::hb_apply_context_t*, unsigned int) -->
    <function-type size-in-bits='64' id='type-id-1577'>
      <!-- parameter of type 'OT::hb_apply_context_t*' -->
      <parameter type-id='type-id-1572'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18'/>
      <!-- typedef OT::hb_apply_context_t::return_t -->
      <return type-id='type-id-418'/>
    </function-type>
    <!-- bool (hb_set_t*, const OT::USHORT&, void*) -->
    <function-type size-in-bits='64' id='type-id-1603'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289'/>
      <!-- parameter of type 'const OT::USHORT&' -->
      <parameter type-id='type-id-2113'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- bool (hb_codepoint_t, const OT::USHORT&, void*) -->
    <function-type size-in-bits='64' id='type-id-1601'>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'const OT::USHORT&' -->
      <parameter type-id='type-id-2113'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- OT::hb_closure_context_t::return_t (OT::hb_closure_context_t*, unsigned int) -->
    <function-type size-in-bits='64' id='type-id-1588'>
      <!-- parameter of type 'OT::hb_closure_context_t*' -->
      <parameter type-id='type-id-1586'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18'/>
      <!-- typedef OT::hb_closure_context_t::return_t -->
      <return type-id='type-id-2135'/>
    </function-type>
    <!-- OT::hb_collect_glyphs_context_t::return_t (OT::hb_collect_glyphs_context_t*, unsigned int) -->
    <function-type size-in-bits='64' id='type-id-1593'>
      <!-- parameter of type 'OT::hb_collect_glyphs_context_t*' -->
      <parameter type-id='type-id-1591'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18'/>
      <!-- typedef OT::hb_collect_glyphs_context_t::return_t -->
      <return type-id='type-id-2135'/>
    </function-type>
    <!-- void (const hb_ot_shape_plan_t*, hb_font_t*, hb_buffer_t*) -->
    <function-type size-in-bits='64' id='type-id-2201'>
      <!-- parameter of type 'const hb_ot_shape_plan_t*' -->
      <parameter type-id='type-id-1062'/>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-type>
    <!-- void (hb_set_t*, const OT::USHORT&, void*) -->
    <function-type size-in-bits='64' id='type-id-2202'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289'/>
      <!-- parameter of type 'const OT::USHORT&' -->
      <parameter type-id='type-id-2113'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-map.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- enum hb_ot_map_feature_flags_t -->
    <enum-decl name='hb_ot_map_feature_flags_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='155' column='1' id='type-id-2353'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='F_NONE' value='0'/>
      <enumerator name='F_GLOBAL' value='1'/>
      <enumerator name='F_HAS_FALLBACK' value='2'/>
      <enumerator name='F_MANUAL_ZWJ' value='4'/>
    </enum-decl>
    <!-- hb_ot_map_builder_t::feature_info_t[32] -->
    <array-type-def dimensions='1' type-id='type-id-2354' size-in-bits='7168' id='type-id-2355'>
      <!-- <anonymous range>[32] -->
      <subrange length='32' lower-bound='0' upper-bound='31' type-id='type-id-4' id='type-id-1019'/>
    </array-type-def>
    <!-- hb_ot_map_builder_t::stage_info_t[8] -->
    <array-type-def dimensions='1' type-id='type-id-2356' size-in-bits='1024' id='type-id-2357'>
      <!-- <anonymous range>[8] -->
      <subrange length='8' lower-bound='0' upper-bound='7' type-id='type-id-4' id='type-id-70'/>
    </array-type-def>
    <!-- hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>[2] -->
    <array-type-def dimensions='1' type-id='type-id-2358' size-in-bits='2304' id='type-id-2359'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' lower-bound='0' upper-bound='1' type-id='type-id-4' id='type-id-10'/>
    </array-type-def>
    <!-- struct hb_ot_map_builder_t -->
    <class-decl name='hb_ot_map_builder_t' size-in-bits='10240' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='181' column='1' id='type-id-2360'>
      <member-type access='private'>
        <!-- struct hb_ot_map_builder_t::feature_info_t -->
        <class-decl name='feature_info_t' size-in-bits='224' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='210' column='1' id='type-id-2354'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- hb_tag_t hb_ot_map_builder_t::feature_info_t::tag -->
            <var-decl name='tag' type-id='type-id-189' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='211' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='32'>
            <!-- unsigned int hb_ot_map_builder_t::feature_info_t::seq -->
            <var-decl name='seq' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='212' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- unsigned int hb_ot_map_builder_t::feature_info_t::max_value -->
            <var-decl name='max_value' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='213' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='96'>
            <!-- hb_ot_map_feature_flags_t hb_ot_map_builder_t::feature_info_t::flags -->
            <var-decl name='flags' type-id='type-id-2353' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='214' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- unsigned int hb_ot_map_builder_t::feature_info_t::default_value -->
            <var-decl name='default_value' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='215' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='160'>
            <!-- unsigned int hb_ot_map_builder_t::feature_info_t::stage[2] -->
            <var-decl name='stage' type-id='type-id-97' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='216' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <member-type access='private'>
        <!-- struct hb_ot_map_builder_t::stage_info_t -->
        <class-decl name='stage_info_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='222' column='1' id='type-id-2356'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- unsigned int hb_ot_map_builder_t::stage_info_t::index -->
            <var-decl name='index' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='223' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- hb_ot_map_t::stage_map_t::pause_func_t hb_ot_map_builder_t::stage_info_t::pause_func -->
            <var-decl name='pause_func' type-id='type-id-1056' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='224' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_face_t* hb_ot_map_builder_t::face -->
        <var-decl name='face' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='231' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_segment_properties_t hb_ot_map_builder_t::props -->
        <var-decl name='props' type-id='type-id-92' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='232' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- hb_tag_t hb_ot_map_builder_t::chosen_script[2] -->
        <var-decl name='chosen_script' type-id='type-id-1026' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='234' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- bool hb_ot_map_builder_t::found_script[2] -->
        <var-decl name='found_script' type-id='type-id-1013' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='235' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='416'>
        <!-- unsigned int hb_ot_map_builder_t::script_index[2] -->
        <var-decl name='script_index' type-id='type-id-97' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='236' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- unsigned int hb_ot_map_builder_t::language_index[2] -->
        <var-decl name='language_index' type-id='type-id-97' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='236' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='544'>
        <!-- unsigned int hb_ot_map_builder_t::current_stage[2] -->
        <var-decl name='current_stage' type-id='type-id-97' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='240' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='640'>
        <!-- hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u> hb_ot_map_builder_t::feature_infos -->
        <var-decl name='feature_infos' type-id='type-id-2361' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='241' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='7936'>
        <!-- hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u> hb_ot_map_builder_t::stages[2] -->
        <var-decl name='stages' type-id='type-id-2359' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='242' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t*' -->
          <parameter type-id='type-id-2362' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map.cc' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t* const' -->
          <parameter type-id='type-id-2363' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167' name='face_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map.cc' line='72' column='1'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175' name='props_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map.cc' line='73' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map.cc' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t* const' -->
          <parameter type-id='type-id-2363' name='this' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167' name='face_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map.cc' line='72' column='1'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175' name='props_' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map.cc' line='73' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t*' -->
          <parameter type-id='type-id-2362' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t*' -->
          <parameter type-id='type-id-2362' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t*' -->
          <parameter type-id='type-id-2362' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t*' -->
          <parameter type-id='type-id-2362' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t*' -->
          <parameter type-id='type-id-2362' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, const hb_segment_properties_t*) -->
        <function-decl name='hb_ot_map_builder_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-map-private.hh' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_map_builder_t*' -->
          <parameter type-id='type-id-2362' is-artificial='yes'/>
          <!-- parameter of type 'hb_face_t*' -->
          <parameter type-id='type-id-167'/>
          <!-- parameter of type 'const hb_segment_properties_t*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u> -->
    <class-decl name='hb_prealloced_array_t&lt;hb_ot_map_builder_t::feature_info_t, 32u&gt;' size-in-bits='7296' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='329' column='1' id='type-id-2361'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u>::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u>::allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_ot_map_builder_t::feature_info_t* hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u>::array -->
        <var-decl name='array' type-id='type-id-2364' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_ot_map_builder_t::feature_info_t hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u>::static_array[32] -->
        <var-decl name='static_array' type-id='type-id-2355' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='333' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u> -->
    <class-decl name='hb_prealloced_array_t&lt;hb_ot_map_builder_t::stage_info_t, 8u&gt;' size-in-bits='1152' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='329' column='1' id='type-id-2358'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>::allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_ot_map_builder_t::stage_info_t* hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>::array -->
        <var-decl name='array' type-id='type-id-2365' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_ot_map_builder_t::stage_info_t hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>::static_array[8] -->
        <var-decl name='static_array' type-id='type-id-2357' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-private.hh' line='333' column='1'/>
      </data-member>
    </class-decl>
    <!-- const hb_ot_map_builder_t::feature_info_t -->
    <qualified-type-def type-id='type-id-2354' const='yes' id='type-id-2366'/>
    <!-- const hb_ot_map_builder_t::feature_info_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2366' size-in-bits='64' id='type-id-2367'/>
    <!-- const hb_ot_map_builder_t::feature_info_t* -->
    <pointer-type-def type-id='type-id-2366' size-in-bits='64' id='type-id-2368'/>
    <!-- const hb_ot_map_builder_t::stage_info_t -->
    <qualified-type-def type-id='type-id-2356' const='yes' id='type-id-2369'/>
    <!-- const hb_ot_map_builder_t::stage_info_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2369' size-in-bits='64' id='type-id-2370'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u> -->
    <qualified-type-def type-id='type-id-2361' const='yes' id='type-id-2371'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u>* -->
    <pointer-type-def type-id='type-id-2371' size-in-bits='64' id='type-id-2372'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u> -->
    <qualified-type-def type-id='type-id-2358' const='yes' id='type-id-2373'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>* -->
    <pointer-type-def type-id='type-id-2373' size-in-bits='64' id='type-id-2374'/>
    <!-- hb_ot_map_builder_t* -->
    <pointer-type-def type-id='type-id-2360' size-in-bits='64' id='type-id-2362'/>
    <!-- hb_ot_map_builder_t* const -->
    <qualified-type-def type-id='type-id-2362' const='yes' id='type-id-2363'/>
    <!-- hb_ot_map_builder_t::feature_info_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2354' size-in-bits='64' id='type-id-2375'/>
    <!-- hb_ot_map_builder_t::feature_info_t* -->
    <pointer-type-def type-id='type-id-2354' size-in-bits='64' id='type-id-2364'/>
    <!-- hb_ot_map_builder_t::stage_info_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2356' size-in-bits='64' id='type-id-2376'/>
    <!-- hb_ot_map_builder_t::stage_info_t* -->
    <pointer-type-def type-id='type-id-2356' size-in-bits='64' id='type-id-2365'/>
    <!-- hb_ot_map_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-1055' size-in-bits='64' id='type-id-2377'/>
    <!-- hb_ot_map_t* const -->
    <qualified-type-def type-id='type-id-1059' const='yes' id='type-id-1065'/>
    <!-- hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u>* -->
    <pointer-type-def type-id='type-id-2361' size-in-bits='64' id='type-id-2378'/>
    <!-- hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32u>* const -->
    <qualified-type-def type-id='type-id-2378' const='yes' id='type-id-2379'/>
    <!-- hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>* -->
    <pointer-type-def type-id='type-id-2358' size-in-bits='64' id='type-id-2380'/>
    <!-- hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8u>* const -->
    <qualified-type-def type-id='type-id-2380' const='yes' id='type-id-2381'/>
    <!-- hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* const -->
    <qualified-type-def type-id='type-id-2187' const='yes' id='type-id-2382'/>
    <!-- hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32u>* const -->
    <qualified-type-def type-id='type-id-2188' const='yes' id='type-id-2383'/>
    <!-- hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4u>* const -->
    <qualified-type-def type-id='type-id-2189' const='yes' id='type-id-2384'/>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-arabic.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1119' size-in-bits='64' id='type-id-584'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1145' size-in-bits='64' id='type-id-605'/>
    <!-- OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1147' size-in-bits='64' id='type-id-603'/>
    <!-- OT::BEInt<short int, 2>* const -->
    <qualified-type-def type-id='type-id-254' const='yes' id='type-id-2385'/>
    <!-- OT::CoverageFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1264' size-in-bits='64' id='type-id-589'/>
    <!-- OT::CoverageFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-1269' size-in-bits='64' id='type-id-593'/>
    <!-- OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-1325' size-in-bits='64' id='type-id-607'/>
    <!-- OT::LigatureSubstFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1349' size-in-bits='64' id='type-id-610'/>
    <!-- OT::SingleSubstFormat1& -->
    <reference-type-def kind='lvalue' type-id='type-id-1556' size-in-bits='64' id='type-id-596'/>
    <!-- OT::SingleSubstFormat2& -->
    <reference-type-def kind='lvalue' type-id='type-id-1558' size-in-bits='64' id='type-id-600'/>
    <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-2088' size-in-bits='64' id='type-id-590'/>
    <!-- OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-2088' size-in-bits='64' id='type-id-588'/>
    <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-2092' size-in-bits='64' id='type-id-594'/>
    <!-- OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-2092' size-in-bits='64' id='type-id-592'/>
    <!-- OT::SubstLookup* const& -->
    <reference-type-def kind='lvalue' type-id='type-id-1561' size-in-bits='64' id='type-id-1054'/>
    <!-- OT::Supplier<OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-802' size-in-bits='64' id='type-id-947'/>
    <!-- OT::Supplier<OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-947' const='yes' id='type-id-949'/>
    <!-- OT::Supplier<unsigned int>* -->
    <pointer-type-def type-id='type-id-1565' size-in-bits='64' id='type-id-2350'/>
    <!-- OT::Supplier<unsigned int>* const -->
    <qualified-type-def type-id='type-id-2350' const='yes' id='type-id-2352'/>
    <!-- OT::USHORT& -->
    <reference-type-def kind='lvalue' type-id='type-id-410' size-in-bits='64' id='type-id-611'/>
    <!-- OT::hb_serialize_context_t* const -->
    <qualified-type-def type-id='type-id-299' const='yes' id='type-id-612'/>
    <!-- const OT::Coverage -->
    <qualified-type-def type-id='type-id-2386' const='yes' id='type-id-2387'/>
    <!-- const OT::Coverage* -->
    <pointer-type-def type-id='type-id-2387' size-in-bits='64' id='type-id-2299'/>
    <!-- const OT::Coverage* const -->
    <qualified-type-def type-id='type-id-2299' const='yes' id='type-id-2300'/>
    <!-- const OT::CoverageFormat1 -->
    <qualified-type-def type-id='type-id-2388' const='yes' id='type-id-2389'/>
    <!-- const OT::CoverageFormat1* -->
    <pointer-type-def type-id='type-id-2389' size-in-bits='64' id='type-id-2301'/>
    <!-- const OT::CoverageFormat1* const -->
    <qualified-type-def type-id='type-id-2301' const='yes' id='type-id-2302'/>
    <!-- const OT::CoverageFormat2 -->
    <qualified-type-def type-id='type-id-2390' const='yes' id='type-id-2391'/>
    <!-- const OT::CoverageFormat2* -->
    <pointer-type-def type-id='type-id-2391' size-in-bits='64' id='type-id-2303'/>
    <!-- const OT::CoverageFormat2* const -->
    <qualified-type-def type-id='type-id-2303' const='yes' id='type-id-2304'/>
    <!-- const OT::GDEF -->
    <qualified-type-def type-id='type-id-2392' const='yes' id='type-id-2393'/>
    <!-- const OT::GDEF* -->
    <pointer-type-def type-id='type-id-2393' size-in-bits='64' id='type-id-2394'/>
    <!-- const OT::GDEF* const -->
    <qualified-type-def type-id='type-id-2394' const='yes' id='type-id-2395'/>
    <!-- const OT::Supplier<OT::IntType<short unsigned int, 2u> > -->
    <qualified-type-def type-id='type-id-802' const='yes' id='type-id-2396'/>
    <!-- const OT::Supplier<OT::IntType<short unsigned int, 2u> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-2396' size-in-bits='64' id='type-id-948'/>
    <!-- const OT::Supplier<OT::IntType<short unsigned int, 2u> >* -->
    <pointer-type-def type-id='type-id-2396' size-in-bits='64' id='type-id-2397'/>
    <!-- const OT::Supplier<OT::IntType<short unsigned int, 2u> >* const -->
    <qualified-type-def type-id='type-id-2397' const='yes' id='type-id-2398'/>
    <!-- const OT::Supplier<unsigned int> -->
    <qualified-type-def type-id='type-id-1565' const='yes' id='type-id-2399'/>
    <!-- const OT::Supplier<unsigned int>& -->
    <reference-type-def kind='lvalue' type-id='type-id-2399' size-in-bits='64' id='type-id-2351'/>
    <!-- const OT::Supplier<unsigned int>* -->
    <pointer-type-def type-id='type-id-2399' size-in-bits='64' id='type-id-2400'/>
    <!-- const OT::Supplier<unsigned int>* const -->
    <qualified-type-def type-id='type-id-2400' const='yes' id='type-id-2401'/>
    <!-- const unsigned int* -->
    <pointer-type-def type-id='type-id-96' size-in-bits='64' id='type-id-2349'/>
    <!-- namespace OT -->
    <namespace-decl name='OT'>
      <!-- struct OT::AlternateSubst -->
      <class-decl name='AlternateSubst' is-struct='yes' visibility='default' id='type-id-2402'>
      </class-decl>
      <!-- struct OT::AlternateSubstFormat1 -->
      <class-decl name='AlternateSubstFormat1' is-struct='yes' visibility='default' id='type-id-2403'/>
      <!-- struct OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2404'/>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2405'/>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2406'/>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2407'/>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2408'/>
      <!-- struct OT::ArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2409'/>
      <!-- struct OT::ChainContext -->
      <class-decl name='ChainContext' is-struct='yes' visibility='default' id='type-id-2410'>
      </class-decl>
      <!-- struct OT::ChainContextFormat1 -->
      <class-decl name='ChainContextFormat1' is-struct='yes' visibility='default' id='type-id-2411'/>
      <!-- struct OT::ChainContextFormat2 -->
      <class-decl name='ChainContextFormat2' is-struct='yes' visibility='default' id='type-id-2412'/>
      <!-- struct OT::ChainContextFormat3 -->
      <class-decl name='ChainContextFormat3' is-struct='yes' visibility='default' id='type-id-2413'/>
      <!-- struct OT::ChainContextSubst -->
      <class-decl name='ChainContextSubst' is-struct='yes' visibility='default' id='type-id-2414'/>
      <!-- struct OT::Context -->
      <class-decl name='Context' is-struct='yes' visibility='default' id='type-id-2415'>
      </class-decl>
      <!-- struct OT::ContextFormat1 -->
      <class-decl name='ContextFormat1' is-struct='yes' visibility='default' id='type-id-2416'/>
      <!-- struct OT::ContextFormat2 -->
      <class-decl name='ContextFormat2' is-struct='yes' visibility='default' id='type-id-2417'/>
      <!-- struct OT::ContextFormat3 -->
      <class-decl name='ContextFormat3' is-struct='yes' visibility='default' id='type-id-2418'/>
      <!-- struct OT::ContextSubst -->
      <class-decl name='ContextSubst' is-struct='yes' visibility='default' id='type-id-2419'/>
      <!-- struct OT::Coverage -->
      <class-decl name='Coverage' is-struct='yes' visibility='default' id='type-id-2386'>
      </class-decl>
      <!-- struct OT::CoverageFormat1 -->
      <class-decl name='CoverageFormat1' is-struct='yes' visibility='default' id='type-id-2388'/>
      <!-- struct OT::CoverageFormat2 -->
      <class-decl name='CoverageFormat2' is-struct='yes' visibility='default' id='type-id-2390'/>
      <!-- struct OT::Extension<OT::ExtensionSubst> -->
      <class-decl name='Extension&lt;OT::ExtensionSubst&gt;' is-struct='yes' visibility='default' id='type-id-2420'>
      </class-decl>
      <!-- struct OT::ExtensionFormat1 -->
      <class-decl name='ExtensionFormat1' is-struct='yes' visibility='default' id='type-id-2421'/>
      <!-- struct OT::ExtensionSubst -->
      <class-decl name='ExtensionSubst' is-struct='yes' visibility='default' id='type-id-2422'/>
      <!-- struct OT::GDEF -->
      <class-decl name='GDEF' is-struct='yes' visibility='default' id='type-id-2392'/>
      <!-- struct OT::HeadlessArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='HeadlessArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2423'/>
      <!-- struct OT::Ligature -->
      <class-decl name='Ligature' is-struct='yes' visibility='default' id='type-id-2424'/>
      <!-- struct OT::LigatureSet -->
      <class-decl name='LigatureSet' is-struct='yes' visibility='default' id='type-id-2425'/>
      <!-- struct OT::LigatureSubst -->
      <class-decl name='LigatureSubst' is-struct='yes' visibility='default' id='type-id-2426'>
      </class-decl>
      <!-- struct OT::LigatureSubstFormat1 -->
      <class-decl name='LigatureSubstFormat1' is-struct='yes' visibility='default' id='type-id-2427'/>
      <!-- struct OT::Lookup -->
      <class-decl name='Lookup' is-struct='yes' visibility='default' id='type-id-2428'/>
      <!-- struct OT::MultipleSubst -->
      <class-decl name='MultipleSubst' is-struct='yes' visibility='default' id='type-id-2429'>
      </class-decl>
      <!-- struct OT::MultipleSubstFormat1 -->
      <class-decl name='MultipleSubstFormat1' is-struct='yes' visibility='default' id='type-id-2430'/>
      <!-- struct OT::Offset<OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2431'/>
      <!-- struct OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2432'/>
      <!-- struct OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2433'/>
      <!-- struct OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2434'/>
      <!-- struct OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2435'/>
      <!-- struct OT::RangeRecord -->
      <class-decl name='RangeRecord' is-struct='yes' visibility='default' id='type-id-2436'/>
      <!-- struct OT::ReverseChainSingleSubst -->
      <class-decl name='ReverseChainSingleSubst' is-struct='yes' visibility='default' id='type-id-2437'>
      </class-decl>
      <!-- struct OT::ReverseChainSingleSubstFormat1 -->
      <class-decl name='ReverseChainSingleSubstFormat1' is-struct='yes' visibility='default' id='type-id-2438'/>
      <!-- struct OT::SingleSubst -->
      <class-decl name='SingleSubst' is-struct='yes' visibility='default' id='type-id-2439'>
      </class-decl>
      <!-- struct OT::SingleSubstFormat1 -->
      <class-decl name='SingleSubstFormat1' is-struct='yes' visibility='default' id='type-id-2440'/>
      <!-- struct OT::SingleSubstFormat2 -->
      <class-decl name='SingleSubstFormat2' is-struct='yes' visibility='default' id='type-id-2441'/>
      <!-- struct OT::SortedArrayOf<OT::IntType<short unsigned int, 2u>, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::IntType&lt;short unsigned int, 2u&gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2442'/>
      <!-- struct OT::SortedArrayOf<OT::RangeRecord, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='SortedArrayOf&lt;OT::RangeRecord, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2443'/>
      <!-- struct OT::SubstLookup -->
      <class-decl name='SubstLookup' is-struct='yes' visibility='default' id='type-id-2444'/>
      <!-- struct OT::SubstLookupSubTable -->
      <class-decl name='SubstLookupSubTable' is-struct='yes' visibility='default' id='type-id-2445'>
      </class-decl>
      <!-- struct OT::hb_closure_context_t -->
      <class-decl name='hb_closure_context_t' is-struct='yes' visibility='default' id='type-id-2446'/>
      <!-- struct OT::hb_collect_glyphs_context_t -->
      <class-decl name='hb_collect_glyphs_context_t' is-struct='yes' visibility='default' id='type-id-2447'/>
      <!-- struct OT::hb_get_coverage_context_t -->
      <class-decl name='hb_get_coverage_context_t' is-struct='yes' visibility='default' id='type-id-2448'/>
      <!-- struct OT::hb_would_apply_context_t -->
      <class-decl name='hb_would_apply_context_t' is-struct='yes' visibility='default' id='type-id-2449'/>
      <!-- struct OT::Supplier<OT::Offset<OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::Offset&lt;OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2450'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Coverage, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2451'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Ligature, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2452'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::LigatureSet, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2453'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<short unsigned int, 2u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::SubstLookupSubTable, OT::IntType&lt;short unsigned int, 2u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2454'/>
      <!-- struct OT::Supplier<OT::RangeRecord> -->
      <class-decl name='Supplier&lt;OT::RangeRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2455'/>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-default.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-hangul.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-hebrew.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-indic-table.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-indic.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- enum base_position_t -->
    <enum-decl name='base_position_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='276' column='1' id='type-id-2456'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='BASE_POS_FIRST' value='0'/>
      <enumerator name='BASE_POS_LAST_SINHALA' value='1'/>
      <enumerator name='BASE_POS_LAST' value='2'/>
    </enum-decl>
    <!-- enum blwf_mode_t -->
    <enum-decl name='blwf_mode_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='295' column='1' id='type-id-2457'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='BLWF_MODE_PRE_AND_POST' value='0'/>
      <enumerator name='BLWF_MODE_POST_ONLY' value='1'/>
    </enum-decl>
    <!-- enum pref_len_t -->
    <enum-decl name='pref_len_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='299' column='1' id='type-id-2458'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='PREF_LEN_1' value='1'/>
      <enumerator name='PREF_LEN_2' value='2'/>
      <enumerator name='PREF_LEN_DONT_CARE' value='2'/>
    </enum-decl>
    <!-- enum reph_mode_t -->
    <enum-decl name='reph_mode_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='289' column='1' id='type-id-2459'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='REPH_MODE_IMPLICIT' value='0'/>
      <enumerator name='REPH_MODE_EXPLICIT' value='1'/>
      <enumerator name='REPH_MODE_VIS_REPHA' value='2'/>
      <enumerator name='REPH_MODE_LOG_REPHA' value='3'/>
    </enum-decl>
    <!-- enum reph_position_t -->
    <enum-decl name='reph_position_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='281' column='1' id='type-id-2460'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='REPH_POS_AFTER_MAIN' value='5'/>
      <enumerator name='REPH_POS_BEFORE_SUB' value='7'/>
      <enumerator name='REPH_POS_AFTER_SUB' value='9'/>
      <enumerator name='REPH_POS_BEFORE_POST' value='10'/>
      <enumerator name='REPH_POS_AFTER_POST' value='12'/>
      <enumerator name='REPH_POS_DONT_CARE' value='1'/>
    </enum-decl>
    <!-- hb_mask_t[21] -->
    <array-type-def dimensions='1' type-id='type-id-99' size-in-bits='672' id='type-id-2461'>
      <!-- <anonymous range>[21] -->
      <subrange length='21' lower-bound='0' upper-bound='20' type-id='type-id-4' id='type-id-2462'/>
    </array-type-def>
    <!-- struct indic_config_t -->
    <class-decl name='indic_config_t' size-in-bits='256' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='305' column='1' id='type-id-2463'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_script_t indic_config_t::script -->
        <var-decl name='script' type-id='type-id-76' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='306' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- bool indic_config_t::has_old_spec -->
        <var-decl name='has_old_spec' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='307' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_codepoint_t indic_config_t::virama -->
        <var-decl name='virama' type-id='type-id-79' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='308' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- base_position_t indic_config_t::base_pos -->
        <var-decl name='base_pos' type-id='type-id-2456' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='309' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- reph_position_t indic_config_t::reph_pos -->
        <var-decl name='reph_pos' type-id='type-id-2460' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='310' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- reph_mode_t indic_config_t::reph_mode -->
        <var-decl name='reph_mode' type-id='type-id-2459' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='311' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- blwf_mode_t indic_config_t::blwf_mode -->
        <var-decl name='blwf_mode' type-id='type-id-2457' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='312' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- pref_len_t indic_config_t::pref_len -->
        <var-decl name='pref_len' type-id='type-id-2458' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='313' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct indic_shape_plan_t -->
    <class-decl name='indic_shape_plan_t' size-in-bits='1344' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='507' column='1' id='type-id-2464'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const indic_config_t* indic_shape_plan_t::config -->
        <var-decl name='config' type-id='type-id-2465' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='529' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- bool indic_shape_plan_t::is_old_spec -->
        <var-decl name='is_old_spec' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='531' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- hb_codepoint_t indic_shape_plan_t::virama_glyph -->
        <var-decl name='virama_glyph' type-id='type-id-79' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='532' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- would_substitute_feature_t indic_shape_plan_t::rphf -->
        <var-decl name='rphf' type-id='type-id-2466' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='534' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- would_substitute_feature_t indic_shape_plan_t::pref -->
        <var-decl name='pref' type-id='type-id-2466' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='535' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- would_substitute_feature_t indic_shape_plan_t::blwf -->
        <var-decl name='blwf' type-id='type-id-2466' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- would_substitute_feature_t indic_shape_plan_t::pstf -->
        <var-decl name='pstf' type-id='type-id-2466' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='537' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- hb_mask_t indic_shape_plan_t::mask_array[21] -->
        <var-decl name='mask_array' type-id='type-id-2461' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='539' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct would_substitute_feature_t -->
    <class-decl name='would_substitute_feature_t' size-in-bits='128' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='481' column='1' id='type-id-2466'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- const hb_ot_map_t::lookup_map_t* would_substitute_feature_t::lookups -->
        <var-decl name='lookups' type-id='type-id-2152' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='501' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- unsigned int would_substitute_feature_t::count -->
        <var-decl name='count' type-id='type-id-18' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='502' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- bool would_substitute_feature_t::zero_context -->
        <var-decl name='zero_context' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-indic.cc' line='503' column='1'/>
      </data-member>
    </class-decl>
    <!-- const indic_config_t -->
    <qualified-type-def type-id='type-id-2463' const='yes' id='type-id-2467'/>
    <!-- const indic_config_t* -->
    <pointer-type-def type-id='type-id-2467' size-in-bits='64' id='type-id-2465'/>
    <!-- const indic_shape_plan_t -->
    <qualified-type-def type-id='type-id-2464' const='yes' id='type-id-2468'/>
    <!-- const indic_shape_plan_t* -->
    <pointer-type-def type-id='type-id-2468' size-in-bits='64' id='type-id-2469'/>
    <!-- const indic_shape_plan_t* const -->
    <qualified-type-def type-id='type-id-2469' const='yes' id='type-id-2470'/>
    <!-- const would_substitute_feature_t -->
    <qualified-type-def type-id='type-id-2466' const='yes' id='type-id-2471'/>
    <!-- const would_substitute_feature_t* -->
    <pointer-type-def type-id='type-id-2471' size-in-bits='64' id='type-id-2472'/>
    <!-- const would_substitute_feature_t* const -->
    <qualified-type-def type-id='type-id-2472' const='yes' id='type-id-2473'/>
    <!-- would_substitute_feature_t* -->
    <pointer-type-def type-id='type-id-2466' size-in-bits='64' id='type-id-2474'/>
    <!-- would_substitute_feature_t* const -->
    <qualified-type-def type-id='type-id-2474' const='yes' id='type-id-2475'/>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-myanmar.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-sea.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-thai.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-complex-tibetan.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-fallback.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- const OT::Coverage -->
    <qualified-type-def type-id='type-id-2476' const='yes' id='type-id-2477'/>
    <!-- const OT::Coverage* -->
    <pointer-type-def type-id='type-id-2477' size-in-bits='64' id='type-id-2478'/>
    <!-- const OT::Coverage* const -->
    <qualified-type-def type-id='type-id-2478' const='yes' id='type-id-2479'/>
    <!-- namespace OT -->
    <namespace-decl name='OT'>
      <!-- struct OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> >, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='ArrayOf&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2480'/>
      <!-- struct OT::MarkGlyphSets -->
      <class-decl name='MarkGlyphSets' is-struct='yes' visibility='default' id='type-id-2481'>
      </class-decl>
      <!-- struct OT::MarkGlyphSetsFormat1 -->
      <class-decl name='MarkGlyphSetsFormat1' is-struct='yes' visibility='default' id='type-id-2482'/>
      <!-- struct OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > -->
      <class-decl name='OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2483'/>
      <!-- struct OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<short unsigned int, 2u> > -->
      <class-decl name='OffsetTo&lt;OT::MarkGlyphSets, OT::IntType&lt;short unsigned int, 2u&gt; &gt;' is-struct='yes' visibility='default' id='type-id-2484'/>
      <!-- struct OT::Coverage -->
      <class-decl name='Coverage' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2476'/>
      <!-- struct OT::Supplier<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4u> > > -->
      <class-decl name='Supplier&lt;OT::OffsetTo&lt;OT::Coverage, OT::IntType&lt;unsigned int, 4u&gt; &gt; &gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2485'/>
      <!-- struct OT::Supplier<OT::RangeRecord> -->
      <class-decl name='Supplier&lt;OT::RangeRecord&gt;' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-2486'/>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape-normalize.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-shape.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- char[8] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='64' id='type-id-2487'>
      <!-- <anonymous range>[8] -->
      <subrange length='8' lower-bound='0' upper-bound='7' type-id='type-id-4' id='type-id-70'/>
    </array-type-def>
    <!-- enum hb_ot_shape_normalization_mode_t -->
    <enum-decl name='hb_ot_shape_normalization_mode_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='38' column='1' id='type-id-2488'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_OT_SHAPE_NORMALIZATION_MODE_NONE' value='0'/>
      <enumerator name='HB_OT_SHAPE_NORMALIZATION_MODE_DECOMPOSED' value='1'/>
      <enumerator name='HB_OT_SHAPE_NORMALIZATION_MODE_COMPOSED_DIACRITICS' value='2'/>
      <enumerator name='HB_OT_SHAPE_NORMALIZATION_MODE_COMPOSED_DIACRITICS_NO_SHORT_CIRCUIT' value='3'/>
      <enumerator name='HB_OT_SHAPE_NORMALIZATION_MODE_DEFAULT' value='2'/>
    </enum-decl>
    <!-- enum hb_ot_shape_zero_width_marks_type_t -->
    <enum-decl name='hb_ot_shape_zero_width_marks_type_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='42' column='1' id='type-id-2489'>
      <underlying-type type-id='type-id-7'/>
      <enumerator name='HB_OT_SHAPE_ZERO_WIDTH_MARKS_NONE' value='0'/>
      <enumerator name='HB_OT_SHAPE_ZERO_WIDTH_MARKS_BY_UNICODE_LATE' value='1'/>
      <enumerator name='HB_OT_SHAPE_ZERO_WIDTH_MARKS_BY_GDEF_EARLY' value='2'/>
      <enumerator name='HB_OT_SHAPE_ZERO_WIDTH_MARKS_BY_GDEF_LATE' value='3'/>
      <enumerator name='HB_OT_SHAPE_ZERO_WIDTH_MARKS_DEFAULT' value='1'/>
    </enum-decl>
    <!-- struct hb_ot_complex_shaper_t -->
    <class-decl name='hb_ot_complex_shaper_t' size-in-bits='704' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='69' column='1' id='type-id-2490'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- char hb_ot_complex_shaper_t::name[8] -->
        <var-decl name='name' type-id='type-id-2487' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void (* hb_ot_complex_shaper_t::collect_features)(hb_ot_shape_planner_t*) -->
        <var-decl name='collect_features' type-id='type-id-2491' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='77' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void (* hb_ot_complex_shaper_t::override_features)(hb_ot_shape_planner_t*) -->
        <var-decl name='override_features' type-id='type-id-2491' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='85' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void* (* hb_ot_complex_shaper_t::data_create)(const hb_ot_shape_plan_t*) -->
        <var-decl name='data_create' type-id='type-id-2492' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void (* hb_ot_complex_shaper_t::data_destroy)(void*) -->
        <var-decl name='data_destroy' type-id='type-id-40' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='101' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- void (* hb_ot_complex_shaper_t::preprocess_text)(const hb_ot_shape_plan_t*, hb_buffer_t*, hb_font_t*) -->
        <var-decl name='preprocess_text' type-id='type-id-2493' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='111' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- hb_ot_shape_normalization_mode_t hb_ot_complex_shaper_t::normalization_preference -->
        <var-decl name='normalization_preference' type-id='type-id-2488' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='114' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- bool (* hb_ot_complex_shaper_t::decompose)(const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*) -->
        <var-decl name='decompose' type-id='type-id-2494' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='123' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- bool (* hb_ot_complex_shaper_t::compose)(const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*) -->
        <var-decl name='compose' type-id='type-id-2495' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- void (* hb_ot_complex_shaper_t::setup_masks)(const hb_ot_shape_plan_t*, hb_buffer_t*, hb_font_t*) -->
        <var-decl name='setup_masks' type-id='type-id-2493' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='142' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- hb_ot_shape_zero_width_marks_type_t hb_ot_complex_shaper_t::zero_width_marks -->
        <var-decl name='zero_width_marks' type-id='type-id-2489' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='144' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='672'>
        <!-- bool hb_ot_complex_shaper_t::fallback_position -->
        <var-decl name='fallback_position' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-complex-private.hh' line='146' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_ot_shape_normalize_context_t -->
    <class-decl name='hb_ot_shape_normalize_context_t' size-in-bits='384' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='53' column='1' id='type-id-2496'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const hb_ot_shape_plan_t* hb_ot_shape_normalize_context_t::plan -->
        <var-decl name='plan' type-id='type-id-1062' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_buffer_t* hb_ot_shape_normalize_context_t::buffer -->
        <var-decl name='buffer' type-id='type-id-155' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- hb_font_t* hb_ot_shape_normalize_context_t::font -->
        <var-decl name='font' type-id='type-id-158' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- hb_unicode_funcs_t* hb_ot_shape_normalize_context_t::unicode -->
        <var-decl name='unicode' type-id='type-id-91' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- bool (* hb_ot_shape_normalize_context_t::decompose)(const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*) -->
        <var-decl name='decompose' type-id='type-id-2494' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- bool (* hb_ot_shape_normalize_context_t::compose)(const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*) -->
        <var-decl name='compose' type-id='type-id-2495' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-normalize-private.hh' line='65' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct hb_ot_shape_planner_t -->
    <class-decl name='hb_ot_shape_planner_t' size-in-bits='10624' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='66' column='1' id='type-id-2497'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_face_t* hb_ot_shape_planner_t::face -->
        <var-decl name='face' type-id='type-id-167' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='68' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- hb_segment_properties_t hb_ot_shape_planner_t::props -->
        <var-decl name='props' type-id='type-id-92' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- const hb_ot_complex_shaper_t* hb_ot_shape_planner_t::shaper -->
        <var-decl name='shaper' type-id='type-id-2271' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- hb_ot_map_builder_t hb_ot_shape_planner_t::map -->
        <var-decl name='map' type-id='type-id-2360' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='71' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_shape_planner_t::hb_ot_shape_planner_t(const hb_shape_plan_t*) -->
        <function-decl name='hb_ot_shape_planner_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_shape_planner_t*' -->
          <parameter type-id='type-id-2498' is-artificial='yes'/>
          <!-- parameter of type 'const hb_shape_plan_t*' -->
          <parameter type-id='type-id-2499'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- hb_ot_shape_planner_t::~hb_ot_shape_planner_t(int) -->
        <function-decl name='~hb_ot_shape_planner_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_shape_planner_t*' -->
          <parameter type-id='type-id-2498' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-11' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- hb_ot_shape_planner_t::hb_ot_shape_planner_t(const hb_ot_shape_planner_t&) -->
        <function-decl name='hb_ot_shape_planner_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_shape_planner_t*' -->
          <parameter type-id='type-id-2498' is-artificial='yes'/>
          <!-- parameter of type 'const hb_ot_shape_planner_t&' -->
          <parameter type-id='type-id-2500'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- hb_ot_shape_planner_t::hb_ot_shape_planner_t(const hb_shape_plan_t*) -->
        <function-decl name='hb_ot_shape_planner_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='73' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_shape_planner_t* const' -->
          <parameter type-id='type-id-2501' name='this' is-artificial='yes'/>
          <!-- parameter of type 'const hb_shape_plan_t*' -->
          <parameter type-id='type-id-2499' name='master_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='73' column='1'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- hb_ot_shape_planner_t::~hb_ot_shape_planner_t(const int) -->
        <function-decl name='~hb_ot_shape_planner_t' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape-private.hh' line='78' column='1' declared-inline='yes' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'hb_ot_shape_planner_t* const' -->
          <parameter type-id='type-id-2501' name='this' is-artificial='yes'/>
          <!-- artificial parameter of type 'const int' -->
          <parameter type-id='type-id-395' name='__in_chrg' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-27'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- bool (*)(const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*) -->
    <pointer-type-def type-id='type-id-2502' size-in-bits='64' id='type-id-2494'/>
    <!-- bool (*)(const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*) -->
    <pointer-type-def type-id='type-id-2503' size-in-bits='64' id='type-id-2495'/>
    <!-- const hb_ot_complex_shaper_t -->
    <qualified-type-def type-id='type-id-2490' const='yes' id='type-id-2504'/>
    <!-- const hb_ot_complex_shaper_t* -->
    <pointer-type-def type-id='type-id-2504' size-in-bits='64' id='type-id-2271'/>
    <!-- const hb_ot_shape_normalize_context_t -->
    <qualified-type-def type-id='type-id-2496' const='yes' id='type-id-2505'/>
    <!-- const hb_ot_shape_normalize_context_t* -->
    <pointer-type-def type-id='type-id-2505' size-in-bits='64' id='type-id-2506'/>
    <!-- const hb_ot_shape_plan_t* const -->
    <qualified-type-def type-id='type-id-1062' const='yes' id='type-id-2507'/>
    <!-- const hb_ot_shape_planner_t -->
    <qualified-type-def type-id='type-id-2497' const='yes' id='type-id-2508'/>
    <!-- const hb_ot_shape_planner_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2508' size-in-bits='64' id='type-id-2500'/>
    <!-- const hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8u>* const -->
    <qualified-type-def type-id='type-id-1067' const='yes' id='type-id-1070'/>
    <!-- const hb_shape_plan_t -->
    <qualified-type-def type-id='type-id-246' const='yes' id='type-id-2509'/>
    <!-- const hb_shape_plan_t* -->
    <pointer-type-def type-id='type-id-2509' size-in-bits='64' id='type-id-2499'/>
    <!-- hb_ot_shape_plan_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2156' size-in-bits='64' id='type-id-2510'/>
    <!-- hb_ot_shape_plan_t* -->
    <pointer-type-def type-id='type-id-2156' size-in-bits='64' id='type-id-2511'/>
    <!-- hb_ot_shape_plan_t* const -->
    <qualified-type-def type-id='type-id-2511' const='yes' id='type-id-2512'/>
    <!-- hb_ot_shape_planner_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2497' size-in-bits='64' id='type-id-2513'/>
    <!-- hb_ot_shape_planner_t* -->
    <pointer-type-def type-id='type-id-2497' size-in-bits='64' id='type-id-2498'/>
    <!-- hb_ot_shape_planner_t* const -->
    <qualified-type-def type-id='type-id-2498' const='yes' id='type-id-2501'/>
    <!-- void (*)(const hb_ot_shape_plan_t*, hb_buffer_t*, hb_font_t*) -->
    <pointer-type-def type-id='type-id-2514' size-in-bits='64' id='type-id-2493'/>
    <!-- void (*)(hb_ot_shape_planner_t*) -->
    <pointer-type-def type-id='type-id-2515' size-in-bits='64' id='type-id-2491'/>
    <!-- void* (*)(const hb_ot_shape_plan_t*) -->
    <pointer-type-def type-id='type-id-2516' size-in-bits='64' id='type-id-2492'/>
    <!-- void hb_ot_shape_plan_collect_lookups(hb_shape_plan_t*, hb_tag_t, hb_set_t*) -->
    <function-decl name='hb_ot_shape_plan_collect_lookups' mangled-name='hb_ot_shape_plan_collect_lookups' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='740' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_shape_plan_collect_lookups'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205' name='shape_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='740' column='1'/>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='table_tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='741' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='lookup_indexes' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='742' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_ot_shape_glyphs_closure(hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int, hb_set_t*) -->
    <function-decl name='hb_ot_shape_glyphs_closure' mangled-name='hb_ot_shape_glyphs_closure' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='770' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_shape_glyphs_closure'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='770' column='1'/>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='771' column='1'/>
      <!-- parameter of type 'const hb_feature_t*' -->
      <parameter type-id='type-id-387' name='features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='772' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='num_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='773' column='1'/>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='glyphs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-shape.cc' line='774' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- bool (const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*) -->
    <function-type size-in-bits='64' id='type-id-2502'>
      <!-- parameter of type 'const hb_ot_shape_normalize_context_t*' -->
      <parameter type-id='type-id-2506'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- bool (const hb_ot_shape_normalize_context_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*) -->
    <function-type size-in-bits='64' id='type-id-2503'>
      <!-- parameter of type 'const hb_ot_shape_normalize_context_t*' -->
      <parameter type-id='type-id-2506'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- void (const hb_ot_shape_plan_t*, hb_buffer_t*, hb_font_t*) -->
    <function-type size-in-bits='64' id='type-id-2514'>
      <!-- parameter of type 'const hb_ot_shape_plan_t*' -->
      <parameter type-id='type-id-1062'/>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155'/>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-type>
    <!-- void (hb_ot_shape_planner_t*) -->
    <function-type size-in-bits='64' id='type-id-2515'>
      <!-- parameter of type 'hb_ot_shape_planner_t*' -->
      <parameter type-id='type-id-2498'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-type>
    <!-- void* (const hb_ot_shape_plan_t*) -->
    <function-type size-in-bits='64' id='type-id-2516'>
      <!-- parameter of type 'const hb_ot_shape_plan_t*' -->
      <parameter type-id='type-id-1062'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='hb-ot-tag.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- hb_tag_t* -->
    <pointer-type-def type-id='type-id-189' size-in-bits='64' id='type-id-1068'/>
    <!-- void hb_ot_tags_from_script(hb_script_t, hb_tag_t*, hb_tag_t*) -->
    <function-decl name='hb_ot_tags_from_script' mangled-name='hb_ot_tags_from_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='130' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_tags_from_script'>
      <!-- parameter of type 'enum hb_script_t' -->
      <parameter type-id='type-id-76' name='script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='130' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='script_tag_1' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='131' column='1'/>
      <!-- parameter of type 'hb_tag_t*' -->
      <parameter type-id='type-id-1068' name='script_tag_2' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='132' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_script_t hb_ot_tag_to_script(hb_tag_t) -->
    <function-decl name='hb_ot_tag_to_script' mangled-name='hb_ot_tag_to_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='147' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_tag_to_script'>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='147' column='1'/>
      <!-- enum hb_script_t -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- hb_tag_t hb_ot_tag_from_language(hb_language_t) -->
    <function-decl name='hb_ot_tag_from_language' mangled-name='hb_ot_tag_from_language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='806' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_tag_from_language'>
      <!-- parameter of type 'typedef hb_language_t' -->
      <parameter type-id='type-id-105' name='language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='806' column='1'/>
      <!-- typedef hb_tag_t -->
      <return type-id='type-id-189'/>
    </function-decl>
    <!-- hb_language_t hb_ot_tag_to_language(hb_tag_t) -->
    <function-decl name='hb_ot_tag_to_language' mangled-name='hb_ot_tag_to_language' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='868' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_ot_tag_to_language'>
      <!-- parameter of type 'typedef hb_tag_t' -->
      <parameter type-id='type-id-189' name='tag' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-ot-tag.cc' line='868' column='1'/>
      <!-- typedef hb_language_t -->
      <return type-id='type-id-105'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-set.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- hb_set_t::elt_t[2048] -->
    <array-type-def dimensions='1' type-id='type-id-2517' size-in-bits='65536' id='type-id-2518'>
      <!-- <anonymous range>[2048] -->
      <subrange length='2048' lower-bound='0' upper-bound='2047' type-id='type-id-4' id='type-id-2519'/>
    </array-type-def>
    <!-- struct hb_set_t -->
    <class-decl name='hb_set_t' size-in-bits='66496' is-struct='yes' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='147' column='1' id='type-id-2520'>
      <member-type access='public'>
        <!-- typedef uint32_t hb_set_t::elt_t -->
        <typedef-decl name='elt_t' type-id='type-id-100' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='320' column='1' id='type-id-2517'/>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- hb_object_header_t hb_set_t::header -->
        <var-decl name='header' type-id='type-id-16' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='148' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- bool hb_set_t::in_error -->
        <var-decl name='in_error' type-id='type-id-1' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='150' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_t::MAX_G -->
        <var-decl name='MAX_G' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='321' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_t::SHIFT -->
        <var-decl name='SHIFT' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='322' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_t::BITS -->
        <var-decl name='BITS' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='323' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_t::MASK -->
        <var-decl name='MASK' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='324' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const unsigned int hb_set_t::ELTS -->
        <var-decl name='ELTS' type-id='type-id-96' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='325' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const hb_codepoint_t hb_set_t::INVALID -->
        <var-decl name='INVALID' type-id='type-id-144' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='326' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='928'>
        <!-- hb_set_t::elt_t hb_set_t::elts[2048] -->
        <var-decl name='elts' type-id='type-id-2518' visibility='default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set-private.hh' line='332' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef hb_set_t hb_set_t -->
    <typedef-decl name='hb_set_t' type-id='type-id-2520' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.h' line='41' column='1' id='type-id-2348'/>
    <!-- const hb_set_t -->
    <qualified-type-def type-id='type-id-2520' const='yes' id='type-id-2521'/>
    <!-- const hb_set_t -->
    <qualified-type-def type-id='type-id-2348' const='yes' id='type-id-2522'/>
    <!-- const hb_set_t* -->
    <pointer-type-def type-id='type-id-2521' size-in-bits='64' id='type-id-2523'/>
    <!-- const hb_set_t* -->
    <pointer-type-def type-id='type-id-2522' size-in-bits='64' id='type-id-2524'/>
    <!-- const hb_set_t* const -->
    <qualified-type-def type-id='type-id-2523' const='yes' id='type-id-2525'/>
    <!-- hb_set_t* -->
    <pointer-type-def type-id='type-id-2520' size-in-bits='64' id='type-id-2526'/>
    <!-- hb_set_t* -->
    <pointer-type-def type-id='type-id-2348' size-in-bits='64' id='type-id-2289'/>
    <!-- hb_set_t* const -->
    <qualified-type-def type-id='type-id-2526' const='yes' id='type-id-2527'/>
    <!-- hb_set_t::elt_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-2517' size-in-bits='64' id='type-id-2528'/>
    <!-- hb_set_t* hb_set_create() -->
    <function-decl name='hb_set_create' mangled-name='hb_set_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='41' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_create'>
      <!-- hb_set_t* -->
      <return type-id='type-id-2289'/>
    </function-decl>
    <!-- hb_set_t* hb_set_get_empty() -->
    <function-decl name='hb_set_get_empty' mangled-name='hb_set_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='61' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_get_empty'>
      <!-- hb_set_t* -->
      <return type-id='type-id-2289'/>
    </function-decl>
    <!-- hb_set_t* hb_set_reference(hb_set_t*) -->
    <function-decl name='hb_set_reference' mangled-name='hb_set_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='82' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_reference'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='82' column='1'/>
      <!-- hb_set_t* -->
      <return type-id='type-id-2289'/>
    </function-decl>
    <!-- void hb_set_destroy(hb_set_t*) -->
    <function-decl name='hb_set_destroy' mangled-name='hb_set_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='94' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_destroy'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='94' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_set_set_user_data(hb_set_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_set_set_user_data' mangled-name='hb_set_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='116' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_set_user_data'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='116' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='117' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='118' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='119' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='120' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_set_get_user_data(hb_set_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_set_get_user_data' mangled-name='hb_set_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='135' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_get_user_data'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='135' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='136' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- hb_bool_t hb_set_allocation_successful(const hb_set_t*) -->
    <function-decl name='hb_set_allocation_successful' mangled-name='hb_set_allocation_successful' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='153' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_allocation_successful'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='153' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_set_clear(hb_set_t*) -->
    <function-decl name='hb_set_clear' mangled-name='hb_set_clear' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='167' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_clear'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='167' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_set_is_empty(const hb_set_t*) -->
    <function-decl name='hb_set_is_empty' mangled-name='hb_set_is_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='183' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_is_empty'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='183' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_set_has(const hb_set_t*, hb_codepoint_t) -->
    <function-decl name='hb_set_has' mangled-name='hb_set_has' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='200' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_has'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='200' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='codepoint' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='201' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_set_add(hb_set_t*, hb_codepoint_t) -->
    <function-decl name='hb_set_add' mangled-name='hb_set_add' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='216' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_add'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='216' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='codepoint' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='217' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_add_range(hb_set_t*, hb_codepoint_t, hb_codepoint_t) -->
    <function-decl name='hb_set_add_range' mangled-name='hb_set_add_range' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='233' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_add_range'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='233' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='first' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='234' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='last' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='235' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_del(hb_set_t*, hb_codepoint_t) -->
    <function-decl name='hb_set_del' mangled-name='hb_set_del' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='250' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_del'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='250' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='codepoint' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='251' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_del_range(hb_set_t*, hb_codepoint_t, hb_codepoint_t) -->
    <function-decl name='hb_set_del_range' mangled-name='hb_set_del_range' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='267' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_del_range'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='267' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='first' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='268' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='last' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='269' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_set_is_equal(const hb_set_t*, const hb_set_t*) -->
    <function-decl name='hb_set_is_equal' mangled-name='hb_set_is_equal' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='286' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_is_equal'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='286' column='1'/>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='other' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='287' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_set_set(hb_set_t*, const hb_set_t*) -->
    <function-decl name='hb_set_set' mangled-name='hb_set_set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='302' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_set'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='302' column='1'/>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='other' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='303' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_union(hb_set_t*, const hb_set_t*) -->
    <function-decl name='hb_set_union' mangled-name='hb_set_union' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='318' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_union'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='318' column='1'/>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='other' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='319' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_intersect(hb_set_t*, const hb_set_t*) -->
    <function-decl name='hb_set_intersect' mangled-name='hb_set_intersect' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='334' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_intersect'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='334' column='1'/>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='other' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='335' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_subtract(hb_set_t*, const hb_set_t*) -->
    <function-decl name='hb_set_subtract' mangled-name='hb_set_subtract' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='350' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_subtract'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='350' column='1'/>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='other' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='351' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_symmetric_difference(hb_set_t*, const hb_set_t*) -->
    <function-decl name='hb_set_symmetric_difference' mangled-name='hb_set_symmetric_difference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='366' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_symmetric_difference'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='366' column='1'/>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='other' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='367' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_set_invert(hb_set_t*) -->
    <function-decl name='hb_set_invert' mangled-name='hb_set_invert' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='381' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_invert'>
      <!-- parameter of type 'hb_set_t*' -->
      <parameter type-id='type-id-2289' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='381' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- unsigned int hb_set_get_population(const hb_set_t*) -->
    <function-decl name='hb_set_get_population' mangled-name='hb_set_get_population' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='397' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_get_population'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='397' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_codepoint_t hb_set_get_min(const hb_set_t*) -->
    <function-decl name='hb_set_get_min' mangled-name='hb_set_get_min' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='413' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_get_min'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='413' column='1'/>
      <!-- typedef hb_codepoint_t -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- hb_codepoint_t hb_set_get_max(const hb_set_t*) -->
    <function-decl name='hb_set_get_max' mangled-name='hb_set_get_max' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='429' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_get_max'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='429' column='1'/>
      <!-- typedef hb_codepoint_t -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- hb_bool_t hb_set_next(const hb_set_t*, hb_codepoint_t*) -->
    <function-decl name='hb_set_next' mangled-name='hb_set_next' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='446' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_next'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='446' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='codepoint' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='447' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_set_next_range(const hb_set_t*, hb_codepoint_t*, hb_codepoint_t*) -->
    <function-decl name='hb_set_next_range' mangled-name='hb_set_next_range' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='466' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_set_next_range'>
      <!-- parameter of type 'const hb_set_t*' -->
      <parameter type-id='type-id-2524' name='set' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='466' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='first' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='467' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='last' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-set.cc' line='468' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-shape-plan.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- hb_shape_plan_t* hb_shape_plan_create(hb_face_t*, const hb_segment_properties_t*, const hb_feature_t*, unsigned int, const char* const*) -->
    <function-decl name='hb_shape_plan_create' mangled-name='hb_shape_plan_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='112' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_create'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='112' column='1'/>
      <!-- parameter of type 'const hb_segment_properties_t*' -->
      <parameter type-id='type-id-175' name='props' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='113' column='1'/>
      <!-- parameter of type 'const hb_feature_t*' -->
      <parameter type-id='type-id-387' name='user_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='114' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='num_user_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='115' column='1'/>
      <!-- parameter of type 'const char* const*' -->
      <parameter type-id='type-id-2529' name='shaper_list' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='116' column='1'/>
      <!-- hb_shape_plan_t* -->
      <return type-id='type-id-205'/>
    </function-decl>
    <!-- hb_shape_plan_t* hb_shape_plan_get_empty() -->
    <function-decl name='hb_shape_plan_get_empty' mangled-name='hb_shape_plan_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='164' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_get_empty'>
      <!-- hb_shape_plan_t* -->
      <return type-id='type-id-205'/>
    </function-decl>
    <!-- hb_shape_plan_t* hb_shape_plan_reference(hb_shape_plan_t*) -->
    <function-decl name='hb_shape_plan_reference' mangled-name='hb_shape_plan_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='200' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_reference'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205' name='shape_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='200' column='1'/>
      <!-- hb_shape_plan_t* -->
      <return type-id='type-id-205'/>
    </function-decl>
    <!-- void hb_shape_plan_destroy(hb_shape_plan_t*) -->
    <function-decl name='hb_shape_plan_destroy' mangled-name='hb_shape_plan_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='214' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_destroy'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205' name='shape_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='214' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_shape_plan_set_user_data(hb_shape_plan_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_shape_plan_set_user_data' mangled-name='hb_shape_plan_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='242' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_set_user_data'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205' name='shape_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='242' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='243' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='244' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='245' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='246' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_shape_plan_get_user_data(hb_shape_plan_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_shape_plan_get_user_data' mangled-name='hb_shape_plan_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='263' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_get_user_data'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205' name='shape_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='263' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='264' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- hb_bool_t hb_shape_plan_execute(hb_shape_plan_t*, hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int) -->
    <function-decl name='hb_shape_plan_execute' mangled-name='hb_shape_plan_execute' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='285' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_execute'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205' name='shape_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='285' column='1'/>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='286' column='1'/>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='287' column='1'/>
      <!-- parameter of type 'const hb_feature_t*' -->
      <parameter type-id='type-id-387' name='features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='288' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='num_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='289' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_shape_plan_t* hb_shape_plan_create_cached(hb_face_t*, const hb_segment_properties_t*, const hb_feature_t*, unsigned int, const char* const*) -->
    <function-decl name='hb_shape_plan_create_cached' mangled-name='hb_shape_plan_create_cached' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='402' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_create_cached'>
      <!-- parameter of type 'hb_face_t*' -->
      <parameter type-id='type-id-167' name='face' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='402' column='1'/>
      <!-- parameter of type 'const hb_segment_properties_t*' -->
      <parameter type-id='type-id-175' name='props' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='403' column='1'/>
      <!-- parameter of type 'const hb_feature_t*' -->
      <parameter type-id='type-id-387' name='user_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='404' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='num_user_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='405' column='1'/>
      <!-- parameter of type 'const char* const*' -->
      <parameter type-id='type-id-2529' name='shaper_list' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='406' column='1'/>
      <!-- hb_shape_plan_t* -->
      <return type-id='type-id-205'/>
    </function-decl>
    <!-- const char* hb_shape_plan_get_shaper(hb_shape_plan_t*) -->
    <function-decl name='hb_shape_plan_get_shaper' mangled-name='hb_shape_plan_get_shaper' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='489' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_plan_get_shaper'>
      <!-- parameter of type 'hb_shape_plan_t*' -->
      <parameter type-id='type-id-205' name='shape_plan' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape-plan.cc' line='489' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-17'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-shape.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- const char* const -->
    <qualified-type-def type-id='type-id-17' const='yes' id='type-id-2530'/>
    <!-- const char* const* -->
    <pointer-type-def type-id='type-id-2530' size-in-bits='64' id='type-id-2529'/>
    <!-- hb_bool_t hb_feature_from_string(const char*, int, hb_feature_t*) -->
    <function-decl name='hb_feature_from_string' mangled-name='hb_feature_from_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='212' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_feature_from_string'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-17' name='str' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='212' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-11' name='len' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='212' column='1'/>
      <!-- parameter of type 'hb_feature_t*' -->
      <parameter type-id='type-id-227' name='feature' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='213' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_feature_to_string(hb_feature_t*, char*, unsigned int) -->
    <function-decl name='hb_feature_to_string' mangled-name='hb_feature_to_string' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='243' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_feature_to_string'>
      <!-- parameter of type 'hb_feature_t*' -->
      <parameter type-id='type-id-227' name='feature' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='243' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-44' name='buf' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='244' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='size' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='244' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- const char** hb_shape_list_shapers() -->
    <function-decl name='hb_shape_list_shapers' mangled-name='hb_shape_list_shapers' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='298' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_list_shapers'>
      <!-- const char** -->
      <return type-id='type-id-141'/>
    </function-decl>
    <!-- hb_bool_t hb_shape_full(hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int, const char* const*) -->
    <function-decl name='hb_shape_full' mangled-name='hb_shape_full' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape_full'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='347' column='1'/>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='348' column='1'/>
      <!-- parameter of type 'const hb_feature_t*' -->
      <parameter type-id='type-id-387' name='features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='349' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='num_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='350' column='1'/>
      <!-- parameter of type 'const char* const*' -->
      <parameter type-id='type-id-2529' name='shaper_list' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='351' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void hb_shape(hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int) -->
    <function-decl name='hb_shape' mangled-name='hb_shape' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='379' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_shape'>
      <!-- parameter of type 'hb_font_t*' -->
      <parameter type-id='type-id-158' name='font' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='379' column='1'/>
      <!-- parameter of type 'hb_buffer_t*' -->
      <parameter type-id='type-id-155' name='buffer' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='380' column='1'/>
      <!-- parameter of type 'const hb_feature_t*' -->
      <parameter type-id='type-id-387' name='features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='381' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-18' name='num_features' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-shape.cc' line='382' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='hb-unicode.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src' language='LANG_C_plus_plus'>
    <!-- hb_unicode_funcs_t* hb_unicode_funcs_get_default() -->
    <function-decl name='hb_unicode_funcs_get_default' mangled-name='hb_unicode_funcs_get_default' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='129' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_get_default'>
      <!-- hb_unicode_funcs_t* -->
      <return type-id='type-id-91'/>
    </function-decl>
    <!-- hb_unicode_funcs_t* hb_unicode_funcs_create(hb_unicode_funcs_t*) -->
    <function-decl name='hb_unicode_funcs_create' mangled-name='hb_unicode_funcs_create' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='169' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_create'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='parent' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='169' column='1'/>
      <!-- hb_unicode_funcs_t* -->
      <return type-id='type-id-91'/>
    </function-decl>
    <!-- hb_unicode_funcs_t* hb_unicode_funcs_get_empty() -->
    <function-decl name='hb_unicode_funcs_get_empty' mangled-name='hb_unicode_funcs_get_empty' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='215' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_get_empty'>
      <!-- hb_unicode_funcs_t* -->
      <return type-id='type-id-91'/>
    </function-decl>
    <!-- hb_unicode_funcs_t* hb_unicode_funcs_reference(hb_unicode_funcs_t*) -->
    <function-decl name='hb_unicode_funcs_reference' mangled-name='hb_unicode_funcs_reference' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='231' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_reference'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='231' column='1'/>
      <!-- hb_unicode_funcs_t* -->
      <return type-id='type-id-91'/>
    </function-decl>
    <!-- void hb_unicode_funcs_destroy(hb_unicode_funcs_t*) -->
    <function-decl name='hb_unicode_funcs_destroy' mangled-name='hb_unicode_funcs_destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='245' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_destroy'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='245' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_unicode_funcs_set_user_data(hb_unicode_funcs_t*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) -->
    <function-decl name='hb_unicode_funcs_set_user_data' mangled-name='hb_unicode_funcs_set_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='274' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_user_data'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='274' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='275' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='276' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='277' column='1'/>
      <!-- parameter of type 'typedef hb_bool_t' -->
      <parameter type-id='type-id-39' name='replace' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='278' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- void* hb_unicode_funcs_get_user_data(hb_unicode_funcs_t*, hb_user_data_key_t*) -->
    <function-decl name='hb_unicode_funcs_get_user_data' mangled-name='hb_unicode_funcs_get_user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='295' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_get_user_data'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='295' column='1'/>
      <!-- parameter of type 'hb_user_data_key_t*' -->
      <parameter type-id='type-id-24' name='key' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='296' column='1'/>
      <!-- void* -->
      <return type-id='type-id-19'/>
    </function-decl>
    <!-- void hb_unicode_funcs_make_immutable(hb_unicode_funcs_t*) -->
    <function-decl name='hb_unicode_funcs_make_immutable' mangled-name='hb_unicode_funcs_make_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='311' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_make_immutable'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='311' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_bool_t hb_unicode_funcs_is_immutable(hb_unicode_funcs_t*) -->
    <function-decl name='hb_unicode_funcs_is_immutable' mangled-name='hb_unicode_funcs_is_immutable' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='330' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_is_immutable'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='330' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_unicode_funcs_t* hb_unicode_funcs_get_parent(hb_unicode_funcs_t*) -->
    <function-decl name='hb_unicode_funcs_get_parent' mangled-name='hb_unicode_funcs_get_parent' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='346' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_get_parent'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='346' column='1'/>
      <!-- hb_unicode_funcs_t* -->
      <return type-id='type-id-91'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_combining_class_func(hb_unicode_funcs_t*, hb_unicode_combining_class_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_combining_class_func' mangled-name='hb_unicode_funcs_set_combining_class_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_combining_class_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_combining_class_func_t' -->
      <parameter type-id='type-id-109' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_compose_func(hb_unicode_funcs_t*, hb_unicode_compose_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_compose_func' mangled-name='hb_unicode_funcs_set_compose_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_compose_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_compose_func_t' -->
      <parameter type-id='type-id-114' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_decompose_compatibility_func(hb_unicode_funcs_t*, hb_unicode_decompose_compatibility_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_decompose_compatibility_func' mangled-name='hb_unicode_funcs_set_decompose_compatibility_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_decompose_compatibility_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_decompose_compatibility_func_t' -->
      <parameter type-id='type-id-116' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_decompose_func(hb_unicode_funcs_t*, hb_unicode_decompose_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_decompose_func' mangled-name='hb_unicode_funcs_set_decompose_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_decompose_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_decompose_func_t' -->
      <parameter type-id='type-id-115' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_eastasian_width_func(hb_unicode_funcs_t*, hb_unicode_eastasian_width_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_eastasian_width_func' mangled-name='hb_unicode_funcs_set_eastasian_width_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_eastasian_width_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_eastasian_width_func_t' -->
      <parameter type-id='type-id-110' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_general_category_func(hb_unicode_funcs_t*, hb_unicode_general_category_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_general_category_func' mangled-name='hb_unicode_funcs_set_general_category_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_general_category_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_general_category_func_t' -->
      <parameter type-id='type-id-111' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_mirroring_func(hb_unicode_funcs_t*, hb_unicode_mirroring_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_mirroring_func' mangled-name='hb_unicode_funcs_set_mirroring_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_mirroring_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_mirroring_func_t' -->
      <parameter type-id='type-id-112' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- void hb_unicode_funcs_set_script_func(hb_unicode_funcs_t*, hb_unicode_script_func_t, void*, hb_destroy_func_t) -->
    <function-decl name='hb_unicode_funcs_set_script_func' mangled-name='hb_unicode_funcs_set_script_func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_funcs_set_script_func'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_unicode_script_func_t' -->
      <parameter type-id='type-id-113' name='func' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-19' name='user_data' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- parameter of type 'typedef hb_destroy_func_t' -->
      <parameter type-id='type-id-20' name='destroy' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='377' column='1'/>
      <!-- void -->
      <return type-id='type-id-27'/>
    </function-decl>
    <!-- hb_codepoint_t hb_unicode_mirroring(hb_unicode_funcs_t*, hb_codepoint_t) -->
    <function-decl name='hb_unicode_mirroring' mangled-name='hb_unicode_mirroring' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_mirroring'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='unicode' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- typedef hb_codepoint_t -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- hb_script_t hb_unicode_script(hb_unicode_funcs_t*, hb_codepoint_t) -->
    <function-decl name='hb_unicode_script' mangled-name='hb_unicode_script' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_script'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='unicode' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- enum hb_script_t -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- hb_unicode_combining_class_t hb_unicode_combining_class(hb_unicode_funcs_t*, hb_codepoint_t) -->
    <function-decl name='hb_unicode_combining_class' mangled-name='hb_unicode_combining_class' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_combining_class'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='unicode' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- enum hb_unicode_combining_class_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- hb_unicode_general_category_t hb_unicode_general_category(hb_unicode_funcs_t*, hb_codepoint_t) -->
    <function-decl name='hb_unicode_general_category' mangled-name='hb_unicode_general_category' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_general_category'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='unicode' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- enum hb_unicode_general_category_t -->
      <return type-id='type-id-78'/>
    </function-decl>
    <!-- unsigned int hb_unicode_eastasian_width(hb_unicode_funcs_t*, hb_codepoint_t) -->
    <function-decl name='hb_unicode_eastasian_width' mangled-name='hb_unicode_eastasian_width' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_eastasian_width'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='unicode' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='389' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- hb_bool_t hb_unicode_compose(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t, hb_codepoint_t*) -->
    <function-decl name='hb_unicode_compose' mangled-name='hb_unicode_compose' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='406' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_compose'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='406' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='a' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='407' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='b' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='408' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='ab' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='409' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- hb_bool_t hb_unicode_decompose(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*, hb_codepoint_t*) -->
    <function-decl name='hb_unicode_decompose' mangled-name='hb_unicode_decompose' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='428' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_decompose'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='428' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='ab' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='429' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='a' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='430' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='b' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='431' column='1'/>
      <!-- typedef hb_bool_t -->
      <return type-id='type-id-39'/>
    </function-decl>
    <!-- unsigned int hb_unicode_decompose_compatibility(hb_unicode_funcs_t*, hb_codepoint_t, hb_codepoint_t*) -->
    <function-decl name='hb_unicode_decompose_compatibility' mangled-name='hb_unicode_decompose_compatibility' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='449' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hb_unicode_decompose_compatibility'>
      <!-- parameter of type 'hb_unicode_funcs_t*' -->
      <parameter type-id='type-id-91' name='ufuncs' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef hb_codepoint_t' -->
      <parameter type-id='type-id-79' name='u' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='450' column='1'/>
      <!-- parameter of type 'hb_codepoint_t*' -->
      <parameter type-id='type-id-157' name='decomposed' filepath='/tmp/legendre/spack-stage/spack-stage-04g73E/harfbuzz-0.9.37/src/hb-unicode.cc' line='451' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-18'/>
    </function-decl>
  </abi-instr>
</abi-corpus>
